package ui;

import java.awt.Color;
import java.awt.Component;
import java.awt.Container;
import java.awt.Font;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.GridLayout;
import java.awt.Image;
import java.awt.Panel;
import java.awt.Rectangle;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.image.BufferedImage;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.UnsupportedEncodingException;
import java.net.MalformedURLException;
import java.net.URL;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Date;
import java.util.List;
import java.util.Map;
import java.util.Set;

import javax.imageio.ImageIO;
import javax.swing.ButtonModel;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JRadioButton;
import javax.swing.border.LineBorder;
import javax.swing.border.TitledBorder;

import org.apache.log4j.Level;
import org.apache.log4j.Logger;
import org.netbeans.lib.awtextra.AbsoluteConstraints;

import ui.myJLabel.AgJLabel;
import ui.myJLabel.ArriveCoilJLabel;
import ui.myJLabel.CursorJLabel;
import ui.myJLabel.LightJLabel;

import com.hgits.common.log.MTCLog;
import com.hgits.control.FontControl;
import com.hgits.control.FunctionControl;
import com.hgits.control.LogControl;
import com.hgits.control.ThreadPoolControl;
import com.hgits.hardware.Video;
import com.hgits.hardware.impl.video.GeaVideo;
import com.hgits.hardware.impl.video.Vc400Video;
import com.hgits.util.DoubleUtils;
import com.hgits.util.IntegerUtils;
import com.hgits.util.MyPropertiesUtils;
import com.hgits.util.hardware.LaneConfigUtils;
import com.hgits.vo.AxleGroup;
import com.hgits.vo.Constant;
import com.hgits.vo.Lane;
import com.hgits.vo.SpecialIssue;
import com.hgits.vo.Staff;

/**
 * 收费界面
 *
 * @author Wang Guodong
 */
public class ExtJFrame extends javax.swing.JFrame {

    private Logger logger = Logger.getLogger(ExtJFrame.class);

    /**
     * wdm通用视频卡
     */
    private static final String GEA_ID = "101";
    /**
     * vc4000视频采集卡
     */
    private static final String VC4000_ID = "102";

    /**
     * Creates new form MyJFrame
     */
    private ExtJFrame() {
        LogControl.logInfo("s1");
        setSize(1024, 768);
        setUndecorated(true);
        getContentPane().setBackground(new Color(128, 255, 173));
        long s1 = System.currentTimeMillis();
//        UIUtils.removeMinMaxClose(this);
        long s2 = System.currentTimeMillis();
        initComponents();
        long s3 = System.currentTimeMillis();
        videoMonitor();
        long s4 = System.currentTimeMillis();
        initAgLabel();
        initPoints();
        initCentralPanel();
        initForeground();
        LineBorder border = new LineBorder(Color.black, 1);
        getRootPane().setBorder(border);
        initCoilLabel();
        initLightLabel();
        initFontNew(this);
        long s5 = System.currentTimeMillis();
        initFocusJFrame();
        long s6 = System.currentTimeMillis();
        LogControl.logInfo("s2-s1=" + (s2 - s1));
        LogControl.logInfo("s3-s2=" + (s3 - s2));
        LogControl.logInfo("s4-s3=" + (s4 - s3));
        LogControl.logInfo("s5-s4=" + (s5 - s4));
        LogControl.logInfo("s6-s5=" + (s6 - s5));
        ThreadPoolControl.getThreadPoolInstance().execute(new TimeTask());
        NoTileDrag.setCanDraged(this);

//        ThreadPoolControl.getThreadPoolInstance().execute(new RepaintTask());
    }

    private static ExtJFrame extJFrame;

    /**
     * 获取唯一实例化对象
     *
     * @return 唯一实例化对象
     */
    public static synchronized ExtJFrame getSingleInstance() {
        if (extJFrame == null) {
            extJFrame = new ExtJFrame();
        }
        return extJFrame;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        vehQueButtonGroup = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        cartButtonGroup = new javax.swing.ButtonGroup();
        simulateButtonGroup = new javax.swing.ButtonGroup();
        axleTypeButtonGroup = new javax.swing.ButtonGroup();
        buttonGroup7 = new javax.swing.ButtonGroup();
        alarmButtonGroup = new javax.swing.ButtonGroup();
        collectButtonGroup = new javax.swing.ButtonGroup();
        collectButtonGroupNew = new javax.swing.ButtonGroup();
        mainJPanel = new javax.swing.JPanel();
        upJPanel = new javax.swing.JPanel();
        vehClassjPanel = new javax.swing.JPanel();
        vehClassJlabel1 = new javax.swing.JLabel();
        vehClassJlabel2 = new javax.swing.JLabel();
        militaryjLabel = new javax.swing.JLabel();
        entryJPanel = new javax.swing.JPanel();
        entryJLabel1 = new javax.swing.JLabel();
        entryJLabel2 = new javax.swing.JLabel();
        entryJLabel3 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        fareJPanel = new javax.swing.JPanel();
        fareJLabel1 = new javax.swing.JLabel();
        fareJLabel2 = new javax.swing.JLabel();
        fareJLabel3 = new javax.swing.JLabel();
        mopJPanel = new javax.swing.JPanel();
        mopJLabel1 = new javax.swing.JLabel();
        mopJLabel2 = new javax.swing.JLabel();
        mopJLabel3 = new javax.swing.JLabel();
        railJPanel = new javax.swing.JPanel();
        railJLabel1 = new javax.swing.JLabel();
        railJLabel2 = new javax.swing.JLabel();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        plateNumJLabel1 = new javax.swing.JLabel();
        plateNumJLabel2 = new javax.swing.JLabel();
        plateNumJLabel3 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        lastVehJPanel = new javax.swing.JPanel();
        lastVehJLabel1 = new javax.swing.JLabel();
        lastVehJLabel2 = new javax.swing.JLabel();
        lastVehJLabel3 = new javax.swing.JLabel();
        lastVehJLabel4 = new javax.swing.JLabel();
        lastVehJLabel5 = new javax.swing.JLabel();
        lastVehJLabel6 = new javax.swing.JLabel();
        msgJPanel = new javax.swing.JPanel();
        mainMsgJLabel = new javax.swing.JLabel();
        msgJLabel = new javax.swing.JLabel();
        specialJLabel1 = new javax.swing.JLabel();
        specialJLabel2 = new javax.swing.JLabel();
        panel1 = new java.awt.Panel();
        panel2 = new java.awt.Panel();
        panel3 = new java.awt.Panel();
        panel4 = new java.awt.Panel();
        panel5 = new java.awt.Panel();
        centerJPanel = new javax.swing.JPanel();
        blankJPanel = new javax.swing.JPanel();
        vehAndWeightJPanel = new javax.swing.JPanel();
        vehJPanel = new javax.swing.JPanel();
        cardInfoJlabel1 = new javax.swing.JLabel();
        cardInfoJlabel2 = new javax.swing.JLabel();
        cardInfoJlabel3 = new javax.swing.JLabel();
        cardInfoJlabel4 = new javax.swing.JLabel();
        cardInfoJlabel5 = new javax.swing.JLabel();
        cardInfoJlabel6 = new javax.swing.JLabel();
        cardInfoJlabel7 = new javax.swing.JLabel();
        cardInfoJlabel8 = new javax.swing.JLabel();
        weightJPanel = new javax.swing.JPanel();
        weightInfoJlabel1 = new javax.swing.JLabel();
        weightInfoJlabel2 = new javax.swing.JLabel();
        weightInfoJlabel3 = new javax.swing.JLabel();
        weightInfoJlabel4 = new javax.swing.JLabel();
        weightInfoJlabel5 = new javax.swing.JLabel();
        weightInfoJlabel6 = new javax.swing.JLabel();
        weightInfoJlabel7 = new javax.swing.JLabel();
        weightInfoJlabel8 = new javax.swing.JLabel();
        vehQueJPanel = new javax.swing.JPanel();
        vehShaftJPanel = new javax.swing.JPanel();
        inputFareJPanel = new javax.swing.JPanel();
        inputFare1 = new javax.swing.JPanel();
        inputFareJlabel1 = new javax.swing.JLabel();
        inputFareJlabel2 = new javax.swing.JLabel();
        inputFareJlabel3 = new javax.swing.JLabel();
        inputFareJlabel4 = new javax.swing.JLabel();
        inputFareJlabel5 = new javax.swing.JLabel();
        inputFareJlabel6 = new javax.swing.JLabel();
        cardRoomJPanel = new javax.swing.JPanel();
        simulateJPanel = new javax.swing.JPanel();
        axleTypeJPanel = new javax.swing.JPanel();
        plateColorJPanel = new javax.swing.JPanel();
        jLabel40 = new javax.swing.JLabel();
        y1 = new javax.swing.JRadioButton();
        jLabel38 = new javax.swing.JLabel();
        y2 = new javax.swing.JRadioButton();
        jLabel44 = new javax.swing.JLabel();
        y3 = new javax.swing.JRadioButton();
        jLabel43 = new javax.swing.JLabel();
        y4 = new javax.swing.JRadioButton();
        jLabel47 = new javax.swing.JLabel();
        y5 = new javax.swing.JRadioButton();
        jLabel46 = new javax.swing.JLabel();
        y6 = new javax.swing.JRadioButton();
        y7 = new javax.swing.JRadioButton();
        y8 = new javax.swing.JRadioButton();
        jLabel45 = new javax.swing.JLabel();
        jLabel48 = new javax.swing.JLabel();
        invoiceJPanel = new javax.swing.JPanel();
        ticketJPanel1 = new javax.swing.JPanel();
        ticketJLabel1 = new javax.swing.JLabel();
        ticketJPanel2 = new javax.swing.JPanel();
        ticketJLabel2 = new javax.swing.JLabel();
        entryInfoJPanel = new javax.swing.JPanel();
        entryInfoJlabel1 = new javax.swing.JLabel();
        entryInfoJlabel2 = new javax.swing.JLabel();
        entryInfoJlabel3 = new javax.swing.JLabel();
        entryInfoJlabel4 = new javax.swing.JLabel();
        entryInfoJlabel5 = new javax.swing.JLabel();
        entryInfoJlabel6 = new javax.swing.JLabel();
        entryInfoJlabel7 = new javax.swing.JLabel();
        entryVehPhoto = new javax.swing.JLabel();
        violateVehJPanel = new javax.swing.JPanel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        freeVehJPanel = new javax.swing.JPanel();
        jLabel36 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        blackPlateJPanel = new javax.swing.JPanel();
        blkVehJLabel1 = new javax.swing.JLabel();
        blkVehJLabel2 = new javax.swing.JLabel();
        blkVehJLabel3 = new javax.swing.JLabel();
        blkVehJLabel4 = new javax.swing.JLabel();
        blkVehJLabel5 = new javax.swing.JLabel();
        collectJPanel = new javax.swing.JPanel();
        plateJPanel = new javax.swing.JPanel();
        rtpJPanel = new javax.swing.JPanel();
        rtpImgPanel = new javax.swing.JPanel();
        rtpImgJLabel = new javax.swing.JLabel();
        plate1JPanel = new javax.swing.JPanel();
        jPanelCHA = new javax.swing.JPanel();
        jPanelCHA1 = new javax.swing.JPanel();
        CHjLabel1 = new javax.swing.JLabel();
        ENjLabel1 = new javax.swing.JLabel();
        jPanelCHA2 = new javax.swing.JPanel();
        CHjLabel2 = new javax.swing.JLabel();
        ENjLabel2 = new javax.swing.JLabel();
        jPanelCHA3 = new javax.swing.JPanel();
        CHjLabel3 = new javax.swing.JLabel();
        ENjLabel3 = new javax.swing.JLabel();
        jPanelCHA4 = new javax.swing.JPanel();
        CHjLabel4 = new javax.swing.JLabel();
        ENjLabel4 = new javax.swing.JLabel();
        jPanelCHA5 = new javax.swing.JPanel();
        CHjLabel5 = new javax.swing.JLabel();
        ENjLabel5 = new javax.swing.JLabel();
        jPanelCHA6 = new javax.swing.JPanel();
        CHjLabel6 = new javax.swing.JLabel();
        ENjLabel6 = new javax.swing.JLabel();
        jPanelCHA7 = new javax.swing.JPanel();
        CHjLabel7 = new javax.swing.JLabel();
        ENjLabel7 = new javax.swing.JLabel();
        jPanelCHA8 = new javax.swing.JPanel();
        CHjLabel8 = new javax.swing.JLabel();
        ENjLabel8 = new javax.swing.JLabel();
        jPanelCHA9 = new javax.swing.JPanel();
        CHjLabel9 = new javax.swing.JLabel();
        ENjLabel9 = new javax.swing.JLabel();
        jPanelCHA10 = new javax.swing.JPanel();
        CHjLabel10 = new javax.swing.JLabel();
        ENjLabel10 = new javax.swing.JLabel();
        jPanelCHA11 = new javax.swing.JPanel();
        CHjLabel11 = new javax.swing.JLabel();
        ENjLabel11 = new javax.swing.JLabel();
        jPanelCHA12 = new javax.swing.JPanel();
        CHjLabel12 = new javax.swing.JLabel();
        ENjLabel12 = new javax.swing.JLabel();
        jPanelCHA13 = new javax.swing.JPanel();
        CHjLabel13 = new javax.swing.JLabel();
        ENjLabel13 = new javax.swing.JLabel();
        jPanelCHA14 = new javax.swing.JPanel();
        CHjLabel14 = new javax.swing.JLabel();
        ENjLabel14 = new javax.swing.JLabel();
        jPanelCHA15 = new javax.swing.JPanel();
        CHjLabel15 = new javax.swing.JLabel();
        ENjLabel15 = new javax.swing.JLabel();
        jPanelCHA16 = new javax.swing.JPanel();
        CHjLabel16 = new javax.swing.JLabel();
        ENjLabel16 = new javax.swing.JLabel();
        jPanelCHA17 = new javax.swing.JPanel();
        CHjLabel17 = new javax.swing.JLabel();
        ENjLabel17 = new javax.swing.JLabel();
        jPanelCHA18 = new javax.swing.JPanel();
        CHjLabel18 = new javax.swing.JLabel();
        ENjLabel18 = new javax.swing.JLabel();
        jPanelCHA19 = new javax.swing.JPanel();
        CHjLabel19 = new javax.swing.JLabel();
        ENjLabel19 = new javax.swing.JLabel();
        jPanelCHA20 = new javax.swing.JPanel();
        CHjLabel20 = new javax.swing.JLabel();
        ENjLabel20 = new javax.swing.JLabel();
        jPanelCHA21 = new javax.swing.JPanel();
        CHjLabel21 = new javax.swing.JLabel();
        ENjLabel21 = new javax.swing.JLabel();
        jPanelCHA22 = new javax.swing.JPanel();
        CHjLabel22 = new javax.swing.JLabel();
        ENjLabel22 = new javax.swing.JLabel();
        jPanelCHA23 = new javax.swing.JPanel();
        CHjLabel23 = new javax.swing.JLabel();
        ENjLabel23 = new javax.swing.JLabel();
        jPanelCHA24 = new javax.swing.JPanel();
        CHjLabel24 = new javax.swing.JLabel();
        ENjLabel24 = new javax.swing.JLabel();
        jPanelCHA25 = new javax.swing.JPanel();
        CHjLabel25 = new javax.swing.JLabel();
        ENjLabel25 = new javax.swing.JLabel();
        jPanelCHA26 = new javax.swing.JPanel();
        CHjLabel26 = new javax.swing.JLabel();
        ENjLabel26 = new javax.swing.JLabel();
        jPanelCHA27 = new javax.swing.JPanel();
        CHjLabel27 = new javax.swing.JLabel();
        ENjLabel27 = new javax.swing.JLabel();
        jPanelCHA28 = new javax.swing.JPanel();
        CHjLabel28 = new javax.swing.JLabel();
        ENjLabel28 = new javax.swing.JLabel();
        jPanelCHA29 = new javax.swing.JPanel();
        CHjLabel29 = new javax.swing.JLabel();
        ENjLabel29 = new javax.swing.JLabel();
        jPanelCHA30 = new javax.swing.JPanel();
        CHjLabel30 = new javax.swing.JLabel();
        ENjLabel30 = new javax.swing.JLabel();
        plate2JPanel = new javax.swing.JPanel();
        jPanelCHB = new javax.swing.JPanel();
        jPanelCHA32 = new javax.swing.JPanel();
        CHjLabel31 = new javax.swing.JLabel();
        ENjLabel31 = new javax.swing.JLabel();
        jPanelCHA33 = new javax.swing.JPanel();
        CHjLabel32 = new javax.swing.JLabel();
        ENjLabel32 = new javax.swing.JLabel();
        jPanelCHA34 = new javax.swing.JPanel();
        CHjLabel33 = new javax.swing.JLabel();
        ENjLabel33 = new javax.swing.JLabel();
        jPanelCHA35 = new javax.swing.JPanel();
        CHjLabel34 = new javax.swing.JLabel();
        ENjLabel34 = new javax.swing.JLabel();
        jPanelCHA36 = new javax.swing.JPanel();
        CHjLabel35 = new javax.swing.JLabel();
        ENjLabel35 = new javax.swing.JLabel();
        jPanelCHA37 = new javax.swing.JPanel();
        CHjLabel36 = new javax.swing.JLabel();
        ENjLabel36 = new javax.swing.JLabel();
        jPanelCHA38 = new javax.swing.JPanel();
        CHjLabel37 = new javax.swing.JLabel();
        ENjLabel37 = new javax.swing.JLabel();
        jPanelCHA39 = new javax.swing.JPanel();
        CHjLabel38 = new javax.swing.JLabel();
        ENjLabel38 = new javax.swing.JLabel();
        jPanelCHA40 = new javax.swing.JPanel();
        CHjLabel39 = new javax.swing.JLabel();
        ENjLabel39 = new javax.swing.JLabel();
        jPanelCHA41 = new javax.swing.JPanel();
        CHjLabel40 = new javax.swing.JLabel();
        ENjLabel40 = new javax.swing.JLabel();
        jPanelCHA42 = new javax.swing.JPanel();
        CHjLabel41 = new javax.swing.JLabel();
        ENjLabel41 = new javax.swing.JLabel();
        jPanelCHA43 = new javax.swing.JPanel();
        CHjLabel42 = new javax.swing.JLabel();
        ENjLabel42 = new javax.swing.JLabel();
        jPanelCHA44 = new javax.swing.JPanel();
        CHjLabel43 = new javax.swing.JLabel();
        ENjLabel43 = new javax.swing.JLabel();
        jPanelCHA45 = new javax.swing.JPanel();
        CHjLabel44 = new javax.swing.JLabel();
        ENjLabel44 = new javax.swing.JLabel();
        jPanelCHA46 = new javax.swing.JPanel();
        CHjLabel45 = new javax.swing.JLabel();
        ENjLabel45 = new javax.swing.JLabel();
        jPanelCHA47 = new javax.swing.JPanel();
        CHjLabel46 = new javax.swing.JLabel();
        ENjLabel46 = new javax.swing.JLabel();
        jPanelCHA48 = new javax.swing.JPanel();
        CHjLabel47 = new javax.swing.JLabel();
        ENjLabel47 = new javax.swing.JLabel();
        jPanelCHA49 = new javax.swing.JPanel();
        CHjLabel48 = new javax.swing.JLabel();
        ENjLabel48 = new javax.swing.JLabel();
        jPanelCHA50 = new javax.swing.JPanel();
        CHjLabel49 = new javax.swing.JLabel();
        ENjLabel49 = new javax.swing.JLabel();
        jPanelCHA51 = new javax.swing.JPanel();
        CHjLabel50 = new javax.swing.JLabel();
        ENjLabel50 = new javax.swing.JLabel();
        jPanelCHA52 = new javax.swing.JPanel();
        CHjLabel51 = new javax.swing.JLabel();
        ENjLabel51 = new javax.swing.JLabel();
        jPanelCHA53 = new javax.swing.JPanel();
        CHjLabel52 = new javax.swing.JLabel();
        ENjLabel52 = new javax.swing.JLabel();
        jPanelCHA54 = new javax.swing.JPanel();
        CHjLabel53 = new javax.swing.JLabel();
        ENjLabel53 = new javax.swing.JLabel();
        jPanelCHA55 = new javax.swing.JPanel();
        CHjLabel54 = new javax.swing.JLabel();
        ENjLabel54 = new javax.swing.JLabel();
        jPanelCHA56 = new javax.swing.JPanel();
        CHjLabel55 = new javax.swing.JLabel();
        ENjLabel55 = new javax.swing.JLabel();
        jPanelCHA57 = new javax.swing.JPanel();
        CHjLabel56 = new javax.swing.JLabel();
        ENjLabel56 = new javax.swing.JLabel();
        jPanelCHA58 = new javax.swing.JPanel();
        CHjLabel57 = new javax.swing.JLabel();
        ENjLabel57 = new javax.swing.JLabel();
        jPanelCHA59 = new javax.swing.JPanel();
        CHjLabel58 = new javax.swing.JLabel();
        ENjLabel58 = new javax.swing.JLabel();
        jPanelCHA60 = new javax.swing.JPanel();
        CHjLabel59 = new javax.swing.JLabel();
        ENjLabel59 = new javax.swing.JLabel();
        jPanelCHA61 = new javax.swing.JPanel();
        CHjLabel60 = new javax.swing.JLabel();
        ENjLabel60 = new javax.swing.JLabel();
        plate3JPanel = new javax.swing.JPanel();
        jPanelCHC = new javax.swing.JPanel();
        jPanelCHA63 = new javax.swing.JPanel();
        CHjLabel61 = new javax.swing.JLabel();
        ENjLabel61 = new javax.swing.JLabel();
        jPanelCHA64 = new javax.swing.JPanel();
        CHjLabel62 = new javax.swing.JLabel();
        ENjLabel62 = new javax.swing.JLabel();
        jPanelCHA65 = new javax.swing.JPanel();
        CHjLabel63 = new javax.swing.JLabel();
        ENjLabel63 = new javax.swing.JLabel();
        jPanelCHA66 = new javax.swing.JPanel();
        CHjLabel64 = new javax.swing.JLabel();
        ENjLabel64 = new javax.swing.JLabel();
        jPanelCHA67 = new javax.swing.JPanel();
        CHjLabel65 = new javax.swing.JLabel();
        ENjLabel65 = new javax.swing.JLabel();
        jPanelCHA68 = new javax.swing.JPanel();
        CHjLabel66 = new javax.swing.JLabel();
        ENjLabel66 = new javax.swing.JLabel();
        jPanelCHA69 = new javax.swing.JPanel();
        CHjLabel67 = new javax.swing.JLabel();
        ENjLabel67 = new javax.swing.JLabel();
        jPanelCHA70 = new javax.swing.JPanel();
        CHjLabel68 = new javax.swing.JLabel();
        ENjLabel68 = new javax.swing.JLabel();
        jPanelCHA71 = new javax.swing.JPanel();
        CHjLabel69 = new javax.swing.JLabel();
        ENjLabel69 = new javax.swing.JLabel();
        jPanelCHA72 = new javax.swing.JPanel();
        CHjLabel70 = new javax.swing.JLabel();
        ENjLabel70 = new javax.swing.JLabel();
        jPanelCHA73 = new javax.swing.JPanel();
        CHjLabel71 = new javax.swing.JLabel();
        ENjLabel71 = new javax.swing.JLabel();
        jPanelCHA74 = new javax.swing.JPanel();
        CHjLabel72 = new javax.swing.JLabel();
        ENjLabel72 = new javax.swing.JLabel();
        jPanelCHA75 = new javax.swing.JPanel();
        CHjLabel73 = new javax.swing.JLabel();
        ENjLabel73 = new javax.swing.JLabel();
        jPanelCHA76 = new javax.swing.JPanel();
        CHjLabel74 = new javax.swing.JLabel();
        ENjLabel74 = new javax.swing.JLabel();
        jPanelCHA77 = new javax.swing.JPanel();
        CHjLabel75 = new javax.swing.JLabel();
        ENjLabel75 = new javax.swing.JLabel();
        jPanelCHA78 = new javax.swing.JPanel();
        CHjLabel76 = new javax.swing.JLabel();
        ENjLabel76 = new javax.swing.JLabel();
        jPanelCHA79 = new javax.swing.JPanel();
        CHjLabel77 = new javax.swing.JLabel();
        ENjLabel77 = new javax.swing.JLabel();
        jPanelCHA80 = new javax.swing.JPanel();
        CHjLabel78 = new javax.swing.JLabel();
        ENjLabel78 = new javax.swing.JLabel();
        jPanelCHA81 = new javax.swing.JPanel();
        CHjLabel79 = new javax.swing.JLabel();
        ENjLabel79 = new javax.swing.JLabel();
        jPanelCHA82 = new javax.swing.JPanel();
        CHjLabel80 = new javax.swing.JLabel();
        ENjLabel80 = new javax.swing.JLabel();
        jPanelCHA83 = new javax.swing.JPanel();
        CHjLabel81 = new javax.swing.JLabel();
        ENjLabel81 = new javax.swing.JLabel();
        jPanelCHA84 = new javax.swing.JPanel();
        CHjLabel82 = new javax.swing.JLabel();
        ENjLabel82 = new javax.swing.JLabel();
        jPanelCHA85 = new javax.swing.JPanel();
        CHjLabel83 = new javax.swing.JLabel();
        ENjLabel83 = new javax.swing.JLabel();
        jPanelCHA86 = new javax.swing.JPanel();
        CHjLabel84 = new javax.swing.JLabel();
        ENjLabel84 = new javax.swing.JLabel();
        jPanelCHA87 = new javax.swing.JPanel();
        CHjLabel85 = new javax.swing.JLabel();
        ENjLabel85 = new javax.swing.JLabel();
        jPanelCHA88 = new javax.swing.JPanel();
        CHjLabel86 = new javax.swing.JLabel();
        ENjLabel86 = new javax.swing.JLabel();
        jPanelCHA89 = new javax.swing.JPanel();
        CHjLabel87 = new javax.swing.JLabel();
        ENjLabel87 = new javax.swing.JLabel();
        jPanelCHA90 = new javax.swing.JPanel();
        CHjLabel88 = new javax.swing.JLabel();
        ENjLabel88 = new javax.swing.JLabel();
        jPanelCHA91 = new javax.swing.JPanel();
        CHjLabel89 = new javax.swing.JLabel();
        ENjLabel89 = new javax.swing.JLabel();
        jPanelCHA92 = new javax.swing.JPanel();
        CHjLabel90 = new javax.swing.JLabel();
        ENjLabel90 = new javax.swing.JLabel();
        jPanel13 = new javax.swing.JPanel();
        dateJLabel = new javax.swing.JLabel();
        timeJLabel = new javax.swing.JLabel();
        vehCntJLabel = new javax.swing.JLabel();
        jPanel14 = new javax.swing.JPanel();
        modeJLabel1 = new javax.swing.JLabel();
        modeJLabel2 = new javax.swing.JLabel();
        jPanel15 = new javax.swing.JPanel();
        jPanel20 = new javax.swing.JPanel();
        cartjLabel1 = new javax.swing.JLabel();
        cartjLabel2 = new javax.swing.JLabel();
        cartjLabel3 = new javax.swing.JLabel();
        cartjLabel4 = new javax.swing.JLabel();
        cartjLabel5 = new javax.swing.JLabel();
        jPanel21 = new javax.swing.JPanel();
        weightVehCntJLabel = new javax.swing.JLabel();
        errorMsgJLabel = new javax.swing.JLabel();
        jPanel16 = new javax.swing.JPanel();
        weighJLabel = new javax.swing.JLabel();
        veh1JPanel = new javax.swing.JPanel();
        veh1JLabel2 = new javax.swing.JLabel();
        veh1JLabel4 = new javax.swing.JLabel();
        veh1JLabel6 = new javax.swing.JLabel();
        veh1JLabel8 = new javax.swing.JLabel();
        veh2JPanel = new javax.swing.JPanel();
        veh2JLabel2 = new javax.swing.JLabel();
        veh2JLabel4 = new javax.swing.JLabel();
        veh2JLabel6 = new javax.swing.JLabel();
        veh2JLabel8 = new javax.swing.JLabel();
        veh3JPanel = new javax.swing.JPanel();
        veh3JLabel2 = new javax.swing.JLabel();
        veh3JLabel4 = new javax.swing.JLabel();
        veh3JLabel6 = new javax.swing.JLabel();
        veh3JLabel8 = new javax.swing.JLabel();
        jPanel19 = new javax.swing.JPanel();
        offLineJPanel1 = new javax.swing.JPanel();
        offLineJLabel1 = new javax.swing.JLabel();
        offLineJPanel2 = new javax.swing.JPanel();
        offLineJLabel2 = new javax.swing.JLabel();
        offLineJLabel3 = new javax.swing.JLabel();
        alarmJPanel = new javax.swing.JPanel();
        titleJPanel = new javax.swing.JPanel();
        titleJLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        mainJPanel.setBackground(new java.awt.Color(128, 255, 173));
        mainJPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        upJPanel.setBackground(java.awt.Color.white);
        upJPanel.setOpaque(false);
        upJPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        vehClassjPanel.setBackground(java.awt.Color.white);
        vehClassjPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        vehClassjPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        vehClassJlabel1.setBackground(java.awt.Color.lightGray);
        vehClassJlabel1.setFont(new java.awt.Font("宋体", 1, 18)); // NOI18N
        vehClassJlabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        vehClassJlabel1.setText("车型");
        vehClassJlabel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        vehClassJlabel1.setOpaque(true);
        vehClassjPanel.add(vehClassJlabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 68, 34));

        vehClassJlabel2.setFont(new java.awt.Font("宋体", 1, 95)); // NOI18N
        vehClassJlabel2.setForeground(java.awt.Color.blue);
        vehClassJlabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        vehClassJlabel2.setText("?");
        vehClassjPanel.add(vehClassJlabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 34, 68, 90));

        militaryjLabel.setFont(new java.awt.Font("宋体", 1, 24)); // NOI18N
        militaryjLabel.setForeground(java.awt.Color.blue);
        militaryjLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        militaryjLabel.setText("军警");
        vehClassjPanel.add(militaryjLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 124, 68, -1));

        upJPanel.add(vehClassjPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 68, 156));

        entryJPanel.setBackground(java.awt.Color.white);
        entryJPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        entryJPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        entryJLabel1.setBackground(java.awt.Color.lightGray);
        entryJLabel1.setFont(new java.awt.Font("宋体", 1, 18)); // NOI18N
        entryJLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        entryJLabel1.setText("入口站号");
        entryJLabel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        entryJLabel1.setOpaque(true);
        entryJPanel.add(entryJLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 170, 34));

        entryJLabel2.setFont(new java.awt.Font("宋体", 1, 30)); // NOI18N
        entryJLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        entryJLabel2.setText("9997");
        entryJLabel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        entryJPanel.add(entryJLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 34, 170, 40));

        entryJLabel3.setFont(new java.awt.Font("宋体", 1, 30)); // NOI18N
        entryJLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        entryJLabel3.setText("醴陵工业园");
        entryJPanel.add(entryJLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 74, 170, 80));

        upJPanel.add(entryJPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(269, 0, 170, 156));

        jPanel6.setBackground(java.awt.Color.white);
        jPanel6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel6.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        fareJPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        fareJPanel.setOpaque(false);
        fareJPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        fareJLabel1.setFont(new java.awt.Font("宋体", 0, 18)); // NOI18N
        fareJLabel1.setText("车费(元)");
        fareJPanel.add(fareJLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, 20));

        fareJLabel2.setFont(new java.awt.Font("宋体", 1, 55)); // NOI18N
        fareJLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        fareJLabel2.setText("9999999.99");
        fareJPanel.add(fareJLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 0, 310, 80));

        fareJLabel3.setFont(new java.awt.Font("宋体", 1, 24)); // NOI18N
        fareJLabel3.setForeground(java.awt.Color.red);
        fareJLabel3.setText("找零金额:999999999999999元");
        fareJPanel.add(fareJLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, 370, 24));

        jPanel6.add(fareJPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 390, 98));

        mopJPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        mopJPanel.setOpaque(false);
        mopJPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        mopJLabel1.setFont(new java.awt.Font("宋体", 1, 18)); // NOI18N
        mopJLabel1.setText("付款方式");
        mopJPanel.add(mopJLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 5, -1, -1));

        mopJLabel2.setFont(new java.awt.Font("宋体", 1, 20)); // NOI18N
        mopJLabel2.setForeground(java.awt.Color.blue);
        mopJLabel2.setText("ETC卡:99999999999999999999");
        mopJPanel.add(mopJLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 25, -1, -1));

        mopJLabel3.setFont(new java.awt.Font("宋体", 1, 24)); // NOI18N
        mopJLabel3.setText("ETC卡");
        mopJPanel.add(mopJLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 10, -1, -1));

        jPanel6.add(mopJPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 98, 390, 58));

        upJPanel.add(jPanel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(439, 0, 390, 156));

        railJPanel.setBackground(java.awt.Color.white);
        railJPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        railJPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        railJLabel1.setFont(new java.awt.Font("宋体", 1, 18)); // NOI18N
        railJLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        railJLabel1.setText("设备状态");
        railJPanel.add(railJLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1, 1, 176, 20));

        railJLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ui/img/extClose.png"))); // NOI18N
        railJPanel.add(railJLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(1, 20, 176, -1));

        upJPanel.add(railJPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(829, 0, 178, 156));

        jLayeredPane1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLayeredPane1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        plateNumJLabel1.setBackground(java.awt.Color.lightGray);
        plateNumJLabel1.setFont(new java.awt.Font("宋体", 1, 18)); // NOI18N
        plateNumJLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        plateNumJLabel1.setText("完整车牌号");
        plateNumJLabel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        plateNumJLabel1.setOpaque(true);
        jLayeredPane1.add(plateNumJLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 201, 34));

        plateNumJLabel2.setBackground(java.awt.Color.gray);
        plateNumJLabel2.setFont(new java.awt.Font("宋体", 1, 36)); // NOI18N
        plateNumJLabel2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        plateNumJLabel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        plateNumJLabel2.setOpaque(true);
        jLayeredPane1.add(plateNumJLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 34, 201, 47));

        plateNumJLabel3.setBackground(java.awt.Color.gray);
        plateNumJLabel3.setFont(new java.awt.Font("宋体", 1, 36)); // NOI18N
        plateNumJLabel3.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        plateNumJLabel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        plateNumJLabel3.setOpaque(true);
        jLayeredPane1.add(plateNumJLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 110, 201, 46));

        jPanel4.setBackground(new java.awt.Color(128, 255, 173));
        jPanel4.setOpaque(false);
        jPanel4.setLayout(new java.awt.GridLayout(1, 10));
        jLayeredPane1.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 71, 201, 50));
        jLayeredPane1.setLayer(jPanel4, javax.swing.JLayeredPane.DRAG_LAYER);

        upJPanel.add(jLayeredPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(68, 0, 201, 156));

        mainJPanel.add(upJPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(7, 0, 1008, 156));

        lastVehJPanel.setBackground(java.awt.Color.white);
        lastVehJPanel.setOpaque(false);
        lastVehJPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lastVehJLabel1.setBackground(java.awt.Color.white);
        lastVehJLabel1.setFont(new java.awt.Font("宋体", 1, 30)); // NOI18N
        lastVehJLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lastVehJLabel1.setText("1");
        lastVehJLabel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lastVehJLabel1.setOpaque(true);
        lastVehJPanel.add(lastVehJLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 68, 33));

        lastVehJLabel2.setBackground(java.awt.Color.white);
        lastVehJLabel2.setFont(new java.awt.Font("宋体", 0, 26)); // NOI18N
        lastVehJLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lastVehJLabel2.setText("湘A99999警");
        lastVehJLabel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lastVehJLabel2.setOpaque(true);
        lastVehJPanel.add(lastVehJLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(68, 0, 201, 33));

        lastVehJLabel3.setBackground(java.awt.Color.white);
        lastVehJLabel3.setFont(new java.awt.Font("宋体", 0, 21)); // NOI18N
        lastVehJLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lastVehJLabel3.setText("9997醴陵工业园");
        lastVehJLabel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lastVehJLabel3.setOpaque(true);
        lastVehJPanel.add(lastVehJLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(269, 0, 170, 33));

        lastVehJLabel4.setBackground(java.awt.Color.white);
        lastVehJLabel4.setFont(new java.awt.Font("宋体", 0, 20)); // NOI18N
        lastVehJLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lastVehJLabel4.setText("999999.99元");
        lastVehJLabel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lastVehJLabel4.setOpaque(true);
        lastVehJPanel.add(lastVehJLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(439, 0, 115, 33));

        lastVehJLabel5.setBackground(java.awt.Color.white);
        lastVehJLabel5.setFont(new java.awt.Font("宋体", 0, 20)); // NOI18N
        lastVehJLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lastVehJLabel5.setText("ETC卡:99999999999999999999");
        lastVehJLabel5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lastVehJLabel5.setOpaque(true);
        lastVehJPanel.add(lastVehJLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(554, 0, 275, 33));

        lastVehJLabel6.setBackground(java.awt.Color.white);
        lastVehJLabel6.setFont(new java.awt.Font("宋体", 0, 24)); // NOI18N
        lastVehJLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lastVehJLabel6.setText("2:5.0");
        lastVehJLabel6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lastVehJLabel6.setOpaque(true);
        lastVehJPanel.add(lastVehJLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(829, 0, 178, 33));

        mainJPanel.add(lastVehJPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(7, 160, 1008, 33));

        msgJPanel.setBackground(java.awt.Color.white);
        msgJPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        msgJPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        mainMsgJLabel.setFont(new java.awt.Font("宋体", 0, 28)); // NOI18N
        mainMsgJLabel.setForeground(new java.awt.Color(0, 100, 0));
        mainMsgJLabel.setText(" 等待上班");
        mainMsgJLabel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        msgJPanel.add(mainMsgJLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 440, 38));

        msgJLabel.setFont(new java.awt.Font("宋体", 1, 22)); // NOI18N
        msgJLabel.setForeground(new java.awt.Color(0, 100, 0));
        msgJLabel.setText(" 等待上班");
        msgJLabel.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        msgJPanel.add(msgJLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 38, 440, 155));

        specialJLabel1.setFont(new java.awt.Font("宋体", 1, 22)); // NOI18N
        specialJLabel1.setText("U型车(行驶时间超过两小时)");
        specialJLabel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        msgJPanel.add(specialJLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 193, 300, 22));

        specialJLabel2.setFont(new java.awt.Font("宋体", 1, 22)); // NOI18N
        specialJLabel2.setText("待监控室确认");
        specialJLabel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        msgJPanel.add(specialJLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 193, 140, 22));

        mainJPanel.add(msgJPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(7, 200, 440, 216));

        panel1.setBackground(java.awt.Color.white);
        panel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        panel2.setBackground(java.awt.Color.black);

        javax.swing.GroupLayout panel2Layout = new javax.swing.GroupLayout(panel2);
        panel2.setLayout(panel2Layout);
        panel2Layout.setHorizontalGroup(
            panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 440, Short.MAX_VALUE)
        );
        panel2Layout.setVerticalGroup(
            panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 315, Short.MAX_VALUE)
        );

        panel1.add(panel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 440, 315));

        javax.swing.GroupLayout panel3Layout = new javax.swing.GroupLayout(panel3);
        panel3.setLayout(panel3Layout);
        panel3Layout.setHorizontalGroup(
            panel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        panel3Layout.setVerticalGroup(
            panel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        panel1.add(panel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 0, 0));

        javax.swing.GroupLayout panel4Layout = new javax.swing.GroupLayout(panel4);
        panel4.setLayout(panel4Layout);
        panel4Layout.setHorizontalGroup(
            panel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        panel4Layout.setVerticalGroup(
            panel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        panel1.add(panel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 0, 0));

        javax.swing.GroupLayout panel5Layout = new javax.swing.GroupLayout(panel5);
        panel5.setLayout(panel5Layout);
        panel5Layout.setHorizontalGroup(
            panel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        panel5Layout.setVerticalGroup(
            panel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        panel1.add(panel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 0, 0));

        mainJPanel.add(panel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(7, 420, 440, 315));

        centerJPanel.setBackground(java.awt.Color.white);
        centerJPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        centerJPanel.setLayout(new java.awt.CardLayout());

        blankJPanel.setBackground(java.awt.Color.white);
        blankJPanel.setOpaque(false);

        javax.swing.GroupLayout blankJPanelLayout = new javax.swing.GroupLayout(blankJPanel);
        blankJPanel.setLayout(blankJPanelLayout);
        blankJPanelLayout.setHorizontalGroup(
            blankJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 382, Short.MAX_VALUE)
        );
        blankJPanelLayout.setVerticalGroup(
            blankJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 366, Short.MAX_VALUE)
        );

        centerJPanel.add(blankJPanel, "card2");

        vehAndWeightJPanel.setBackground(java.awt.Color.white);
        vehAndWeightJPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        vehAndWeightJPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        vehJPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "读卡信息", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("宋体", 0, 24))); // NOI18N
        vehJPanel.setMaximumSize(new java.awt.Dimension(335, 167));
        vehJPanel.setMinimumSize(new java.awt.Dimension(335, 167));
        vehJPanel.setOpaque(false);
        vehJPanel.setPreferredSize(new java.awt.Dimension(335, 167));
        vehJPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        cardInfoJlabel1.setFont(new java.awt.Font("宋体", 1, 18)); // NOI18N
        cardInfoJlabel1.setText("入口收费站:");
        vehJPanel.add(cardInfoJlabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 41, -1, -1));

        cardInfoJlabel2.setFont(new java.awt.Font("宋体", 1, 18)); // NOI18N
        cardInfoJlabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        cardInfoJlabel2.setText("最远站");
        cardInfoJlabel2.setMaximumSize(new java.awt.Dimension(205, 21));
        cardInfoJlabel2.setMinimumSize(new java.awt.Dimension(205, 21));
        cardInfoJlabel2.setPreferredSize(new java.awt.Dimension(205, 21));
        vehJPanel.add(cardInfoJlabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 41, -1, -1));

        cardInfoJlabel3.setFont(new java.awt.Font("宋体", 1, 18)); // NOI18N
        cardInfoJlabel3.setText("行驶距离:");
        cardInfoJlabel3.setMaximumSize(new java.awt.Dimension(105, 21));
        cardInfoJlabel3.setMinimumSize(new java.awt.Dimension(105, 21));
        cardInfoJlabel3.setPreferredSize(new java.awt.Dimension(105, 21));
        vehJPanel.add(cardInfoJlabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 72, -1, -1));

        cardInfoJlabel4.setFont(new java.awt.Font("宋体", 1, 18)); // NOI18N
        cardInfoJlabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        cardInfoJlabel4.setText("642.0公里");
        cardInfoJlabel4.setMaximumSize(new java.awt.Dimension(205, 21));
        cardInfoJlabel4.setMinimumSize(new java.awt.Dimension(205, 21));
        cardInfoJlabel4.setPreferredSize(new java.awt.Dimension(205, 21));
        vehJPanel.add(cardInfoJlabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 72, -1, -1));

        cardInfoJlabel5.setFont(new java.awt.Font("宋体", 1, 18)); // NOI18N
        cardInfoJlabel5.setText("时间:");
        cardInfoJlabel5.setMaximumSize(new java.awt.Dimension(105, 21));
        cardInfoJlabel5.setMinimumSize(new java.awt.Dimension(105, 21));
        cardInfoJlabel5.setPreferredSize(new java.awt.Dimension(105, 21));
        vehJPanel.add(cardInfoJlabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 103, -1, -1));

        cardInfoJlabel6.setFont(new java.awt.Font("宋体", 1, 18)); // NOI18N
        cardInfoJlabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        cardInfoJlabel6.setText("999小时59分钟");
        cardInfoJlabel6.setMaximumSize(new java.awt.Dimension(205, 21));
        cardInfoJlabel6.setMinimumSize(new java.awt.Dimension(205, 21));
        cardInfoJlabel6.setPreferredSize(new java.awt.Dimension(205, 21));
        vehJPanel.add(cardInfoJlabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 103, -1, -1));

        cardInfoJlabel7.setFont(new java.awt.Font("宋体", 1, 18)); // NOI18N
        cardInfoJlabel7.setText("速度:");
        cardInfoJlabel7.setMaximumSize(new java.awt.Dimension(105, 21));
        cardInfoJlabel7.setMinimumSize(new java.awt.Dimension(105, 21));
        cardInfoJlabel7.setPreferredSize(new java.awt.Dimension(105, 21));
        vehJPanel.add(cardInfoJlabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 134, -1, -1));

        cardInfoJlabel8.setFont(new java.awt.Font("宋体", 1, 18)); // NOI18N
        cardInfoJlabel8.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        cardInfoJlabel8.setText("9999999.99公里/小时");
        cardInfoJlabel8.setMaximumSize(new java.awt.Dimension(205, 21));
        cardInfoJlabel8.setMinimumSize(new java.awt.Dimension(205, 21));
        cardInfoJlabel8.setPreferredSize(new java.awt.Dimension(205, 21));
        vehJPanel.add(cardInfoJlabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 134, -1, -1));

        vehAndWeightJPanel.add(vehJPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(24, 20, 335, 167));

        weightJPanel.setBackground(java.awt.Color.white);
        weightJPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "称重数据", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("宋体", 0, 24))); // NOI18N
        weightJPanel.setMaximumSize(new java.awt.Dimension(335, 167));
        weightJPanel.setMinimumSize(new java.awt.Dimension(335, 167));
        weightJPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        weightInfoJlabel1.setFont(new java.awt.Font("宋体", 1, 18)); // NOI18N
        weightInfoJlabel1.setText("轴组数:");
        weightInfoJlabel1.setMaximumSize(new java.awt.Dimension(105, 21));
        weightInfoJlabel1.setMinimumSize(new java.awt.Dimension(105, 21));
        weightInfoJlabel1.setPreferredSize(new java.awt.Dimension(105, 21));
        weightJPanel.add(weightInfoJlabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 41, -1, -1));

        weightInfoJlabel2.setFont(new java.awt.Font("宋体", 1, 18)); // NOI18N
        weightInfoJlabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        weightInfoJlabel2.setText("4");
        weightInfoJlabel2.setMaximumSize(new java.awt.Dimension(205, 21));
        weightInfoJlabel2.setMinimumSize(new java.awt.Dimension(205, 21));
        weightInfoJlabel2.setPreferredSize(new java.awt.Dimension(205, 21));
        weightJPanel.add(weightInfoJlabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 41, -1, -1));

        weightInfoJlabel3.setFont(new java.awt.Font("宋体", 1, 18)); // NOI18N
        weightInfoJlabel3.setText("总重:");
        weightInfoJlabel3.setMaximumSize(new java.awt.Dimension(105, 21));
        weightInfoJlabel3.setMinimumSize(new java.awt.Dimension(105, 21));
        weightInfoJlabel3.setPreferredSize(new java.awt.Dimension(105, 21));
        weightJPanel.add(weightInfoJlabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 72, -1, -1));

        weightInfoJlabel4.setFont(new java.awt.Font("宋体", 1, 18)); // NOI18N
        weightInfoJlabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        weightInfoJlabel4.setText("99.99吨");
        weightInfoJlabel4.setMaximumSize(new java.awt.Dimension(205, 21));
        weightInfoJlabel4.setMinimumSize(new java.awt.Dimension(205, 21));
        weightInfoJlabel4.setPreferredSize(new java.awt.Dimension(205, 21));
        weightJPanel.add(weightInfoJlabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 72, -1, -1));

        weightInfoJlabel5.setFont(new java.awt.Font("宋体", 1, 18)); // NOI18N
        weightInfoJlabel5.setText("轴限:");
        weightInfoJlabel5.setMaximumSize(new java.awt.Dimension(105, 21));
        weightInfoJlabel5.setMinimumSize(new java.awt.Dimension(105, 21));
        weightInfoJlabel5.setPreferredSize(new java.awt.Dimension(105, 21));
        weightJPanel.add(weightInfoJlabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 103, -1, -1));

        weightInfoJlabel6.setFont(new java.awt.Font("宋体", 1, 18)); // NOI18N
        weightInfoJlabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        weightInfoJlabel6.setText("47吨");
        weightInfoJlabel6.setMaximumSize(new java.awt.Dimension(205, 21));
        weightInfoJlabel6.setMinimumSize(new java.awt.Dimension(205, 21));
        weightInfoJlabel6.setPreferredSize(new java.awt.Dimension(205, 21));
        weightJPanel.add(weightInfoJlabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 103, -1, -1));

        weightInfoJlabel7.setFont(new java.awt.Font("宋体", 1, 18)); // NOI18N
        weightInfoJlabel7.setText("速度:");
        weightInfoJlabel7.setMaximumSize(new java.awt.Dimension(105, 21));
        weightInfoJlabel7.setMinimumSize(new java.awt.Dimension(105, 21));
        weightInfoJlabel7.setPreferredSize(new java.awt.Dimension(105, 21));
        weightJPanel.add(weightInfoJlabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 134, -1, -1));

        weightInfoJlabel8.setFont(new java.awt.Font("宋体", 1, 18)); // NOI18N
        weightInfoJlabel8.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        weightInfoJlabel8.setText("9999999公里/小时");
        weightInfoJlabel8.setMaximumSize(new java.awt.Dimension(205, 21));
        weightInfoJlabel8.setMinimumSize(new java.awt.Dimension(205, 21));
        weightInfoJlabel8.setPreferredSize(new java.awt.Dimension(205, 21));
        weightJPanel.add(weightInfoJlabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 134, -1, -1));

        vehAndWeightJPanel.add(weightJPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(24, 188, 335, 167));

        centerJPanel.add(vehAndWeightJPanel, "card2");

        vehQueJPanel.setBackground(java.awt.Color.white);
        vehQueJPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "车辆队列", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("宋体", 1, 24))); // NOI18N
        vehQueJPanel.setLayout(new java.awt.GridLayout(6, 1));
        centerJPanel.add(vehQueJPanel, "card2");

        vehShaftJPanel.setBackground(java.awt.Color.white);
        vehShaftJPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        vehShaftJPanel.setLayout(new java.awt.GridLayout(9, 2));
        centerJPanel.add(vehShaftJPanel, "card2");

        inputFareJPanel.setBackground(java.awt.Color.white);
        inputFareJPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        inputFare1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "付款", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("宋体", 1, 24))); // NOI18N
        inputFare1.setOpaque(false);
        inputFare1.setLayout(new java.awt.GridLayout(3, 2));

        inputFareJlabel1.setFont(new java.awt.Font("宋体", 1, 24)); // NOI18N
        inputFareJlabel1.setText("应付车费(元)：");
        inputFare1.add(inputFareJlabel1);

        inputFareJlabel2.setFont(new java.awt.Font("宋体", 1, 24)); // NOI18N
        inputFareJlabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        inputFare1.add(inputFareJlabel2);

        inputFareJlabel3.setFont(new java.awt.Font("宋体", 1, 24)); // NOI18N
        inputFareJlabel3.setText("实收金额(元)：");
        inputFare1.add(inputFareJlabel3);

        inputFareJlabel4.setBackground(new java.awt.Color(255, 255, 255));
        inputFareJlabel4.setFont(new java.awt.Font("宋体", 1, 24)); // NOI18N
        inputFareJlabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        inputFareJlabel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        inputFareJlabel4.setOpaque(true);
        inputFare1.add(inputFareJlabel4);

        inputFareJlabel5.setFont(new java.awt.Font("宋体", 1, 24)); // NOI18N
        inputFareJlabel5.setText("应找金额(元)：");
        inputFare1.add(inputFareJlabel5);

        inputFareJlabel6.setFont(new java.awt.Font("宋体", 1, 24)); // NOI18N
        inputFareJlabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        inputFare1.add(inputFareJlabel6);

        javax.swing.GroupLayout inputFareJPanelLayout = new javax.swing.GroupLayout(inputFareJPanel);
        inputFareJPanel.setLayout(inputFareJPanelLayout);
        inputFareJPanelLayout.setHorizontalGroup(
            inputFareJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(inputFareJPanelLayout.createSequentialGroup()
                .addComponent(inputFare1, javax.swing.GroupLayout.PREFERRED_SIZE, 384, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        inputFareJPanelLayout.setVerticalGroup(
            inputFareJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(inputFareJPanelLayout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addComponent(inputFare1, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(147, Short.MAX_VALUE))
        );

        centerJPanel.add(inputFareJPanel, "card2");

        cardRoomJPanel.setBackground(java.awt.Color.white);
        cardRoomJPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "卡机", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("宋体", 1, 24))); // NOI18N
        cardRoomJPanel.setLayout(new java.awt.GridLayout(10, 1));
        centerJPanel.add(cardRoomJPanel, "card2");

        simulateJPanel.setBackground(java.awt.Color.white);
        simulateJPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        simulateJPanel.setLayout(new java.awt.GridLayout(5, 1));
        centerJPanel.add(simulateJPanel, "card2");

        axleTypeJPanel.setBackground(java.awt.Color.white);
        axleTypeJPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "轴组类型列表", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("宋体", 1, 24))); // NOI18N
        axleTypeJPanel.setLayout(new java.awt.GridLayout(9, 2));
        centerJPanel.add(axleTypeJPanel, "card2");

        plateColorJPanel.setBackground(java.awt.Color.white);
        plateColorJPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel40.setBackground(java.awt.Color.blue);
        jLabel40.setMaximumSize(new java.awt.Dimension(44, 36));
        jLabel40.setMinimumSize(new java.awt.Dimension(44, 36));
        jLabel40.setOpaque(true);
        jLabel40.setPreferredSize(new java.awt.Dimension(44, 36));

        buttonGroup7.add(y1);
        y1.setFont(new java.awt.Font("宋体", 1, 24)); // NOI18N
        y1.setSelected(true);
        y1.setText("1 蓝色");
        y1.setBorder(null);
        y1.setOpaque(false);

        jLabel38.setBackground(java.awt.Color.yellow);
        jLabel38.setMaximumSize(new java.awt.Dimension(44, 36));
        jLabel38.setMinimumSize(new java.awt.Dimension(44, 36));
        jLabel38.setOpaque(true);
        jLabel38.setPreferredSize(new java.awt.Dimension(44, 36));

        buttonGroup7.add(y2);
        y2.setFont(new java.awt.Font("宋体", 1, 24)); // NOI18N
        y2.setText("2 黄色");
        y2.setOpaque(false);

        jLabel44.setBackground(java.awt.Color.white);
        jLabel44.setMaximumSize(new java.awt.Dimension(44, 36));
        jLabel44.setMinimumSize(new java.awt.Dimension(44, 36));
        jLabel44.setOpaque(true);
        jLabel44.setPreferredSize(new java.awt.Dimension(44, 36));

        buttonGroup7.add(y3);
        y3.setFont(new java.awt.Font("宋体", 1, 24)); // NOI18N
        y3.setText("3 白色");
        y3.setOpaque(false);

        jLabel43.setBackground(java.awt.Color.green);
        jLabel43.setMaximumSize(new java.awt.Dimension(44, 36));
        jLabel43.setMinimumSize(new java.awt.Dimension(44, 36));
        jLabel43.setOpaque(true);
        jLabel43.setPreferredSize(new java.awt.Dimension(44, 36));

        buttonGroup7.add(y4);
        y4.setFont(new java.awt.Font("宋体", 1, 24)); // NOI18N
        y4.setText("4 绿色");
        y4.setOpaque(false);

        jLabel47.setBackground(java.awt.Color.red);
        jLabel47.setMaximumSize(new java.awt.Dimension(44, 36));
        jLabel47.setMinimumSize(new java.awt.Dimension(44, 36));
        jLabel47.setOpaque(true);
        jLabel47.setPreferredSize(new java.awt.Dimension(44, 36));

        buttonGroup7.add(y5);
        y5.setFont(new java.awt.Font("宋体", 1, 24)); // NOI18N
        y5.setText("5 红色");
        y5.setOpaque(false);

        jLabel46.setBackground(java.awt.Color.black);
        jLabel46.setMaximumSize(new java.awt.Dimension(44, 36));
        jLabel46.setMinimumSize(new java.awt.Dimension(44, 36));
        jLabel46.setOpaque(true);
        jLabel46.setPreferredSize(new java.awt.Dimension(44, 36));

        buttonGroup7.add(y6);
        y6.setFont(new java.awt.Font("宋体", 1, 24)); // NOI18N
        y6.setText("6 黑色");
        y6.setOpaque(false);

        buttonGroup7.add(y7);
        y7.setFont(new java.awt.Font("宋体", 1, 24)); // NOI18N
        y7.setText("0 无车牌");
        y7.setOpaque(false);

        buttonGroup7.add(y8);
        y8.setFont(new java.awt.Font("宋体", 1, 24)); // NOI18N
        y8.setText("00 手动抓拍车牌");
        y8.setOpaque(false);

        jLabel45.setBackground(java.awt.Color.white);
        jLabel45.setMaximumSize(new java.awt.Dimension(44, 36));
        jLabel45.setMinimumSize(new java.awt.Dimension(44, 36));
        jLabel45.setOpaque(true);
        jLabel45.setPreferredSize(new java.awt.Dimension(44, 36));

        jLabel48.setBackground(java.awt.Color.white);
        jLabel48.setMaximumSize(new java.awt.Dimension(44, 36));
        jLabel48.setMinimumSize(new java.awt.Dimension(44, 36));
        jLabel48.setOpaque(true);
        jLabel48.setPreferredSize(new java.awt.Dimension(44, 36));

        javax.swing.GroupLayout plateColorJPanelLayout = new javax.swing.GroupLayout(plateColorJPanel);
        plateColorJPanel.setLayout(plateColorJPanelLayout);
        plateColorJPanelLayout.setHorizontalGroup(
            plateColorJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(plateColorJPanelLayout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addGroup(plateColorJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(plateColorJPanelLayout.createSequentialGroup()
                        .addComponent(jLabel40, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(5, 5, 5)
                        .addComponent(y1, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(plateColorJPanelLayout.createSequentialGroup()
                        .addComponent(jLabel38, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(5, 5, 5)
                        .addComponent(y2, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(plateColorJPanelLayout.createSequentialGroup()
                        .addComponent(jLabel48, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(5, 5, 5)
                        .addComponent(y3, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(plateColorJPanelLayout.createSequentialGroup()
                        .addComponent(jLabel43, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(5, 5, 5)
                        .addComponent(y4, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(plateColorJPanelLayout.createSequentialGroup()
                        .addComponent(jLabel47, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(5, 5, 5)
                        .addComponent(y5, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(plateColorJPanelLayout.createSequentialGroup()
                        .addComponent(jLabel46, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(5, 5, 5)
                        .addComponent(y6, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(plateColorJPanelLayout.createSequentialGroup()
                        .addComponent(jLabel44, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(5, 5, 5)
                        .addComponent(y7, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(plateColorJPanelLayout.createSequentialGroup()
                        .addComponent(jLabel45, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(5, 5, 5)
                        .addComponent(y8))))
        );
        plateColorJPanelLayout.setVerticalGroup(
            plateColorJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(plateColorJPanelLayout.createSequentialGroup()
                .addGap(1, 1, 1)
                .addGroup(plateColorJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel40, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(plateColorJPanelLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(y1)))
                .addGap(5, 5, 5)
                .addGroup(plateColorJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel38, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(plateColorJPanelLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(y2)))
                .addGap(5, 5, 5)
                .addGroup(plateColorJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel48, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(plateColorJPanelLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(y3)))
                .addGap(5, 5, 5)
                .addGroup(plateColorJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel43, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(plateColorJPanelLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(y4)))
                .addGap(5, 5, 5)
                .addGroup(plateColorJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel47, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(plateColorJPanelLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(y5)))
                .addGap(5, 5, 5)
                .addGroup(plateColorJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel46, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(plateColorJPanelLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(y6)))
                .addGap(5, 5, 5)
                .addGroup(plateColorJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel44, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(y7, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addGroup(plateColorJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel45, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(plateColorJPanelLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(y8))))
        );

        centerJPanel.add(plateColorJPanel, "card2");

        invoiceJPanel.setBackground(java.awt.Color.white);
        invoiceJPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        ticketJPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "请输入票据号", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("宋体", 1, 24))); // NOI18N
        ticketJPanel1.setOpaque(false);

        ticketJLabel1.setBackground(new java.awt.Color(255, 255, 255));
        ticketJLabel1.setFont(new java.awt.Font("宋体", 1, 24)); // NOI18N
        ticketJLabel1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        ticketJLabel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        ticketJLabel1.setOpaque(true);
        ticketJLabel1.setPreferredSize(new java.awt.Dimension(6, 35));

        javax.swing.GroupLayout ticketJPanel1Layout = new javax.swing.GroupLayout(ticketJPanel1);
        ticketJPanel1.setLayout(ticketJPanel1Layout);
        ticketJPanel1Layout.setHorizontalGroup(
            ticketJPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ticketJPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ticketJLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 330, Short.MAX_VALUE)
                .addContainerGap())
        );
        ticketJPanel1Layout.setVerticalGroup(
            ticketJPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ticketJPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ticketJLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(46, Short.MAX_VALUE))
        );

        ticketJPanel2.setBackground(java.awt.Color.white);
        ticketJPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "请输入字轨号", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("宋体", 1, 24))); // NOI18N
        ticketJPanel2.setOpaque(false);

        ticketJLabel2.setBackground(java.awt.Color.white);
        ticketJLabel2.setFont(new java.awt.Font("宋体", 1, 24)); // NOI18N
        ticketJLabel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        javax.swing.GroupLayout ticketJPanel2Layout = new javax.swing.GroupLayout(ticketJPanel2);
        ticketJPanel2.setLayout(ticketJPanel2Layout);
        ticketJPanel2Layout.setHorizontalGroup(
            ticketJPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ticketJPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ticketJLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        ticketJPanel2Layout.setVerticalGroup(
            ticketJPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ticketJPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ticketJLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(39, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout invoiceJPanelLayout = new javax.swing.GroupLayout(invoiceJPanel);
        invoiceJPanel.setLayout(invoiceJPanelLayout);
        invoiceJPanelLayout.setHorizontalGroup(
            invoiceJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(invoiceJPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(invoiceJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ticketJPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ticketJPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        invoiceJPanelLayout.setVerticalGroup(
            invoiceJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(invoiceJPanelLayout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(ticketJPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(52, 52, 52)
                .addComponent(ticketJPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        centerJPanel.add(invoiceJPanel, "card2");

        entryInfoJPanel.setBackground(java.awt.Color.white);
        entryInfoJPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        entryInfoJPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        entryInfoJlabel1.setFont(new java.awt.Font("黑体", 1, 18)); // NOI18N
        entryInfoJlabel1.setText("日期：2014-09-19 16:58:00");
        entryInfoJPanel.add(entryInfoJlabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, -1, -1));

        entryInfoJlabel2.setFont(new java.awt.Font("黑体", 1, 18)); // NOI18N
        entryInfoJlabel2.setText("收费站：0501");
        entryInfoJPanel.add(entryInfoJlabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, -1, -1));

        entryInfoJlabel3.setFont(new java.awt.Font("黑体", 1, 18)); // NOI18N
        entryInfoJlabel3.setText("车道：E01");
        entryInfoJPanel.add(entryInfoJlabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, -1, -1));

        entryInfoJlabel4.setFont(new java.awt.Font("黑体", 1, 18)); // NOI18N
        entryInfoJlabel4.setText("职员号：000018");
        entryInfoJPanel.add(entryInfoJlabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 60, -1, -1));

        entryInfoJlabel5.setFont(new java.awt.Font("黑体", 1, 18)); // NOI18N
        entryInfoJlabel5.setText("车型：1");
        entryInfoJPanel.add(entryInfoJlabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 40, -1, -1));

        entryInfoJlabel6.setFont(new java.awt.Font("黑体", 1, 18)); // NOI18N
        entryInfoJlabel6.setText("车牌号：湘A12345");
        entryInfoJPanel.add(entryInfoJlabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, -1, -1));

        entryInfoJlabel7.setFont(new java.awt.Font("黑体", 1, 18)); // NOI18N
        entryInfoJlabel7.setText("序列号：43011234567890123456");
        entryInfoJPanel.add(entryInfoJlabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, -1, -1));
        entryInfoJPanel.add(entryVehPhoto, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 120, 370, 240));

        centerJPanel.add(entryInfoJPanel, "card2");

        violateVehJPanel.setBackground(java.awt.Color.white);
        violateVehJPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        violateVehJPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel20.setFont(new java.awt.Font("黑体", 1, 24)); // NOI18N
        jLabel20.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel20.setText("车牌在黑名单上");
        violateVehJPanel.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(16, 94, 220, 36));

        jLabel21.setFont(new java.awt.Font("黑体", 1, 24)); // NOI18N
        jLabel21.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel21.setText("湘A61576");
        jLabel21.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        violateVehJPanel.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(16, 148, 302, 39));

        jLabel22.setFont(new java.awt.Font("黑体", 1, 24)); // NOI18N
        jLabel22.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel22.setText("恶意冲关");
        jLabel22.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        violateVehJPanel.add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(16, 205, 302, 36));

        jLabel37.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ui/img/violateVeh.png"))); // NOI18N
        violateVehJPanel.add(jLabel37, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 20, 80, 70));

        centerJPanel.add(violateVehJPanel, "card2");

        freeVehJPanel.setBackground(java.awt.Color.white);
        freeVehJPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jScrollPane3.setBorder(null);
        jScrollPane3.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane3.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        jTextArea2.setEditable(false);
        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jTextArea2.setToolTipText("");
        jTextArea2.setAutoscrolls(false);
        jTextArea2.setBorder(null);
        jScrollPane3.setViewportView(jTextArea2);

        javax.swing.GroupLayout freeVehJPanelLayout = new javax.swing.GroupLayout(freeVehJPanel);
        freeVehJPanel.setLayout(freeVehJPanelLayout);
        freeVehJPanelLayout.setHorizontalGroup(
            freeVehJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(freeVehJPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(freeVehJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(freeVehJPanelLayout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jLabel36, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        freeVehJPanelLayout.setVerticalGroup(
            freeVehJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(freeVehJPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel36, javax.swing.GroupLayout.DEFAULT_SIZE, 288, Short.MAX_VALUE)
                .addGap(12, 12, 12))
        );

        centerJPanel.add(freeVehJPanel, "card2");

        blackPlateJPanel.setBackground(java.awt.Color.white);
        blackPlateJPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "车牌黑名单信息图片", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("宋体", 1, 12))); // NOI18N
        blackPlateJPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        blkVehJLabel1.setFont(new java.awt.Font("黑体", 1, 24)); // NOI18N
        blkVehJLabel1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        blkVehJLabel1.setText("车牌在黑名单上");
        blackPlateJPanel.add(blkVehJLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 220, 36));

        blkVehJLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ui/img/violateVeh.png"))); // NOI18N
        blackPlateJPanel.add(blkVehJLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 10, 80, 70));

        blkVehJLabel3.setFont(new java.awt.Font("黑体", 1, 18)); // NOI18N
        blkVehJLabel3.setText("车牌号：湘A12345");
        blkVehJLabel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        blackPlateJPanel.add(blkVehJLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 260, 30));

        blkVehJLabel4.setFont(new java.awt.Font("黑体", 1, 18)); // NOI18N
        blkVehJLabel4.setText("违禁车辆原因：恶意闯关恶意闯关恶意闯关");
        blkVehJLabel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        blackPlateJPanel.add(blkVehJLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 85, 370, 45));
        blackPlateJPanel.add(blkVehJLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 140, 370, 220));

        centerJPanel.add(blackPlateJPanel, "card2");

        collectJPanel.setBackground(java.awt.Color.white);
        collectJPanel.setLayout(new java.awt.GridLayout(10, 1));
        centerJPanel.add(collectJPanel, "card2");

        plateJPanel.setBackground(java.awt.Color.white);
        plateJPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout plateJPanelLayout = new javax.swing.GroupLayout(plateJPanel);
        plateJPanel.setLayout(plateJPanelLayout);
        plateJPanelLayout.setHorizontalGroup(
            plateJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 380, Short.MAX_VALUE)
        );
        plateJPanelLayout.setVerticalGroup(
            plateJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 364, Short.MAX_VALUE)
        );

        centerJPanel.add(plateJPanel, "card2");

        rtpJPanel.setBackground(java.awt.Color.white);
        rtpJPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "识别点信息", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("宋体", 1, 24))); // NOI18N
        rtpJPanel.setLayout(new java.awt.GridLayout(10, 1));
        centerJPanel.add(rtpJPanel, "card2");

        rtpImgPanel.setBackground(java.awt.Color.white);
        rtpImgPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "识别点图片", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("宋体", 1, 24))); // NOI18N
        rtpImgPanel.setLayout(new java.awt.GridLayout(1, 0));
        rtpImgPanel.add(rtpImgJLabel);

        centerJPanel.add(rtpImgPanel, "card2");

        plate1JPanel.setBackground(java.awt.Color.white);
        plate1JPanel.setOpaque(false);

        jPanelCHA.setBackground(new java.awt.Color(255, 255, 255));
        jPanelCHA.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanelCHA.setPreferredSize(new java.awt.Dimension(880, 124));
        jPanelCHA.setLayout(new java.awt.GridLayout(3, 10));

        jPanelCHA1.setBackground(new java.awt.Color(255, 255, 255));
        jPanelCHA1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanelCHA1.setPreferredSize(new java.awt.Dimension(37, 41));
        jPanelCHA1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        CHjLabel1.setFont(new java.awt.Font("宋体", 1, 24)); // NOI18N
        CHjLabel1.setText("湘");
        jPanelCHA1.add(CHjLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1, 1, 25, -1));

        ENjLabel1.setFont(new java.awt.Font("宋体", 1, 15)); // NOI18N
        ENjLabel1.setForeground(new java.awt.Color(255, 0, 204));
        ENjLabel1.setText("A");
        ENjLabel1.setPreferredSize(new java.awt.Dimension(10, 15));
        jPanelCHA1.add(ENjLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 25, -1, -1));

        jPanelCHA.add(jPanelCHA1);

        jPanelCHA2.setBackground(new java.awt.Color(255, 255, 255));
        jPanelCHA2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanelCHA2.setPreferredSize(new java.awt.Dimension(37, 41));
        jPanelCHA2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        CHjLabel2.setFont(new java.awt.Font("宋体", 1, 24)); // NOI18N
        CHjLabel2.setText("粤");
        jPanelCHA2.add(CHjLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(1, 1, 25, -1));

        ENjLabel2.setFont(new java.awt.Font("宋体", 1, 15)); // NOI18N
        ENjLabel2.setForeground(new java.awt.Color(255, 0, 204));
        ENjLabel2.setText("B");
        ENjLabel2.setPreferredSize(new java.awt.Dimension(10, 15));
        jPanelCHA2.add(ENjLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 25, -1, -1));

        jPanelCHA.add(jPanelCHA2);

        jPanelCHA3.setBackground(new java.awt.Color(255, 255, 255));
        jPanelCHA3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanelCHA3.setPreferredSize(new java.awt.Dimension(37, 41));
        jPanelCHA3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        CHjLabel3.setFont(new java.awt.Font("宋体", 1, 24)); // NOI18N
        CHjLabel3.setText("鄂");
        jPanelCHA3.add(CHjLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(1, 1, 25, -1));

        ENjLabel3.setFont(new java.awt.Font("宋体", 1, 15)); // NOI18N
        ENjLabel3.setForeground(new java.awt.Color(255, 0, 204));
        ENjLabel3.setText("C");
        ENjLabel3.setPreferredSize(new java.awt.Dimension(10, 15));
        jPanelCHA3.add(ENjLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 25, -1, -1));

        jPanelCHA.add(jPanelCHA3);

        jPanelCHA4.setBackground(new java.awt.Color(255, 255, 255));
        jPanelCHA4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanelCHA4.setPreferredSize(new java.awt.Dimension(37, 41));
        jPanelCHA4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        CHjLabel4.setFont(new java.awt.Font("宋体", 1, 24)); // NOI18N
        CHjLabel4.setText("鲁");
        jPanelCHA4.add(CHjLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(1, 1, 25, -1));

        ENjLabel4.setFont(new java.awt.Font("宋体", 1, 15)); // NOI18N
        ENjLabel4.setForeground(new java.awt.Color(255, 0, 204));
        ENjLabel4.setText("D");
        ENjLabel4.setPreferredSize(new java.awt.Dimension(10, 15));
        jPanelCHA4.add(ENjLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 25, -1, -1));

        jPanelCHA.add(jPanelCHA4);

        jPanelCHA5.setBackground(new java.awt.Color(255, 255, 255));
        jPanelCHA5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanelCHA5.setPreferredSize(new java.awt.Dimension(37, 41));
        jPanelCHA5.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        CHjLabel5.setFont(new java.awt.Font("宋体", 1, 24)); // NOI18N
        CHjLabel5.setText("豫");
        jPanelCHA5.add(CHjLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(1, 1, 25, -1));

        ENjLabel5.setFont(new java.awt.Font("宋体", 1, 15)); // NOI18N
        ENjLabel5.setForeground(new java.awt.Color(255, 0, 204));
        ENjLabel5.setText("E");
        ENjLabel5.setPreferredSize(new java.awt.Dimension(10, 15));
        jPanelCHA5.add(ENjLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 25, -1, -1));

        jPanelCHA.add(jPanelCHA5);

        jPanelCHA6.setBackground(new java.awt.Color(255, 255, 255));
        jPanelCHA6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanelCHA6.setPreferredSize(new java.awt.Dimension(37, 41));
        jPanelCHA6.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        CHjLabel6.setFont(new java.awt.Font("宋体", 1, 24)); // NOI18N
        CHjLabel6.setText("赣");
        jPanelCHA6.add(CHjLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(1, 1, 25, -1));

        ENjLabel6.setFont(new java.awt.Font("宋体", 1, 15)); // NOI18N
        ENjLabel6.setForeground(new java.awt.Color(255, 0, 204));
        ENjLabel6.setText("F");
        ENjLabel6.setPreferredSize(new java.awt.Dimension(10, 15));
        jPanelCHA6.add(ENjLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 25, -1, -1));

        jPanelCHA.add(jPanelCHA6);

        jPanelCHA7.setBackground(new java.awt.Color(255, 255, 255));
        jPanelCHA7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanelCHA7.setPreferredSize(new java.awt.Dimension(37, 41));
        jPanelCHA7.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        CHjLabel7.setFont(new java.awt.Font("宋体", 1, 24)); // NOI18N
        CHjLabel7.setText("冀");
        jPanelCHA7.add(CHjLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(1, 1, 25, -1));

        ENjLabel7.setFont(new java.awt.Font("宋体", 1, 15)); // NOI18N
        ENjLabel7.setForeground(new java.awt.Color(255, 0, 204));
        ENjLabel7.setText("G");
        ENjLabel7.setPreferredSize(new java.awt.Dimension(10, 15));
        jPanelCHA7.add(ENjLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 25, -1, -1));

        jPanelCHA.add(jPanelCHA7);

        jPanelCHA8.setBackground(new java.awt.Color(255, 255, 255));
        jPanelCHA8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanelCHA8.setPreferredSize(new java.awt.Dimension(37, 41));
        jPanelCHA8.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        CHjLabel8.setFont(new java.awt.Font("宋体", 1, 24)); // NOI18N
        CHjLabel8.setText("皖");
        jPanelCHA8.add(CHjLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(1, 1, 25, -1));

        ENjLabel8.setFont(new java.awt.Font("宋体", 1, 15)); // NOI18N
        ENjLabel8.setForeground(new java.awt.Color(255, 0, 204));
        ENjLabel8.setText("H");
        ENjLabel8.setPreferredSize(new java.awt.Dimension(10, 15));
        jPanelCHA8.add(ENjLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 25, -1, -1));

        jPanelCHA.add(jPanelCHA8);

        jPanelCHA9.setBackground(new java.awt.Color(255, 255, 255));
        jPanelCHA9.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanelCHA9.setPreferredSize(new java.awt.Dimension(37, 41));
        jPanelCHA9.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        CHjLabel9.setFont(new java.awt.Font("宋体", 1, 24)); // NOI18N
        CHjLabel9.setText("晋");
        jPanelCHA9.add(CHjLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(1, 1, 25, -1));

        ENjLabel9.setFont(new java.awt.Font("宋体", 1, 15)); // NOI18N
        ENjLabel9.setForeground(new java.awt.Color(255, 0, 204));
        ENjLabel9.setText("I");
        ENjLabel9.setPreferredSize(new java.awt.Dimension(10, 15));
        jPanelCHA9.add(ENjLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 25, -1, -1));

        jPanelCHA.add(jPanelCHA9);

        jPanelCHA10.setBackground(new java.awt.Color(255, 255, 255));
        jPanelCHA10.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanelCHA10.setPreferredSize(new java.awt.Dimension(37, 41));
        jPanelCHA10.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        CHjLabel10.setFont(new java.awt.Font("宋体", 1, 24)); // NOI18N
        CHjLabel10.setText("沪");
        jPanelCHA10.add(CHjLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(1, 1, 25, -1));

        ENjLabel10.setFont(new java.awt.Font("宋体", 1, 15)); // NOI18N
        ENjLabel10.setForeground(new java.awt.Color(255, 0, 204));
        ENjLabel10.setText("J");
        ENjLabel10.setPreferredSize(new java.awt.Dimension(10, 15));
        jPanelCHA10.add(ENjLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 25, -1, -1));

        jPanelCHA.add(jPanelCHA10);

        jPanelCHA11.setBackground(new java.awt.Color(255, 255, 255));
        jPanelCHA11.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanelCHA11.setPreferredSize(new java.awt.Dimension(37, 41));
        jPanelCHA11.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        CHjLabel11.setFont(new java.awt.Font("宋体", 1, 24)); // NOI18N
        CHjLabel11.setText("京");
        jPanelCHA11.add(CHjLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(1, 1, 25, -1));

        ENjLabel11.setFont(new java.awt.Font("宋体", 1, 15)); // NOI18N
        ENjLabel11.setForeground(new java.awt.Color(255, 0, 204));
        ENjLabel11.setText("K");
        ENjLabel11.setPreferredSize(new java.awt.Dimension(10, 10));
        jPanelCHA11.add(ENjLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 25, -1, -1));

        jPanelCHA.add(jPanelCHA11);

        jPanelCHA12.setBackground(new java.awt.Color(255, 255, 255));
        jPanelCHA12.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanelCHA12.setPreferredSize(new java.awt.Dimension(37, 41));
        jPanelCHA12.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        CHjLabel12.setFont(new java.awt.Font("宋体", 1, 24)); // NOI18N
        CHjLabel12.setText("吉");
        jPanelCHA12.add(CHjLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(1, 1, 25, -1));

        ENjLabel12.setFont(new java.awt.Font("宋体", 1, 15)); // NOI18N
        ENjLabel12.setForeground(new java.awt.Color(255, 0, 204));
        ENjLabel12.setText("L");
        ENjLabel12.setPreferredSize(new java.awt.Dimension(10, 10));
        jPanelCHA12.add(ENjLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 25, -1, -1));

        jPanelCHA.add(jPanelCHA12);

        jPanelCHA13.setBackground(new java.awt.Color(255, 255, 255));
        jPanelCHA13.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanelCHA13.setPreferredSize(new java.awt.Dimension(37, 41));
        jPanelCHA13.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        CHjLabel13.setFont(new java.awt.Font("宋体", 1, 24)); // NOI18N
        CHjLabel13.setText("蒙");
        jPanelCHA13.add(CHjLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(1, 1, 25, -1));

        ENjLabel13.setFont(new java.awt.Font("宋体", 1, 15)); // NOI18N
        ENjLabel13.setForeground(new java.awt.Color(255, 0, 204));
        ENjLabel13.setText("M");
        ENjLabel13.setPreferredSize(new java.awt.Dimension(10, 10));
        jPanelCHA13.add(ENjLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 25, -1, -1));

        jPanelCHA.add(jPanelCHA13);

        jPanelCHA14.setBackground(new java.awt.Color(255, 255, 255));
        jPanelCHA14.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanelCHA14.setPreferredSize(new java.awt.Dimension(37, 41));
        jPanelCHA14.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        CHjLabel14.setFont(new java.awt.Font("宋体", 1, 24)); // NOI18N
        CHjLabel14.setText("宁");
        jPanelCHA14.add(CHjLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(1, 1, 25, -1));

        ENjLabel14.setFont(new java.awt.Font("宋体", 1, 15)); // NOI18N
        ENjLabel14.setForeground(new java.awt.Color(255, 0, 204));
        ENjLabel14.setText("N");
        ENjLabel14.setPreferredSize(new java.awt.Dimension(10, 10));
        jPanelCHA14.add(ENjLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 25, -1, -1));

        jPanelCHA.add(jPanelCHA14);

        jPanelCHA15.setBackground(new java.awt.Color(255, 255, 255));
        jPanelCHA15.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanelCHA15.setPreferredSize(new java.awt.Dimension(37, 41));
        jPanelCHA15.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        CHjLabel15.setFont(new java.awt.Font("宋体", 1, 24)); // NOI18N
        CHjLabel15.setText("渝");
        jPanelCHA15.add(CHjLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(1, 1, 25, -1));

        ENjLabel15.setFont(new java.awt.Font("宋体", 1, 15)); // NOI18N
        ENjLabel15.setForeground(new java.awt.Color(255, 0, 204));
        ENjLabel15.setText("O");
        ENjLabel15.setPreferredSize(new java.awt.Dimension(10, 10));
        jPanelCHA15.add(ENjLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 25, -1, -1));

        jPanelCHA.add(jPanelCHA15);

        jPanelCHA16.setBackground(new java.awt.Color(255, 255, 255));
        jPanelCHA16.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanelCHA16.setPreferredSize(new java.awt.Dimension(37, 41));
        jPanelCHA16.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        CHjLabel16.setFont(new java.awt.Font("宋体", 1, 24)); // NOI18N
        CHjLabel16.setText("藏");
        jPanelCHA16.add(CHjLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(1, 1, 25, -1));

        ENjLabel16.setFont(new java.awt.Font("宋体", 1, 15)); // NOI18N
        ENjLabel16.setForeground(new java.awt.Color(255, 0, 204));
        ENjLabel16.setText("P");
        ENjLabel16.setPreferredSize(new java.awt.Dimension(10, 10));
        jPanelCHA16.add(ENjLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 25, -1, -1));

        jPanelCHA.add(jPanelCHA16);

        jPanelCHA17.setBackground(new java.awt.Color(255, 255, 255));
        jPanelCHA17.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanelCHA17.setPreferredSize(new java.awt.Dimension(37, 41));
        jPanelCHA17.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        CHjLabel17.setFont(new java.awt.Font("宋体", 1, 24)); // NOI18N
        CHjLabel17.setText("琼");
        jPanelCHA17.add(CHjLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(1, 1, 25, -1));

        ENjLabel17.setFont(new java.awt.Font("宋体", 1, 15)); // NOI18N
        ENjLabel17.setForeground(new java.awt.Color(255, 0, 204));
        ENjLabel17.setText("Q");
        ENjLabel17.setPreferredSize(new java.awt.Dimension(10, 10));
        jPanelCHA17.add(ENjLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 25, -1, -1));

        jPanelCHA.add(jPanelCHA17);

        jPanelCHA18.setBackground(new java.awt.Color(255, 255, 255));
        jPanelCHA18.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanelCHA18.setPreferredSize(new java.awt.Dimension(37, 41));
        jPanelCHA18.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        CHjLabel18.setFont(new java.awt.Font("宋体", 1, 24)); // NOI18N
        CHjLabel18.setText("闽");
        jPanelCHA18.add(CHjLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(1, 1, 25, -1));

        ENjLabel18.setFont(new java.awt.Font("宋体", 1, 15)); // NOI18N
        ENjLabel18.setForeground(new java.awt.Color(255, 0, 204));
        ENjLabel18.setText("R");
        ENjLabel18.setPreferredSize(new java.awt.Dimension(10, 10));
        jPanelCHA18.add(ENjLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 25, -1, -1));

        jPanelCHA.add(jPanelCHA18);

        jPanelCHA19.setBackground(new java.awt.Color(255, 255, 255));
        jPanelCHA19.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanelCHA19.setPreferredSize(new java.awt.Dimension(37, 41));
        jPanelCHA19.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        CHjLabel19.setFont(new java.awt.Font("宋体", 1, 24)); // NOI18N
        CHjLabel19.setText("苏");
        jPanelCHA19.add(CHjLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(1, 1, 25, -1));

        ENjLabel19.setFont(new java.awt.Font("宋体", 1, 15)); // NOI18N
        ENjLabel19.setForeground(new java.awt.Color(255, 0, 204));
        ENjLabel19.setText("S");
        ENjLabel19.setPreferredSize(new java.awt.Dimension(10, 10));
        jPanelCHA19.add(ENjLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 25, -1, -1));

        jPanelCHA.add(jPanelCHA19);

        jPanelCHA20.setBackground(new java.awt.Color(255, 255, 255));
        jPanelCHA20.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanelCHA20.setPreferredSize(new java.awt.Dimension(37, 41));
        jPanelCHA20.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        CHjLabel20.setFont(new java.awt.Font("宋体", 1, 24)); // NOI18N
        CHjLabel20.setText("青");
        jPanelCHA20.add(CHjLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(1, 1, 25, -1));

        ENjLabel20.setFont(new java.awt.Font("宋体", 1, 15)); // NOI18N
        ENjLabel20.setForeground(new java.awt.Color(255, 0, 204));
        ENjLabel20.setText("T");
        ENjLabel20.setPreferredSize(new java.awt.Dimension(10, 10));
        jPanelCHA20.add(ENjLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 25, -1, -1));

        jPanelCHA.add(jPanelCHA20);

        jPanelCHA21.setBackground(new java.awt.Color(255, 255, 255));
        jPanelCHA21.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanelCHA21.setPreferredSize(new java.awt.Dimension(37, 41));
        jPanelCHA21.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        CHjLabel21.setFont(new java.awt.Font("宋体", 1, 24)); // NOI18N
        CHjLabel21.setText("川");
        jPanelCHA21.add(CHjLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(1, 1, 25, -1));

        ENjLabel21.setFont(new java.awt.Font("宋体", 1, 15)); // NOI18N
        ENjLabel21.setForeground(new java.awt.Color(255, 0, 204));
        ENjLabel21.setText("U");
        ENjLabel21.setPreferredSize(new java.awt.Dimension(10, 10));
        jPanelCHA21.add(ENjLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 25, -1, -1));

        jPanelCHA.add(jPanelCHA21);

        jPanelCHA22.setBackground(new java.awt.Color(255, 255, 255));
        jPanelCHA22.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanelCHA22.setPreferredSize(new java.awt.Dimension(37, 41));
        jPanelCHA22.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        CHjLabel22.setFont(new java.awt.Font("宋体", 1, 24)); // NOI18N
        CHjLabel22.setText("辽");
        jPanelCHA22.add(CHjLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(1, 1, 25, -1));

        ENjLabel22.setFont(new java.awt.Font("宋体", 1, 15)); // NOI18N
        ENjLabel22.setForeground(new java.awt.Color(255, 0, 204));
        ENjLabel22.setText("V");
        ENjLabel22.setPreferredSize(new java.awt.Dimension(10, 10));
        jPanelCHA22.add(ENjLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 25, -1, -1));

        jPanelCHA.add(jPanelCHA22);

        jPanelCHA23.setBackground(new java.awt.Color(255, 255, 255));
        jPanelCHA23.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanelCHA23.setPreferredSize(new java.awt.Dimension(37, 41));
        jPanelCHA23.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        CHjLabel23.setFont(new java.awt.Font("宋体", 1, 24)); // NOI18N
        CHjLabel23.setText("甘");
        jPanelCHA23.add(CHjLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(1, 1, 25, -1));

        ENjLabel23.setFont(new java.awt.Font("宋体", 1, 15)); // NOI18N
        ENjLabel23.setForeground(new java.awt.Color(255, 0, 204));
        ENjLabel23.setText("W");
        ENjLabel23.setPreferredSize(new java.awt.Dimension(10, 10));
        jPanelCHA23.add(ENjLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 25, -1, -1));

        jPanelCHA.add(jPanelCHA23);

        jPanelCHA24.setBackground(new java.awt.Color(255, 255, 255));
        jPanelCHA24.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanelCHA24.setPreferredSize(new java.awt.Dimension(37, 41));
        jPanelCHA24.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        CHjLabel24.setFont(new java.awt.Font("宋体", 1, 24)); // NOI18N
        CHjLabel24.setText("新");
        jPanelCHA24.add(CHjLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(1, 1, 25, -1));

        ENjLabel24.setFont(new java.awt.Font("宋体", 1, 15)); // NOI18N
        ENjLabel24.setForeground(new java.awt.Color(255, 0, 204));
        ENjLabel24.setText("X");
        ENjLabel24.setPreferredSize(new java.awt.Dimension(10, 10));
        jPanelCHA24.add(ENjLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 25, -1, -1));

        jPanelCHA.add(jPanelCHA24);

        jPanelCHA25.setBackground(new java.awt.Color(255, 255, 255));
        jPanelCHA25.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanelCHA25.setPreferredSize(new java.awt.Dimension(37, 41));
        jPanelCHA25.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        CHjLabel25.setFont(new java.awt.Font("宋体", 1, 24)); // NOI18N
        CHjLabel25.setText("云");
        jPanelCHA25.add(CHjLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(1, 1, 25, -1));

        ENjLabel25.setFont(new java.awt.Font("宋体", 1, 15)); // NOI18N
        ENjLabel25.setForeground(new java.awt.Color(255, 0, 204));
        ENjLabel25.setText("Y");
        ENjLabel25.setPreferredSize(new java.awt.Dimension(10, 10));
        jPanelCHA25.add(ENjLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 25, -1, -1));

        jPanelCHA.add(jPanelCHA25);

        jPanelCHA26.setBackground(new java.awt.Color(255, 255, 255));
        jPanelCHA26.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanelCHA26.setPreferredSize(new java.awt.Dimension(37, 41));
        jPanelCHA26.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        CHjLabel26.setFont(new java.awt.Font("宋体", 1, 24)); // NOI18N
        CHjLabel26.setText("浙");
        jPanelCHA26.add(CHjLabel26, new org.netbeans.lib.awtextra.AbsoluteConstraints(1, 1, 25, -1));

        ENjLabel26.setFont(new java.awt.Font("宋体", 1, 15)); // NOI18N
        ENjLabel26.setForeground(new java.awt.Color(255, 0, 204));
        ENjLabel26.setText("Z");
        ENjLabel26.setPreferredSize(new java.awt.Dimension(10, 10));
        jPanelCHA26.add(ENjLabel26, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 25, -1, -1));

        jPanelCHA.add(jPanelCHA26);

        jPanelCHA27.setBackground(new java.awt.Color(255, 255, 255));
        jPanelCHA27.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanelCHA27.setPreferredSize(new java.awt.Dimension(37, 41));
        jPanelCHA27.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        CHjLabel27.setFont(new java.awt.Font("宋体", 1, 24)); // NOI18N
        CHjLabel27.setText("陕");
        jPanelCHA27.add(CHjLabel27, new org.netbeans.lib.awtextra.AbsoluteConstraints(1, 1, 25, -1));

        ENjLabel27.setFont(new java.awt.Font("宋体", 0, 15)); // NOI18N
        ENjLabel27.setPreferredSize(new java.awt.Dimension(10, 10));
        jPanelCHA27.add(ENjLabel27, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 25, -1, -1));

        jPanelCHA.add(jPanelCHA27);

        jPanelCHA28.setBackground(new java.awt.Color(255, 255, 255));
        jPanelCHA28.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanelCHA28.setPreferredSize(new java.awt.Dimension(37, 41));
        jPanelCHA28.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        CHjLabel28.setFont(new java.awt.Font("宋体", 1, 24)); // NOI18N
        CHjLabel28.setText("津");
        jPanelCHA28.add(CHjLabel28, new org.netbeans.lib.awtextra.AbsoluteConstraints(1, 1, 25, -1));

        ENjLabel28.setFont(new java.awt.Font("宋体", 0, 15)); // NOI18N
        ENjLabel28.setPreferredSize(new java.awt.Dimension(10, 10));
        jPanelCHA28.add(ENjLabel28, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 25, -1, -1));

        jPanelCHA.add(jPanelCHA28);

        jPanelCHA29.setBackground(new java.awt.Color(255, 255, 255));
        jPanelCHA29.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanelCHA29.setPreferredSize(new java.awt.Dimension(37, 41));
        jPanelCHA29.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        CHjLabel29.setFont(new java.awt.Font("宋体", 0, 24)); // NOI18N
        jPanelCHA29.add(CHjLabel29, new org.netbeans.lib.awtextra.AbsoluteConstraints(1, 1, 24, 30));

        ENjLabel29.setFont(new java.awt.Font("宋体", 0, 15)); // NOI18N
        ENjLabel29.setPreferredSize(new java.awt.Dimension(10, 10));
        jPanelCHA29.add(ENjLabel29, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 25, -1, -1));

        jPanelCHA.add(jPanelCHA29);

        jPanelCHA30.setBackground(new java.awt.Color(255, 255, 255));
        jPanelCHA30.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanelCHA30.setPreferredSize(new java.awt.Dimension(37, 41));
        jPanelCHA30.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        CHjLabel30.setFont(new java.awt.Font("宋体", 1, 24)); // NOI18N
        CHjLabel30.setText("贵");
        jPanelCHA30.add(CHjLabel30, new org.netbeans.lib.awtextra.AbsoluteConstraints(1, 1, 25, -1));

        ENjLabel30.setFont(new java.awt.Font("宋体", 0, 15)); // NOI18N
        ENjLabel30.setPreferredSize(new java.awt.Dimension(10, 10));
        jPanelCHA30.add(ENjLabel30, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 25, -1, -1));

        jPanelCHA.add(jPanelCHA30);

        javax.swing.GroupLayout plate1JPanelLayout = new javax.swing.GroupLayout(plate1JPanel);
        plate1JPanel.setLayout(plate1JPanelLayout);
        plate1JPanelLayout.setHorizontalGroup(
            plate1JPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelCHA, javax.swing.GroupLayout.DEFAULT_SIZE, 382, Short.MAX_VALUE)
        );
        plate1JPanelLayout.setVerticalGroup(
            plate1JPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(plate1JPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelCHA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(232, Short.MAX_VALUE))
        );

        centerJPanel.add(plate1JPanel, "card2");

        plate2JPanel.setBackground(java.awt.Color.white);
        plate2JPanel.setOpaque(false);

        jPanelCHB.setBackground(new java.awt.Color(255, 255, 255));
        jPanelCHB.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanelCHB.setPreferredSize(new java.awt.Dimension(880, 124));
        jPanelCHB.setLayout(new java.awt.GridLayout(3, 10));

        jPanelCHA32.setBackground(new java.awt.Color(255, 255, 255));
        jPanelCHA32.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanelCHA32.setPreferredSize(new java.awt.Dimension(37, 41));
        jPanelCHA32.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        CHjLabel31.setFont(new java.awt.Font("宋体", 1, 24)); // NOI18N
        CHjLabel31.setText("警");
        jPanelCHA32.add(CHjLabel31, new org.netbeans.lib.awtextra.AbsoluteConstraints(1, 1, 25, -1));

        ENjLabel31.setFont(new java.awt.Font("宋体", 1, 15)); // NOI18N
        ENjLabel31.setForeground(new java.awt.Color(255, 0, 204));
        ENjLabel31.setText("A");
        ENjLabel31.setPreferredSize(new java.awt.Dimension(10, 10));
        jPanelCHA32.add(ENjLabel31, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 25, -1, -1));

        jPanelCHB.add(jPanelCHA32);

        jPanelCHA33.setBackground(new java.awt.Color(255, 255, 255));
        jPanelCHA33.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanelCHA33.setPreferredSize(new java.awt.Dimension(37, 41));
        jPanelCHA33.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        CHjLabel32.setFont(new java.awt.Font("宋体", 1, 24)); // NOI18N
        CHjLabel32.setText("消");
        jPanelCHA33.add(CHjLabel32, new org.netbeans.lib.awtextra.AbsoluteConstraints(1, 1, 25, -1));

        ENjLabel32.setFont(new java.awt.Font("宋体", 1, 15)); // NOI18N
        ENjLabel32.setForeground(new java.awt.Color(255, 0, 204));
        ENjLabel32.setText("B");
        ENjLabel32.setPreferredSize(new java.awt.Dimension(10, 10));
        jPanelCHA33.add(ENjLabel32, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 25, -1, -1));

        jPanelCHB.add(jPanelCHA33);

        jPanelCHA34.setBackground(new java.awt.Color(255, 255, 255));
        jPanelCHA34.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanelCHA34.setPreferredSize(new java.awt.Dimension(37, 41));
        jPanelCHA34.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        CHjLabel33.setFont(new java.awt.Font("宋体", 1, 24)); // NOI18N
        CHjLabel33.setText("边");
        jPanelCHA34.add(CHjLabel33, new org.netbeans.lib.awtextra.AbsoluteConstraints(1, 1, 25, -1));

        ENjLabel33.setFont(new java.awt.Font("宋体", 1, 15)); // NOI18N
        ENjLabel33.setForeground(new java.awt.Color(255, 0, 204));
        ENjLabel33.setText("C");
        ENjLabel33.setPreferredSize(new java.awt.Dimension(10, 10));
        jPanelCHA34.add(ENjLabel33, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 25, -1, -1));

        jPanelCHB.add(jPanelCHA34);

        jPanelCHA35.setBackground(new java.awt.Color(255, 255, 255));
        jPanelCHA35.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanelCHA35.setPreferredSize(new java.awt.Dimension(37, 41));
        jPanelCHA35.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        CHjLabel34.setFont(new java.awt.Font("宋体", 1, 24)); // NOI18N
        CHjLabel34.setText("广");
        jPanelCHA35.add(CHjLabel34, new org.netbeans.lib.awtextra.AbsoluteConstraints(1, 1, 25, -1));

        ENjLabel34.setFont(new java.awt.Font("宋体", 1, 15)); // NOI18N
        ENjLabel34.setForeground(new java.awt.Color(255, 0, 204));
        ENjLabel34.setText("D");
        ENjLabel34.setPreferredSize(new java.awt.Dimension(10, 10));
        jPanelCHA35.add(ENjLabel34, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 25, -1, -1));

        jPanelCHB.add(jPanelCHA35);

        jPanelCHA36.setBackground(new java.awt.Color(255, 255, 255));
        jPanelCHA36.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanelCHA36.setPreferredSize(new java.awt.Dimension(37, 41));
        jPanelCHA36.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        CHjLabel35.setFont(new java.awt.Font("宋体", 1, 24)); // NOI18N
        CHjLabel35.setText("北");
        jPanelCHA36.add(CHjLabel35, new org.netbeans.lib.awtextra.AbsoluteConstraints(1, 1, 25, -1));

        ENjLabel35.setFont(new java.awt.Font("宋体", 1, 15)); // NOI18N
        ENjLabel35.setForeground(new java.awt.Color(255, 0, 204));
        ENjLabel35.setText("E");
        ENjLabel35.setPreferredSize(new java.awt.Dimension(10, 10));
        jPanelCHA36.add(ENjLabel35, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 25, -1, -1));

        jPanelCHB.add(jPanelCHA36);

        jPanelCHA37.setBackground(new java.awt.Color(255, 255, 255));
        jPanelCHA37.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanelCHA37.setPreferredSize(new java.awt.Dimension(37, 41));
        jPanelCHA37.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        CHjLabel36.setFont(new java.awt.Font("宋体", 1, 24)); // NOI18N
        CHjLabel36.setText("南");
        jPanelCHA37.add(CHjLabel36, new org.netbeans.lib.awtextra.AbsoluteConstraints(1, 1, 25, -1));

        ENjLabel36.setFont(new java.awt.Font("宋体", 1, 15)); // NOI18N
        ENjLabel36.setForeground(new java.awt.Color(255, 0, 204));
        ENjLabel36.setText("F");
        ENjLabel36.setPreferredSize(new java.awt.Dimension(10, 10));
        jPanelCHA37.add(ENjLabel36, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 25, -1, -1));

        jPanelCHB.add(jPanelCHA37);

        jPanelCHA38.setBackground(new java.awt.Color(255, 255, 255));
        jPanelCHA38.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanelCHA38.setPreferredSize(new java.awt.Dimension(37, 41));
        jPanelCHA38.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        CHjLabel37.setFont(new java.awt.Font("宋体", 1, 24)); // NOI18N
        CHjLabel37.setText("沈");
        jPanelCHA38.add(CHjLabel37, new org.netbeans.lib.awtextra.AbsoluteConstraints(1, 1, 25, -1));

        ENjLabel37.setFont(new java.awt.Font("宋体", 1, 15)); // NOI18N
        ENjLabel37.setForeground(new java.awt.Color(255, 0, 204));
        ENjLabel37.setText("G");
        ENjLabel37.setPreferredSize(new java.awt.Dimension(10, 10));
        jPanelCHA38.add(ENjLabel37, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 25, -1, -1));

        jPanelCHB.add(jPanelCHA38);

        jPanelCHA39.setBackground(new java.awt.Color(255, 255, 255));
        jPanelCHA39.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanelCHA39.setPreferredSize(new java.awt.Dimension(37, 41));
        jPanelCHA39.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        CHjLabel38.setFont(new java.awt.Font("宋体", 1, 24)); // NOI18N
        CHjLabel38.setText("兰");
        jPanelCHA39.add(CHjLabel38, new org.netbeans.lib.awtextra.AbsoluteConstraints(1, 1, 25, -1));

        ENjLabel38.setFont(new java.awt.Font("宋体", 1, 15)); // NOI18N
        ENjLabel38.setForeground(new java.awt.Color(255, 0, 204));
        ENjLabel38.setText("H");
        ENjLabel38.setPreferredSize(new java.awt.Dimension(10, 10));
        jPanelCHA39.add(ENjLabel38, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 25, -1, -1));

        jPanelCHB.add(jPanelCHA39);

        jPanelCHA40.setBackground(new java.awt.Color(255, 255, 255));
        jPanelCHA40.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanelCHA40.setPreferredSize(new java.awt.Dimension(37, 41));
        jPanelCHA40.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        CHjLabel39.setFont(new java.awt.Font("宋体", 1, 24)); // NOI18N
        CHjLabel39.setText("成");
        jPanelCHA40.add(CHjLabel39, new org.netbeans.lib.awtextra.AbsoluteConstraints(1, 1, 25, -1));

        ENjLabel39.setFont(new java.awt.Font("宋体", 1, 15)); // NOI18N
        ENjLabel39.setForeground(new java.awt.Color(255, 0, 204));
        ENjLabel39.setText("I");
        ENjLabel39.setPreferredSize(new java.awt.Dimension(10, 10));
        jPanelCHA40.add(ENjLabel39, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 25, -1, -1));

        jPanelCHB.add(jPanelCHA40);

        jPanelCHA41.setBackground(new java.awt.Color(255, 255, 255));
        jPanelCHA41.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanelCHA41.setPreferredSize(new java.awt.Dimension(37, 41));
        jPanelCHA41.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        CHjLabel40.setFont(new java.awt.Font("宋体", 1, 24)); // NOI18N
        CHjLabel40.setText("济");
        jPanelCHA41.add(CHjLabel40, new org.netbeans.lib.awtextra.AbsoluteConstraints(1, 1, 25, -1));

        ENjLabel40.setFont(new java.awt.Font("宋体", 1, 15)); // NOI18N
        ENjLabel40.setForeground(new java.awt.Color(255, 0, 204));
        ENjLabel40.setText("J");
        ENjLabel40.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        ENjLabel40.setPreferredSize(new java.awt.Dimension(10, 15));
        jPanelCHA41.add(ENjLabel40, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 25, -1, -1));

        jPanelCHB.add(jPanelCHA41);

        jPanelCHA42.setBackground(new java.awt.Color(255, 255, 255));
        jPanelCHA42.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanelCHA42.setPreferredSize(new java.awt.Dimension(37, 41));
        jPanelCHA42.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        CHjLabel41.setFont(new java.awt.Font("宋体", 1, 24)); // NOI18N
        CHjLabel41.setText("军");
        jPanelCHA42.add(CHjLabel41, new org.netbeans.lib.awtextra.AbsoluteConstraints(1, 1, 25, -1));

        ENjLabel41.setFont(new java.awt.Font("宋体", 1, 15)); // NOI18N
        ENjLabel41.setForeground(new java.awt.Color(255, 0, 204));
        ENjLabel41.setText("K");
        ENjLabel41.setPreferredSize(new java.awt.Dimension(10, 10));
        jPanelCHA42.add(ENjLabel41, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 25, -1, -1));

        jPanelCHB.add(jPanelCHA42);

        jPanelCHA43.setBackground(new java.awt.Color(255, 255, 255));
        jPanelCHA43.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanelCHA43.setPreferredSize(new java.awt.Dimension(37, 41));
        jPanelCHA43.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        CHjLabel42.setFont(new java.awt.Font("宋体", 1, 24)); // NOI18N
        CHjLabel42.setText("海");
        jPanelCHA43.add(CHjLabel42, new org.netbeans.lib.awtextra.AbsoluteConstraints(1, 1, 25, -1));

        ENjLabel42.setFont(new java.awt.Font("宋体", 1, 15)); // NOI18N
        ENjLabel42.setForeground(new java.awt.Color(255, 0, 204));
        ENjLabel42.setText("L");
        ENjLabel42.setPreferredSize(new java.awt.Dimension(10, 10));
        jPanelCHA43.add(ENjLabel42, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 25, -1, -1));

        jPanelCHB.add(jPanelCHA43);

        jPanelCHA44.setBackground(new java.awt.Color(255, 255, 255));
        jPanelCHA44.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanelCHA44.setPreferredSize(new java.awt.Dimension(37, 41));
        jPanelCHA44.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        CHjLabel43.setFont(new java.awt.Font("宋体", 1, 24)); // NOI18N
        CHjLabel43.setText("空");
        jPanelCHA44.add(CHjLabel43, new org.netbeans.lib.awtextra.AbsoluteConstraints(1, 1, 25, -1));

        ENjLabel43.setFont(new java.awt.Font("宋体", 1, 15)); // NOI18N
        ENjLabel43.setForeground(new java.awt.Color(255, 0, 204));
        ENjLabel43.setText("M");
        ENjLabel43.setPreferredSize(new java.awt.Dimension(10, 10));
        jPanelCHA44.add(ENjLabel43, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 25, -1, -1));

        jPanelCHB.add(jPanelCHA44);

        jPanelCHA45.setBackground(new java.awt.Color(255, 255, 255));
        jPanelCHA45.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanelCHA45.setPreferredSize(new java.awt.Dimension(37, 41));
        jPanelCHA45.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        CHjLabel44.setFont(new java.awt.Font("宋体", 1, 24)); // NOI18N
        CHjLabel44.setText("港");
        jPanelCHA45.add(CHjLabel44, new org.netbeans.lib.awtextra.AbsoluteConstraints(1, 1, 25, -1));

        ENjLabel44.setFont(new java.awt.Font("宋体", 1, 15)); // NOI18N
        ENjLabel44.setForeground(new java.awt.Color(255, 0, 204));
        ENjLabel44.setText("N");
        ENjLabel44.setPreferredSize(new java.awt.Dimension(10, 10));
        jPanelCHA45.add(ENjLabel44, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 25, -1, -1));

        jPanelCHB.add(jPanelCHA45);

        jPanelCHA46.setBackground(new java.awt.Color(255, 255, 255));
        jPanelCHA46.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanelCHA46.setPreferredSize(new java.awt.Dimension(37, 41));
        jPanelCHA46.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        CHjLabel45.setFont(new java.awt.Font("宋体", 1, 24)); // NOI18N
        CHjLabel45.setText("澳");
        jPanelCHA46.add(CHjLabel45, new org.netbeans.lib.awtextra.AbsoluteConstraints(1, 1, 25, -1));

        ENjLabel45.setFont(new java.awt.Font("宋体", 1, 15)); // NOI18N
        ENjLabel45.setForeground(new java.awt.Color(255, 0, 204));
        ENjLabel45.setText("O");
        ENjLabel45.setPreferredSize(new java.awt.Dimension(10, 10));
        jPanelCHA46.add(ENjLabel45, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 25, -1, -1));

        jPanelCHB.add(jPanelCHA46);

        jPanelCHA47.setBackground(new java.awt.Color(255, 255, 255));
        jPanelCHA47.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanelCHA47.setPreferredSize(new java.awt.Dimension(37, 41));
        jPanelCHA47.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        CHjLabel46.setFont(new java.awt.Font("宋体", 1, 24)); // NOI18N
        CHjLabel46.setText("使");
        jPanelCHA47.add(CHjLabel46, new org.netbeans.lib.awtextra.AbsoluteConstraints(1, 1, 25, -1));

        ENjLabel46.setFont(new java.awt.Font("宋体", 1, 15)); // NOI18N
        ENjLabel46.setForeground(new java.awt.Color(255, 0, 204));
        ENjLabel46.setText("P");
        ENjLabel46.setPreferredSize(new java.awt.Dimension(10, 10));
        jPanelCHA47.add(ENjLabel46, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 25, -1, -1));

        jPanelCHB.add(jPanelCHA47);

        jPanelCHA48.setBackground(new java.awt.Color(255, 255, 255));
        jPanelCHA48.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanelCHA48.setPreferredSize(new java.awt.Dimension(37, 41));
        jPanelCHA48.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        CHjLabel47.setFont(new java.awt.Font("宋体", 1, 24)); // NOI18N
        CHjLabel47.setText("领");
        jPanelCHA48.add(CHjLabel47, new org.netbeans.lib.awtextra.AbsoluteConstraints(1, 1, 25, -1));

        ENjLabel47.setFont(new java.awt.Font("宋体", 1, 15)); // NOI18N
        ENjLabel47.setForeground(new java.awt.Color(255, 0, 204));
        ENjLabel47.setText("Q");
        ENjLabel47.setPreferredSize(new java.awt.Dimension(10, 10));
        jPanelCHA48.add(ENjLabel47, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 25, -1, -1));

        jPanelCHB.add(jPanelCHA48);

        jPanelCHA49.setBackground(new java.awt.Color(255, 255, 255));
        jPanelCHA49.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanelCHA49.setPreferredSize(new java.awt.Dimension(37, 41));
        jPanelCHA49.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        CHjLabel48.setFont(new java.awt.Font("宋体", 1, 24)); // NOI18N
        CHjLabel48.setText("境");
        jPanelCHA49.add(CHjLabel48, new org.netbeans.lib.awtextra.AbsoluteConstraints(1, 1, 25, -1));

        ENjLabel48.setFont(new java.awt.Font("宋体", 1, 15)); // NOI18N
        ENjLabel48.setForeground(new java.awt.Color(255, 0, 204));
        ENjLabel48.setText("R");
        ENjLabel48.setPreferredSize(new java.awt.Dimension(10, 10));
        jPanelCHA49.add(ENjLabel48, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 25, -1, -1));

        jPanelCHB.add(jPanelCHA49);

        jPanelCHA50.setBackground(new java.awt.Color(255, 255, 255));
        jPanelCHA50.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanelCHA50.setPreferredSize(new java.awt.Dimension(37, 41));
        jPanelCHA50.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        CHjLabel49.setFont(new java.awt.Font("宋体", 1, 24)); // NOI18N
        CHjLabel49.setText("挂");
        jPanelCHA50.add(CHjLabel49, new org.netbeans.lib.awtextra.AbsoluteConstraints(1, 1, 25, -1));

        ENjLabel49.setFont(new java.awt.Font("宋体", 1, 15)); // NOI18N
        ENjLabel49.setForeground(new java.awt.Color(255, 0, 204));
        ENjLabel49.setText("S");
        ENjLabel49.setPreferredSize(new java.awt.Dimension(10, 10));
        jPanelCHA50.add(ENjLabel49, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 25, -1, -1));

        jPanelCHB.add(jPanelCHA50);

        jPanelCHA51.setBackground(new java.awt.Color(255, 255, 255));
        jPanelCHA51.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanelCHA51.setPreferredSize(new java.awt.Dimension(37, 41));
        jPanelCHA51.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        CHjLabel50.setFont(new java.awt.Font("宋体", 1, 24)); // NOI18N
        CHjLabel50.setText("水");
        jPanelCHA51.add(CHjLabel50, new org.netbeans.lib.awtextra.AbsoluteConstraints(1, 1, 25, -1));

        ENjLabel50.setFont(new java.awt.Font("宋体", 1, 15)); // NOI18N
        ENjLabel50.setForeground(new java.awt.Color(255, 0, 204));
        ENjLabel50.setText("T");
        ENjLabel50.setPreferredSize(new java.awt.Dimension(10, 10));
        jPanelCHA51.add(ENjLabel50, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 25, -1, -1));

        jPanelCHB.add(jPanelCHA51);

        jPanelCHA52.setBackground(new java.awt.Color(255, 255, 255));
        jPanelCHA52.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanelCHA52.setPreferredSize(new java.awt.Dimension(37, 41));
        jPanelCHA52.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        CHjLabel51.setFont(new java.awt.Font("宋体", 1, 24)); // NOI18N
        CHjLabel51.setText("电");
        jPanelCHA52.add(CHjLabel51, new org.netbeans.lib.awtextra.AbsoluteConstraints(1, 1, 25, -1));

        ENjLabel51.setFont(new java.awt.Font("宋体", 1, 15)); // NOI18N
        ENjLabel51.setForeground(new java.awt.Color(255, 0, 204));
        ENjLabel51.setText("U");
        ENjLabel51.setPreferredSize(new java.awt.Dimension(10, 10));
        jPanelCHA52.add(ENjLabel51, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 25, -1, -1));

        jPanelCHB.add(jPanelCHA52);

        jPanelCHA53.setBackground(new java.awt.Color(255, 255, 255));
        jPanelCHA53.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanelCHA53.setPreferredSize(new java.awt.Dimension(37, 41));
        jPanelCHA53.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        CHjLabel52.setFont(new java.awt.Font("宋体", 1, 24)); // NOI18N
        CHjLabel52.setText("林");
        jPanelCHA53.add(CHjLabel52, new org.netbeans.lib.awtextra.AbsoluteConstraints(1, 1, 25, -1));

        ENjLabel52.setFont(new java.awt.Font("宋体", 1, 15)); // NOI18N
        ENjLabel52.setForeground(new java.awt.Color(255, 0, 204));
        ENjLabel52.setText("V");
        ENjLabel52.setPreferredSize(new java.awt.Dimension(10, 10));
        jPanelCHA53.add(ENjLabel52, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 25, -1, -1));

        jPanelCHB.add(jPanelCHA53);

        jPanelCHA54.setBackground(new java.awt.Color(255, 255, 255));
        jPanelCHA54.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanelCHA54.setPreferredSize(new java.awt.Dimension(37, 41));
        jPanelCHA54.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        CHjLabel53.setFont(new java.awt.Font("宋体", 1, 24)); // NOI18N
        jPanelCHA54.add(CHjLabel53, new org.netbeans.lib.awtextra.AbsoluteConstraints(1, 1, 25, 30));

        ENjLabel53.setFont(new java.awt.Font("宋体", 1, 15)); // NOI18N
        ENjLabel53.setForeground(new java.awt.Color(255, 0, 204));
        ENjLabel53.setText("W");
        ENjLabel53.setPreferredSize(new java.awt.Dimension(10, 10));
        jPanelCHA54.add(ENjLabel53, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 25, -1, -1));

        jPanelCHB.add(jPanelCHA54);

        jPanelCHA55.setBackground(new java.awt.Color(255, 255, 255));
        jPanelCHA55.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanelCHA55.setPreferredSize(new java.awt.Dimension(37, 41));
        jPanelCHA55.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        CHjLabel54.setFont(new java.awt.Font("宋体", 1, 24)); // NOI18N
        CHjLabel54.setText("挂");
        jPanelCHA55.add(CHjLabel54, new org.netbeans.lib.awtextra.AbsoluteConstraints(1, 1, 25, -1));

        ENjLabel54.setFont(new java.awt.Font("宋体", 1, 15)); // NOI18N
        ENjLabel54.setForeground(new java.awt.Color(255, 0, 204));
        ENjLabel54.setText("X");
        ENjLabel54.setPreferredSize(new java.awt.Dimension(10, 10));
        jPanelCHA55.add(ENjLabel54, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 25, -1, -1));

        jPanelCHB.add(jPanelCHA55);

        jPanelCHA56.setBackground(new java.awt.Color(255, 255, 255));
        jPanelCHA56.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanelCHA56.setPreferredSize(new java.awt.Dimension(37, 41));
        jPanelCHA56.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        CHjLabel55.setFont(new java.awt.Font("宋体", 1, 24)); // NOI18N
        CHjLabel55.setText("试");
        jPanelCHA56.add(CHjLabel55, new org.netbeans.lib.awtextra.AbsoluteConstraints(1, 1, 25, -1));

        ENjLabel55.setFont(new java.awt.Font("宋体", 1, 15)); // NOI18N
        ENjLabel55.setForeground(new java.awt.Color(255, 0, 204));
        ENjLabel55.setText("Y");
        ENjLabel55.setPreferredSize(new java.awt.Dimension(10, 10));
        jPanelCHA56.add(ENjLabel55, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 25, -1, -1));

        jPanelCHB.add(jPanelCHA56);

        jPanelCHA57.setBackground(new java.awt.Color(255, 255, 255));
        jPanelCHA57.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanelCHA57.setPreferredSize(new java.awt.Dimension(37, 41));
        jPanelCHA57.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        CHjLabel56.setFont(new java.awt.Font("宋体", 1, 24)); // NOI18N
        CHjLabel56.setText("临");
        jPanelCHA57.add(CHjLabel56, new org.netbeans.lib.awtextra.AbsoluteConstraints(1, 1, 25, -1));

        ENjLabel56.setFont(new java.awt.Font("宋体", 1, 15)); // NOI18N
        ENjLabel56.setForeground(new java.awt.Color(255, 0, 204));
        ENjLabel56.setText("Z");
        ENjLabel56.setPreferredSize(new java.awt.Dimension(10, 10));
        jPanelCHA57.add(ENjLabel56, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 25, -1, -1));

        jPanelCHB.add(jPanelCHA57);

        jPanelCHA58.setBackground(new java.awt.Color(255, 255, 255));
        jPanelCHA58.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanelCHA58.setPreferredSize(new java.awt.Dimension(37, 41));
        jPanelCHA58.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        CHjLabel57.setFont(new java.awt.Font("宋体", 1, 24)); // NOI18N
        CHjLabel57.setText("学");
        jPanelCHA58.add(CHjLabel57, new org.netbeans.lib.awtextra.AbsoluteConstraints(1, 1, 25, -1));

        ENjLabel57.setFont(new java.awt.Font("宋体", 0, 15)); // NOI18N
        ENjLabel57.setPreferredSize(new java.awt.Dimension(10, 10));
        jPanelCHA58.add(ENjLabel57, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 25, -1, -1));

        jPanelCHB.add(jPanelCHA58);

        jPanelCHA59.setBackground(new java.awt.Color(255, 255, 255));
        jPanelCHA59.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanelCHA59.setPreferredSize(new java.awt.Dimension(37, 41));
        jPanelCHA59.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        CHjLabel58.setFont(new java.awt.Font("宋体", 1, 24)); // NOI18N
        CHjLabel58.setText("通");
        jPanelCHA59.add(CHjLabel58, new org.netbeans.lib.awtextra.AbsoluteConstraints(1, 1, 25, -1));

        ENjLabel58.setFont(new java.awt.Font("宋体", 0, 15)); // NOI18N
        ENjLabel58.setPreferredSize(new java.awt.Dimension(10, 10));
        jPanelCHA59.add(ENjLabel58, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 25, -1, -1));

        jPanelCHB.add(jPanelCHA59);

        jPanelCHA60.setBackground(new java.awt.Color(255, 255, 255));
        jPanelCHA60.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanelCHA60.setPreferredSize(new java.awt.Dimension(37, 41));
        jPanelCHA60.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        CHjLabel59.setFont(new java.awt.Font("宋体", 0, 24)); // NOI18N
        jPanelCHA60.add(CHjLabel59, new org.netbeans.lib.awtextra.AbsoluteConstraints(1, 1, 24, 30));

        ENjLabel59.setFont(new java.awt.Font("宋体", 0, 15)); // NOI18N
        ENjLabel59.setPreferredSize(new java.awt.Dimension(10, 10));
        jPanelCHA60.add(ENjLabel59, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 25, -1, -1));

        jPanelCHB.add(jPanelCHA60);

        jPanelCHA61.setBackground(new java.awt.Color(255, 255, 255));
        jPanelCHA61.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanelCHA61.setPreferredSize(new java.awt.Dimension(37, 41));
        jPanelCHA61.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        CHjLabel60.setFont(new java.awt.Font("宋体", 1, 24)); // NOI18N
        jPanelCHA61.add(CHjLabel60, new org.netbeans.lib.awtextra.AbsoluteConstraints(1, 1, 25, 30));

        ENjLabel60.setFont(new java.awt.Font("宋体", 0, 15)); // NOI18N
        ENjLabel60.setPreferredSize(new java.awt.Dimension(10, 10));
        jPanelCHA61.add(ENjLabel60, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 25, -1, -1));

        jPanelCHB.add(jPanelCHA61);

        javax.swing.GroupLayout plate2JPanelLayout = new javax.swing.GroupLayout(plate2JPanel);
        plate2JPanel.setLayout(plate2JPanelLayout);
        plate2JPanelLayout.setHorizontalGroup(
            plate2JPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelCHB, javax.swing.GroupLayout.DEFAULT_SIZE, 382, Short.MAX_VALUE)
        );
        plate2JPanelLayout.setVerticalGroup(
            plate2JPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(plate2JPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelCHB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(232, Short.MAX_VALUE))
        );

        centerJPanel.add(plate2JPanel, "card2");

        plate3JPanel.setBackground(java.awt.Color.white);
        plate3JPanel.setOpaque(false);

        jPanelCHC.setBackground(new java.awt.Color(255, 255, 255));
        jPanelCHC.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanelCHC.setPreferredSize(new java.awt.Dimension(880, 124));
        jPanelCHC.setLayout(new java.awt.GridLayout(3, 10));

        jPanelCHA63.setBackground(new java.awt.Color(255, 255, 255));
        jPanelCHA63.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanelCHA63.setPreferredSize(new java.awt.Dimension(37, 41));
        jPanelCHA63.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        CHjLabel61.setFont(new java.awt.Font("宋体", 1, 24)); // NOI18N
        CHjLabel61.setText("A");
        jPanelCHA63.add(CHjLabel61, new org.netbeans.lib.awtextra.AbsoluteConstraints(1, 1, 25, -1));

        ENjLabel61.setFont(new java.awt.Font("宋体", 1, 15)); // NOI18N
        ENjLabel61.setForeground(new java.awt.Color(255, 0, 204));
        ENjLabel61.setText("A");
        ENjLabel61.setPreferredSize(new java.awt.Dimension(10, 10));
        jPanelCHA63.add(ENjLabel61, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 25, -1, -1));

        jPanelCHC.add(jPanelCHA63);

        jPanelCHA64.setBackground(new java.awt.Color(255, 255, 255));
        jPanelCHA64.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanelCHA64.setPreferredSize(new java.awt.Dimension(37, 41));
        jPanelCHA64.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        CHjLabel62.setFont(new java.awt.Font("宋体", 1, 24)); // NOI18N
        CHjLabel62.setText("B");
        jPanelCHA64.add(CHjLabel62, new org.netbeans.lib.awtextra.AbsoluteConstraints(1, 1, 25, -1));

        ENjLabel62.setFont(new java.awt.Font("宋体", 1, 15)); // NOI18N
        ENjLabel62.setForeground(new java.awt.Color(255, 0, 204));
        ENjLabel62.setText("B");
        ENjLabel62.setPreferredSize(new java.awt.Dimension(10, 10));
        jPanelCHA64.add(ENjLabel62, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 25, -1, -1));

        jPanelCHC.add(jPanelCHA64);

        jPanelCHA65.setBackground(new java.awt.Color(255, 255, 255));
        jPanelCHA65.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanelCHA65.setPreferredSize(new java.awt.Dimension(37, 41));
        jPanelCHA65.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        CHjLabel63.setFont(new java.awt.Font("宋体", 1, 24)); // NOI18N
        CHjLabel63.setText("C");
        jPanelCHA65.add(CHjLabel63, new org.netbeans.lib.awtextra.AbsoluteConstraints(1, 1, 25, -1));

        ENjLabel63.setFont(new java.awt.Font("宋体", 1, 15)); // NOI18N
        ENjLabel63.setForeground(new java.awt.Color(255, 0, 204));
        ENjLabel63.setText("C");
        ENjLabel63.setPreferredSize(new java.awt.Dimension(10, 10));
        jPanelCHA65.add(ENjLabel63, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 25, -1, -1));

        jPanelCHC.add(jPanelCHA65);

        jPanelCHA66.setBackground(new java.awt.Color(255, 255, 255));
        jPanelCHA66.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanelCHA66.setPreferredSize(new java.awt.Dimension(37, 41));
        jPanelCHA66.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        CHjLabel64.setFont(new java.awt.Font("宋体", 1, 24)); // NOI18N
        CHjLabel64.setText("D");
        jPanelCHA66.add(CHjLabel64, new org.netbeans.lib.awtextra.AbsoluteConstraints(1, 1, 25, -1));

        ENjLabel64.setFont(new java.awt.Font("宋体", 1, 15)); // NOI18N
        ENjLabel64.setForeground(new java.awt.Color(255, 0, 204));
        ENjLabel64.setText("D");
        ENjLabel64.setPreferredSize(new java.awt.Dimension(10, 10));
        jPanelCHA66.add(ENjLabel64, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 25, -1, -1));

        jPanelCHC.add(jPanelCHA66);

        jPanelCHA67.setBackground(new java.awt.Color(255, 255, 255));
        jPanelCHA67.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanelCHA67.setPreferredSize(new java.awt.Dimension(37, 41));
        jPanelCHA67.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        CHjLabel65.setFont(new java.awt.Font("宋体", 1, 24)); // NOI18N
        CHjLabel65.setText("E");
        jPanelCHA67.add(CHjLabel65, new org.netbeans.lib.awtextra.AbsoluteConstraints(1, 1, 25, -1));

        ENjLabel65.setFont(new java.awt.Font("宋体", 1, 15)); // NOI18N
        ENjLabel65.setForeground(new java.awt.Color(255, 0, 204));
        ENjLabel65.setText("E");
        ENjLabel65.setPreferredSize(new java.awt.Dimension(10, 10));
        jPanelCHA67.add(ENjLabel65, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 25, -1, -1));

        jPanelCHC.add(jPanelCHA67);

        jPanelCHA68.setBackground(new java.awt.Color(255, 255, 255));
        jPanelCHA68.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanelCHA68.setPreferredSize(new java.awt.Dimension(37, 41));
        jPanelCHA68.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        CHjLabel66.setFont(new java.awt.Font("宋体", 1, 24)); // NOI18N
        CHjLabel66.setText("F");
        jPanelCHA68.add(CHjLabel66, new org.netbeans.lib.awtextra.AbsoluteConstraints(1, 1, 25, -1));

        ENjLabel66.setFont(new java.awt.Font("宋体", 1, 15)); // NOI18N
        ENjLabel66.setForeground(new java.awt.Color(255, 0, 204));
        ENjLabel66.setText("F");
        ENjLabel66.setPreferredSize(new java.awt.Dimension(10, 10));
        jPanelCHA68.add(ENjLabel66, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 25, -1, -1));

        jPanelCHC.add(jPanelCHA68);

        jPanelCHA69.setBackground(new java.awt.Color(255, 255, 255));
        jPanelCHA69.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanelCHA69.setPreferredSize(new java.awt.Dimension(37, 41));
        jPanelCHA69.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        CHjLabel67.setFont(new java.awt.Font("宋体", 1, 24)); // NOI18N
        CHjLabel67.setText("G");
        jPanelCHA69.add(CHjLabel67, new org.netbeans.lib.awtextra.AbsoluteConstraints(1, 1, 25, -1));

        ENjLabel67.setFont(new java.awt.Font("宋体", 1, 15)); // NOI18N
        ENjLabel67.setForeground(new java.awt.Color(255, 0, 204));
        ENjLabel67.setText("G");
        ENjLabel67.setPreferredSize(new java.awt.Dimension(10, 10));
        jPanelCHA69.add(ENjLabel67, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 25, -1, -1));

        jPanelCHC.add(jPanelCHA69);

        jPanelCHA70.setBackground(new java.awt.Color(255, 255, 255));
        jPanelCHA70.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanelCHA70.setPreferredSize(new java.awt.Dimension(37, 41));
        jPanelCHA70.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        CHjLabel68.setFont(new java.awt.Font("宋体", 1, 24)); // NOI18N
        CHjLabel68.setText("H");
        jPanelCHA70.add(CHjLabel68, new org.netbeans.lib.awtextra.AbsoluteConstraints(1, 1, 25, -1));

        ENjLabel68.setFont(new java.awt.Font("宋体", 1, 15)); // NOI18N
        ENjLabel68.setForeground(new java.awt.Color(255, 0, 204));
        ENjLabel68.setText("H");
        ENjLabel68.setPreferredSize(new java.awt.Dimension(10, 10));
        jPanelCHA70.add(ENjLabel68, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 25, -1, -1));

        jPanelCHC.add(jPanelCHA70);

        jPanelCHA71.setBackground(new java.awt.Color(255, 255, 255));
        jPanelCHA71.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanelCHA71.setPreferredSize(new java.awt.Dimension(37, 41));
        jPanelCHA71.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        CHjLabel69.setFont(new java.awt.Font("宋体", 1, 24)); // NOI18N
        CHjLabel69.setText("I");
        jPanelCHA71.add(CHjLabel69, new org.netbeans.lib.awtextra.AbsoluteConstraints(1, 1, 25, -1));

        ENjLabel69.setFont(new java.awt.Font("宋体", 1, 15)); // NOI18N
        ENjLabel69.setForeground(new java.awt.Color(255, 0, 204));
        ENjLabel69.setText("I");
        ENjLabel69.setPreferredSize(new java.awt.Dimension(10, 10));
        jPanelCHA71.add(ENjLabel69, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 25, -1, -1));

        jPanelCHC.add(jPanelCHA71);

        jPanelCHA72.setBackground(new java.awt.Color(255, 255, 255));
        jPanelCHA72.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanelCHA72.setPreferredSize(new java.awt.Dimension(37, 41));
        jPanelCHA72.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        CHjLabel70.setFont(new java.awt.Font("宋体", 1, 24)); // NOI18N
        CHjLabel70.setText("J");
        jPanelCHA72.add(CHjLabel70, new org.netbeans.lib.awtextra.AbsoluteConstraints(1, 1, 25, -1));

        ENjLabel70.setFont(new java.awt.Font("宋体", 1, 15)); // NOI18N
        ENjLabel70.setForeground(new java.awt.Color(255, 0, 204));
        ENjLabel70.setText("J");
        ENjLabel70.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        ENjLabel70.setPreferredSize(new java.awt.Dimension(10, 15));
        jPanelCHA72.add(ENjLabel70, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 25, -1, -1));

        jPanelCHC.add(jPanelCHA72);

        jPanelCHA73.setBackground(new java.awt.Color(255, 255, 255));
        jPanelCHA73.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanelCHA73.setPreferredSize(new java.awt.Dimension(37, 41));
        jPanelCHA73.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        CHjLabel71.setFont(new java.awt.Font("宋体", 1, 24)); // NOI18N
        CHjLabel71.setText("K");
        jPanelCHA73.add(CHjLabel71, new org.netbeans.lib.awtextra.AbsoluteConstraints(1, 1, 25, -1));

        ENjLabel71.setFont(new java.awt.Font("宋体", 1, 15)); // NOI18N
        ENjLabel71.setForeground(new java.awt.Color(255, 0, 204));
        ENjLabel71.setText("K");
        ENjLabel71.setPreferredSize(new java.awt.Dimension(10, 10));
        jPanelCHA73.add(ENjLabel71, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 25, -1, -1));

        jPanelCHC.add(jPanelCHA73);

        jPanelCHA74.setBackground(new java.awt.Color(255, 255, 255));
        jPanelCHA74.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanelCHA74.setPreferredSize(new java.awt.Dimension(37, 41));
        jPanelCHA74.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        CHjLabel72.setFont(new java.awt.Font("宋体", 1, 24)); // NOI18N
        CHjLabel72.setText("L");
        jPanelCHA74.add(CHjLabel72, new org.netbeans.lib.awtextra.AbsoluteConstraints(1, 1, 25, -1));

        ENjLabel72.setFont(new java.awt.Font("宋体", 1, 15)); // NOI18N
        ENjLabel72.setForeground(new java.awt.Color(255, 0, 204));
        ENjLabel72.setText("L");
        ENjLabel72.setPreferredSize(new java.awt.Dimension(10, 10));
        jPanelCHA74.add(ENjLabel72, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 25, -1, -1));

        jPanelCHC.add(jPanelCHA74);

        jPanelCHA75.setBackground(new java.awt.Color(255, 255, 255));
        jPanelCHA75.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanelCHA75.setPreferredSize(new java.awt.Dimension(37, 41));
        jPanelCHA75.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        CHjLabel73.setFont(new java.awt.Font("宋体", 1, 24)); // NOI18N
        CHjLabel73.setText("M");
        jPanelCHA75.add(CHjLabel73, new org.netbeans.lib.awtextra.AbsoluteConstraints(1, 1, 25, -1));

        ENjLabel73.setFont(new java.awt.Font("宋体", 1, 15)); // NOI18N
        ENjLabel73.setForeground(new java.awt.Color(255, 0, 204));
        ENjLabel73.setText("M");
        ENjLabel73.setPreferredSize(new java.awt.Dimension(10, 10));
        jPanelCHA75.add(ENjLabel73, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 25, -1, -1));

        jPanelCHC.add(jPanelCHA75);

        jPanelCHA76.setBackground(new java.awt.Color(255, 255, 255));
        jPanelCHA76.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanelCHA76.setPreferredSize(new java.awt.Dimension(37, 41));
        jPanelCHA76.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        CHjLabel74.setFont(new java.awt.Font("宋体", 1, 24)); // NOI18N
        CHjLabel74.setText("N");
        jPanelCHA76.add(CHjLabel74, new org.netbeans.lib.awtextra.AbsoluteConstraints(1, 1, 25, -1));

        ENjLabel74.setFont(new java.awt.Font("宋体", 1, 15)); // NOI18N
        ENjLabel74.setForeground(new java.awt.Color(255, 0, 204));
        ENjLabel74.setText("N");
        ENjLabel74.setPreferredSize(new java.awt.Dimension(10, 10));
        jPanelCHA76.add(ENjLabel74, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 25, -1, -1));

        jPanelCHC.add(jPanelCHA76);

        jPanelCHA77.setBackground(new java.awt.Color(255, 255, 255));
        jPanelCHA77.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanelCHA77.setPreferredSize(new java.awt.Dimension(37, 41));
        jPanelCHA77.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        CHjLabel75.setFont(new java.awt.Font("宋体", 1, 24)); // NOI18N
        CHjLabel75.setText("O");
        jPanelCHA77.add(CHjLabel75, new org.netbeans.lib.awtextra.AbsoluteConstraints(1, 1, 25, -1));

        ENjLabel75.setFont(new java.awt.Font("宋体", 1, 15)); // NOI18N
        ENjLabel75.setForeground(new java.awt.Color(255, 0, 204));
        ENjLabel75.setText("O");
        ENjLabel75.setPreferredSize(new java.awt.Dimension(10, 10));
        jPanelCHA77.add(ENjLabel75, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 25, -1, -1));

        jPanelCHC.add(jPanelCHA77);

        jPanelCHA78.setBackground(new java.awt.Color(255, 255, 255));
        jPanelCHA78.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanelCHA78.setPreferredSize(new java.awt.Dimension(37, 41));
        jPanelCHA78.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        CHjLabel76.setFont(new java.awt.Font("宋体", 1, 24)); // NOI18N
        CHjLabel76.setText("P");
        jPanelCHA78.add(CHjLabel76, new org.netbeans.lib.awtextra.AbsoluteConstraints(1, 1, 25, -1));

        ENjLabel76.setFont(new java.awt.Font("宋体", 1, 15)); // NOI18N
        ENjLabel76.setForeground(new java.awt.Color(255, 0, 204));
        ENjLabel76.setText("P");
        ENjLabel76.setPreferredSize(new java.awt.Dimension(10, 10));
        jPanelCHA78.add(ENjLabel76, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 25, -1, -1));

        jPanelCHC.add(jPanelCHA78);

        jPanelCHA79.setBackground(new java.awt.Color(255, 255, 255));
        jPanelCHA79.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanelCHA79.setPreferredSize(new java.awt.Dimension(37, 41));
        jPanelCHA79.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        CHjLabel77.setFont(new java.awt.Font("宋体", 1, 24)); // NOI18N
        CHjLabel77.setText("Q");
        jPanelCHA79.add(CHjLabel77, new org.netbeans.lib.awtextra.AbsoluteConstraints(1, 1, 25, -1));

        ENjLabel77.setFont(new java.awt.Font("宋体", 1, 15)); // NOI18N
        ENjLabel77.setForeground(new java.awt.Color(255, 0, 204));
        ENjLabel77.setText("Q");
        ENjLabel77.setPreferredSize(new java.awt.Dimension(10, 10));
        jPanelCHA79.add(ENjLabel77, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 25, -1, -1));

        jPanelCHC.add(jPanelCHA79);

        jPanelCHA80.setBackground(new java.awt.Color(255, 255, 255));
        jPanelCHA80.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanelCHA80.setPreferredSize(new java.awt.Dimension(37, 41));
        jPanelCHA80.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        CHjLabel78.setFont(new java.awt.Font("宋体", 1, 24)); // NOI18N
        CHjLabel78.setText("R");
        jPanelCHA80.add(CHjLabel78, new org.netbeans.lib.awtextra.AbsoluteConstraints(1, 1, 25, -1));

        ENjLabel78.setFont(new java.awt.Font("宋体", 1, 15)); // NOI18N
        ENjLabel78.setForeground(new java.awt.Color(255, 0, 204));
        ENjLabel78.setText("R");
        ENjLabel78.setPreferredSize(new java.awt.Dimension(10, 10));
        jPanelCHA80.add(ENjLabel78, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 25, -1, -1));

        jPanelCHC.add(jPanelCHA80);

        jPanelCHA81.setBackground(new java.awt.Color(255, 255, 255));
        jPanelCHA81.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanelCHA81.setPreferredSize(new java.awt.Dimension(37, 41));
        jPanelCHA81.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        CHjLabel79.setFont(new java.awt.Font("宋体", 1, 24)); // NOI18N
        CHjLabel79.setText("S");
        jPanelCHA81.add(CHjLabel79, new org.netbeans.lib.awtextra.AbsoluteConstraints(1, 1, 25, -1));

        ENjLabel79.setFont(new java.awt.Font("宋体", 1, 15)); // NOI18N
        ENjLabel79.setForeground(new java.awt.Color(255, 0, 204));
        ENjLabel79.setText("S");
        ENjLabel79.setPreferredSize(new java.awt.Dimension(10, 10));
        jPanelCHA81.add(ENjLabel79, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 25, -1, -1));

        jPanelCHC.add(jPanelCHA81);

        jPanelCHA82.setBackground(new java.awt.Color(255, 255, 255));
        jPanelCHA82.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanelCHA82.setPreferredSize(new java.awt.Dimension(37, 41));
        jPanelCHA82.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        CHjLabel80.setFont(new java.awt.Font("宋体", 1, 24)); // NOI18N
        CHjLabel80.setText("T");
        jPanelCHA82.add(CHjLabel80, new org.netbeans.lib.awtextra.AbsoluteConstraints(1, 1, 25, -1));

        ENjLabel80.setFont(new java.awt.Font("宋体", 1, 15)); // NOI18N
        ENjLabel80.setForeground(new java.awt.Color(255, 0, 204));
        ENjLabel80.setText("T");
        ENjLabel80.setPreferredSize(new java.awt.Dimension(10, 10));
        jPanelCHA82.add(ENjLabel80, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 25, -1, -1));

        jPanelCHC.add(jPanelCHA82);

        jPanelCHA83.setBackground(new java.awt.Color(255, 255, 255));
        jPanelCHA83.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanelCHA83.setPreferredSize(new java.awt.Dimension(37, 41));
        jPanelCHA83.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        CHjLabel81.setFont(new java.awt.Font("宋体", 1, 24)); // NOI18N
        CHjLabel81.setText("U");
        jPanelCHA83.add(CHjLabel81, new org.netbeans.lib.awtextra.AbsoluteConstraints(1, 1, 25, -1));

        ENjLabel81.setFont(new java.awt.Font("宋体", 1, 15)); // NOI18N
        ENjLabel81.setForeground(new java.awt.Color(255, 0, 204));
        ENjLabel81.setText("U");
        ENjLabel81.setPreferredSize(new java.awt.Dimension(10, 10));
        jPanelCHA83.add(ENjLabel81, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 25, -1, -1));

        jPanelCHC.add(jPanelCHA83);

        jPanelCHA84.setBackground(new java.awt.Color(255, 255, 255));
        jPanelCHA84.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanelCHA84.setPreferredSize(new java.awt.Dimension(37, 41));
        jPanelCHA84.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        CHjLabel82.setFont(new java.awt.Font("宋体", 1, 24)); // NOI18N
        CHjLabel82.setText("V");
        jPanelCHA84.add(CHjLabel82, new org.netbeans.lib.awtextra.AbsoluteConstraints(1, 1, 25, -1));

        ENjLabel82.setFont(new java.awt.Font("宋体", 1, 15)); // NOI18N
        ENjLabel82.setForeground(new java.awt.Color(255, 0, 204));
        ENjLabel82.setText("V");
        ENjLabel82.setPreferredSize(new java.awt.Dimension(10, 10));
        jPanelCHA84.add(ENjLabel82, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 25, -1, -1));

        jPanelCHC.add(jPanelCHA84);

        jPanelCHA85.setBackground(new java.awt.Color(255, 255, 255));
        jPanelCHA85.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanelCHA85.setPreferredSize(new java.awt.Dimension(37, 41));
        jPanelCHA85.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        CHjLabel83.setFont(new java.awt.Font("宋体", 1, 24)); // NOI18N
        CHjLabel83.setText("W");
        jPanelCHA85.add(CHjLabel83, new org.netbeans.lib.awtextra.AbsoluteConstraints(1, 1, 25, -1));

        ENjLabel83.setFont(new java.awt.Font("宋体", 1, 15)); // NOI18N
        ENjLabel83.setForeground(new java.awt.Color(255, 0, 204));
        ENjLabel83.setText("W");
        ENjLabel83.setPreferredSize(new java.awt.Dimension(10, 10));
        jPanelCHA85.add(ENjLabel83, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 25, -1, -1));

        jPanelCHC.add(jPanelCHA85);

        jPanelCHA86.setBackground(new java.awt.Color(255, 255, 255));
        jPanelCHA86.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanelCHA86.setPreferredSize(new java.awt.Dimension(37, 41));
        jPanelCHA86.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        CHjLabel84.setFont(new java.awt.Font("宋体", 1, 24)); // NOI18N
        CHjLabel84.setText("X");
        jPanelCHA86.add(CHjLabel84, new org.netbeans.lib.awtextra.AbsoluteConstraints(1, 1, 25, -1));

        ENjLabel84.setFont(new java.awt.Font("宋体", 1, 15)); // NOI18N
        ENjLabel84.setForeground(new java.awt.Color(255, 0, 204));
        ENjLabel84.setText("X");
        ENjLabel84.setPreferredSize(new java.awt.Dimension(10, 10));
        jPanelCHA86.add(ENjLabel84, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 25, -1, -1));

        jPanelCHC.add(jPanelCHA86);

        jPanelCHA87.setBackground(new java.awt.Color(255, 255, 255));
        jPanelCHA87.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanelCHA87.setPreferredSize(new java.awt.Dimension(37, 41));
        jPanelCHA87.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        CHjLabel85.setFont(new java.awt.Font("宋体", 1, 24)); // NOI18N
        CHjLabel85.setText("Y");
        jPanelCHA87.add(CHjLabel85, new org.netbeans.lib.awtextra.AbsoluteConstraints(1, 1, 25, -1));

        ENjLabel85.setFont(new java.awt.Font("宋体", 1, 15)); // NOI18N
        ENjLabel85.setForeground(new java.awt.Color(255, 0, 204));
        ENjLabel85.setText("Y");
        ENjLabel85.setPreferredSize(new java.awt.Dimension(10, 10));
        jPanelCHA87.add(ENjLabel85, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 25, -1, -1));

        jPanelCHC.add(jPanelCHA87);

        jPanelCHA88.setBackground(new java.awt.Color(255, 255, 255));
        jPanelCHA88.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanelCHA88.setPreferredSize(new java.awt.Dimension(37, 41));
        jPanelCHA88.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        CHjLabel86.setFont(new java.awt.Font("宋体", 1, 24)); // NOI18N
        CHjLabel86.setText("Z");
        jPanelCHA88.add(CHjLabel86, new org.netbeans.lib.awtextra.AbsoluteConstraints(1, 1, 25, -1));

        ENjLabel86.setFont(new java.awt.Font("宋体", 1, 15)); // NOI18N
        ENjLabel86.setForeground(new java.awt.Color(255, 0, 204));
        ENjLabel86.setText("Z");
        ENjLabel86.setPreferredSize(new java.awt.Dimension(10, 10));
        jPanelCHA88.add(ENjLabel86, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 25, -1, -1));

        jPanelCHC.add(jPanelCHA88);

        jPanelCHA89.setBackground(new java.awt.Color(255, 255, 255));
        jPanelCHA89.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanelCHA89.setPreferredSize(new java.awt.Dimension(37, 41));
        jPanelCHA89.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        CHjLabel87.setFont(new java.awt.Font("宋体", 1, 24)); // NOI18N
        CHjLabel87.setText("黑");
        jPanelCHA89.add(CHjLabel87, new org.netbeans.lib.awtextra.AbsoluteConstraints(1, 1, 25, -1));

        ENjLabel87.setFont(new java.awt.Font("宋体", 0, 15)); // NOI18N
        ENjLabel87.setPreferredSize(new java.awt.Dimension(10, 10));
        jPanelCHA89.add(ENjLabel87, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 25, -1, -1));

        jPanelCHC.add(jPanelCHA89);

        jPanelCHA90.setBackground(new java.awt.Color(255, 255, 255));
        jPanelCHA90.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanelCHA90.setPreferredSize(new java.awt.Dimension(37, 41));
        jPanelCHA90.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        CHjLabel88.setFont(new java.awt.Font("宋体", 1, 24)); // NOI18N
        CHjLabel88.setText("湘");
        jPanelCHA90.add(CHjLabel88, new org.netbeans.lib.awtextra.AbsoluteConstraints(1, 1, 25, -1));

        ENjLabel88.setFont(new java.awt.Font("宋体", 0, 15)); // NOI18N
        ENjLabel88.setPreferredSize(new java.awt.Dimension(10, 10));
        jPanelCHA90.add(ENjLabel88, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 25, -1, -1));

        jPanelCHC.add(jPanelCHA90);

        jPanelCHA91.setBackground(new java.awt.Color(255, 255, 255));
        jPanelCHA91.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanelCHA91.setPreferredSize(new java.awt.Dimension(37, 41));
        jPanelCHA91.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        CHjLabel89.setFont(new java.awt.Font("宋体", 0, 24)); // NOI18N
        jPanelCHA91.add(CHjLabel89, new org.netbeans.lib.awtextra.AbsoluteConstraints(1, 1, 24, 30));

        ENjLabel89.setFont(new java.awt.Font("宋体", 0, 15)); // NOI18N
        ENjLabel89.setPreferredSize(new java.awt.Dimension(10, 10));
        jPanelCHA91.add(ENjLabel89, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 25, -1, -1));

        jPanelCHC.add(jPanelCHA91);

        jPanelCHA92.setBackground(new java.awt.Color(255, 255, 255));
        jPanelCHA92.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanelCHA92.setPreferredSize(new java.awt.Dimension(37, 41));
        jPanelCHA92.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        CHjLabel90.setFont(new java.awt.Font("宋体", 1, 24)); // NOI18N
        CHjLabel90.setText("桂");
        jPanelCHA92.add(CHjLabel90, new org.netbeans.lib.awtextra.AbsoluteConstraints(1, 1, 25, -1));

        ENjLabel90.setFont(new java.awt.Font("宋体", 0, 15)); // NOI18N
        ENjLabel90.setPreferredSize(new java.awt.Dimension(10, 10));
        jPanelCHA92.add(ENjLabel90, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 25, -1, -1));

        jPanelCHC.add(jPanelCHA92);

        javax.swing.GroupLayout plate3JPanelLayout = new javax.swing.GroupLayout(plate3JPanel);
        plate3JPanel.setLayout(plate3JPanelLayout);
        plate3JPanelLayout.setHorizontalGroup(
            plate3JPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelCHC, javax.swing.GroupLayout.DEFAULT_SIZE, 382, Short.MAX_VALUE)
        );
        plate3JPanelLayout.setVerticalGroup(
            plate3JPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(plate3JPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelCHC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(232, Short.MAX_VALUE))
        );

        centerJPanel.add(plate3JPanel, "card2");

        mainJPanel.add(centerJPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(451, 200, 384, 368));

        jPanel13.setBackground(java.awt.Color.white);
        jPanel13.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel13.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        dateJLabel.setFont(new java.awt.Font("宋体", 1, 20)); // NOI18N
        dateJLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        dateJLabel.setText("2016-06-22");
        jPanel13.add(dateJLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 127, 38));

        timeJLabel.setFont(new java.awt.Font("宋体", 1, 20)); // NOI18N
        timeJLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        timeJLabel.setText("17:25:48");
        timeJLabel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel13.add(timeJLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(127, 0, 127, 38));

        vehCntJLabel.setFont(new java.awt.Font("宋体", 1, 20)); // NOI18N
        vehCntJLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        vehCntJLabel.setText("9999");
        jPanel13.add(vehCntJLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(254, 0, 130, 38));

        mainJPanel.add(jPanel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(451, 570, 384, 38));

        jPanel14.setBackground(java.awt.Color.white);
        jPanel14.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel14.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        modeJLabel1.setFont(new java.awt.Font("宋体", 0, 28)); // NOI18N
        modeJLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        modeJLabel1.setText("人工");
        modeJLabel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel14.add(modeJLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 192, 28));

        modeJLabel2.setFont(new java.awt.Font("宋体", 0, 28)); // NOI18N
        modeJLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        modeJLabel2.setText("营运");
        jPanel14.add(modeJLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(192, 0, 191, 28));

        mainJPanel.add(jPanel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(451, 610, 384, 28));

        jPanel15.setBackground(java.awt.Color.white);
        jPanel15.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel15.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel20.setBackground(java.awt.Color.white);
        jPanel20.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel20.setOpaque(false);
        jPanel20.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        cartjLabel1.setFont(new java.awt.Font("宋体", 1, 24)); // NOI18N
        cartjLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cartjLabel1.setText("卡箱");
        jPanel20.add(cartjLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 129, 30));

        cartjLabel2.setFont(new java.awt.Font("宋体", 1, 24)); // NOI18N
        cartjLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cartjLabel2.setText("00000");
        jPanel20.add(cartjLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 30, 129, 30));

        cartjLabel3.setFont(new java.awt.Font("宋体", 1, 30)); // NOI18N
        cartjLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cartjLabel3.setText("000");
        jPanel20.add(cartjLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 60, 55, 30));

        cartjLabel4.setFont(new java.awt.Font("宋体", 1, 30)); // NOI18N
        cartjLabel4.setText("/");
        jPanel20.add(cartjLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(55, 60, 17, 30));

        cartjLabel5.setFont(new java.awt.Font("宋体", 1, 30)); // NOI18N
        cartjLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cartjLabel5.setText("000");
        jPanel20.add(cartjLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(67, 60, 55, 30));

        jPanel15.add(jPanel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(128, 0, 128, 92));

        jPanel21.setBackground(java.awt.Color.white);
        jPanel21.setOpaque(false);
        jPanel21.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        weightVehCntJLabel.setFont(new java.awt.Font("宋体", 1, 20)); // NOI18N
        weightVehCntJLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        weightVehCntJLabel.setText("0");
        weightVehCntJLabel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel21.add(weightVehCntJLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 128, 20));

        errorMsgJLabel.setBackground(java.awt.Color.white);
        errorMsgJLabel.setFont(new java.awt.Font("宋体", 1, 20)); // NOI18N
        errorMsgJLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        errorMsgJLabel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        errorMsgJLabel.setOpaque(true);
        jPanel21.add(errorMsgJLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 20, 128, 72));

        jPanel15.add(jPanel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(256, 0, 128, 92));

        mainJPanel.add(jPanel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(451, 643, 384, 92));

        jPanel16.setBackground(java.awt.Color.white);
        jPanel16.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel16.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        weighJLabel.setFont(new java.awt.Font("宋体", 1, 22)); // NOI18N
        weighJLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        weighJLabel.setText("999.99-40");
        jPanel16.add(weighJLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 43, 175, 20));

        veh1JPanel.setBackground(java.awt.Color.white);
        veh1JPanel.setOpaque(false);
        veh1JPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        veh1JLabel2.setFont(new java.awt.Font("宋体", 1, 20)); // NOI18N
        veh1JLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        veh1JLabel2.setText("99.9");
        veh1JPanel.add(veh1JLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(117, 0, 50, 27));

        veh1JLabel4.setFont(new java.awt.Font("宋体", 1, 20)); // NOI18N
        veh1JLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        veh1JLabel4.setText("99.9");
        veh1JPanel.add(veh1JLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(117, 27, 50, 27));

        veh1JLabel6.setFont(new java.awt.Font("宋体", 1, 20)); // NOI18N
        veh1JLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        veh1JLabel6.setText("99.9");
        veh1JPanel.add(veh1JLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(117, 54, 50, 27));

        veh1JLabel8.setFont(new java.awt.Font("宋体", 1, 20)); // NOI18N
        veh1JLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        veh1JLabel8.setText("99.9");
        veh1JPanel.add(veh1JLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(117, 81, 50, 27));

        jPanel16.add(veh1JPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 63, 175, 112));

        mainJPanel.add(jPanel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(839, 200, 175, 175));

        veh2JPanel.setBackground(java.awt.Color.white);
        veh2JPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        veh2JPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        veh2JLabel2.setFont(new java.awt.Font("宋体", 1, 20)); // NOI18N
        veh2JLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        veh2JLabel2.setText("99.9");
        veh2JPanel.add(veh2JLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(117, 0, 50, 27));

        veh2JLabel4.setFont(new java.awt.Font("宋体", 1, 20)); // NOI18N
        veh2JLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        veh2JLabel4.setText("99.9");
        veh2JPanel.add(veh2JLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(117, 27, 50, 27));

        veh2JLabel6.setFont(new java.awt.Font("宋体", 1, 20)); // NOI18N
        veh2JLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        veh2JLabel6.setText("99.9");
        veh2JPanel.add(veh2JLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(117, 54, 50, 27));

        veh2JLabel8.setFont(new java.awt.Font("宋体", 1, 20)); // NOI18N
        veh2JLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        veh2JLabel8.setText("99.9");
        veh2JPanel.add(veh2JLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(117, 81, 50, 27));

        mainJPanel.add(veh2JPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(839, 378, 175, 112));

        veh3JPanel.setBackground(java.awt.Color.white);
        veh3JPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        veh3JPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        veh3JLabel2.setFont(new java.awt.Font("宋体", 1, 20)); // NOI18N
        veh3JLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        veh3JLabel2.setText("99.9");
        veh3JPanel.add(veh3JLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(117, 0, 50, 27));

        veh3JLabel4.setFont(new java.awt.Font("宋体", 1, 20)); // NOI18N
        veh3JLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        veh3JLabel4.setText("99.9");
        veh3JPanel.add(veh3JLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(117, 27, 50, 27));

        veh3JLabel6.setFont(new java.awt.Font("宋体", 1, 20)); // NOI18N
        veh3JLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        veh3JLabel6.setText("99.9");
        veh3JPanel.add(veh3JLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(117, 54, 50, 27));

        veh3JLabel8.setFont(new java.awt.Font("宋体", 1, 20)); // NOI18N
        veh3JLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        veh3JLabel8.setText("99.9");
        veh3JPanel.add(veh3JLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(117, 81, 50, 27));

        mainJPanel.add(veh3JPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(839, 493, 175, 112));

        jPanel19.setBackground(java.awt.Color.white);
        jPanel19.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel19.setLayout(new java.awt.CardLayout());

        offLineJPanel1.setBackground(java.awt.Color.white);

        offLineJLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ui/img/entOpen.png"))); // NOI18N

        javax.swing.GroupLayout offLineJPanel1Layout = new javax.swing.GroupLayout(offLineJPanel1);
        offLineJPanel1.setLayout(offLineJPanel1Layout);
        offLineJPanel1Layout.setHorizontalGroup(
            offLineJPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(offLineJLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 173, Short.MAX_VALUE)
        );
        offLineJPanel1Layout.setVerticalGroup(
            offLineJPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(offLineJLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 124, Short.MAX_VALUE)
        );

        jPanel19.add(offLineJPanel1, "card3");

        offLineJPanel2.setBackground(java.awt.Color.red);

        offLineJLabel2.setFont(new java.awt.Font("宋体", 1, 24)); // NOI18N
        offLineJLabel2.setForeground(java.awt.Color.white);
        offLineJLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        offLineJLabel2.setText("离线倒计时");

        offLineJLabel3.setFont(new java.awt.Font("宋体", 1, 24)); // NOI18N
        offLineJLabel3.setForeground(java.awt.Color.white);
        offLineJLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        offLineJLabel3.setText("999999:99:99");

        javax.swing.GroupLayout offLineJPanel2Layout = new javax.swing.GroupLayout(offLineJPanel2);
        offLineJPanel2.setLayout(offLineJPanel2Layout);
        offLineJPanel2Layout.setHorizontalGroup(
            offLineJPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(offLineJLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 173, Short.MAX_VALUE)
            .addGroup(offLineJPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(offLineJLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 173, Short.MAX_VALUE))
        );
        offLineJPanel2Layout.setVerticalGroup(
            offLineJPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, offLineJPanel2Layout.createSequentialGroup()
                .addContainerGap(74, Short.MAX_VALUE)
                .addComponent(offLineJLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
            .addGroup(offLineJPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, offLineJPanel2Layout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(offLineJLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(104, 104, 104)))
        );

        jPanel19.add(offLineJPanel2, "card2");

        mainJPanel.add(jPanel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(839, 608, 175, 126));

        alarmJPanel.setBackground(java.awt.Color.white);
        alarmJPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "违章", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("宋体", 1, 24))); // NOI18N
        alarmJPanel.setLayout(new java.awt.GridLayout(6, 1));
        mainJPanel.add(alarmJPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(451, 200, 384, 368));

        getContentPane().add(mainJPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 30, -1, -1));

        titleJPanel.setBackground(java.awt.Color.white);

        titleJLabel.setBackground(java.awt.Color.blue);
        titleJLabel.setFont(new java.awt.Font("宋体", 1, 18)); // NOI18N
        titleJLabel.setForeground(java.awt.Color.white);
        titleJLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        titleJLabel.setOpaque(true);

        javax.swing.GroupLayout titleJPanelLayout = new javax.swing.GroupLayout(titleJPanel);
        titleJPanel.setLayout(titleJPanelLayout);
        titleJPanelLayout.setHorizontalGroup(
            titleJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, titleJPanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(titleJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 1022, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        titleJPanelLayout.setVerticalGroup(
            titleJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(titleJPanelLayout.createSequentialGroup()
                .addComponent(titleJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        getContentPane().add(titleJPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1022, 28));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(ExtJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(ExtJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(ExtJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(ExtJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ExtJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel CHjLabel1;
    private javax.swing.JLabel CHjLabel10;
    private javax.swing.JLabel CHjLabel11;
    private javax.swing.JLabel CHjLabel12;
    private javax.swing.JLabel CHjLabel13;
    private javax.swing.JLabel CHjLabel14;
    private javax.swing.JLabel CHjLabel15;
    private javax.swing.JLabel CHjLabel16;
    private javax.swing.JLabel CHjLabel17;
    private javax.swing.JLabel CHjLabel18;
    private javax.swing.JLabel CHjLabel19;
    private javax.swing.JLabel CHjLabel2;
    private javax.swing.JLabel CHjLabel20;
    private javax.swing.JLabel CHjLabel21;
    private javax.swing.JLabel CHjLabel22;
    private javax.swing.JLabel CHjLabel23;
    private javax.swing.JLabel CHjLabel24;
    private javax.swing.JLabel CHjLabel25;
    private javax.swing.JLabel CHjLabel26;
    private javax.swing.JLabel CHjLabel27;
    private javax.swing.JLabel CHjLabel28;
    private javax.swing.JLabel CHjLabel29;
    private javax.swing.JLabel CHjLabel3;
    private javax.swing.JLabel CHjLabel30;
    private javax.swing.JLabel CHjLabel31;
    private javax.swing.JLabel CHjLabel32;
    private javax.swing.JLabel CHjLabel33;
    private javax.swing.JLabel CHjLabel34;
    private javax.swing.JLabel CHjLabel35;
    private javax.swing.JLabel CHjLabel36;
    private javax.swing.JLabel CHjLabel37;
    private javax.swing.JLabel CHjLabel38;
    private javax.swing.JLabel CHjLabel39;
    private javax.swing.JLabel CHjLabel4;
    private javax.swing.JLabel CHjLabel40;
    private javax.swing.JLabel CHjLabel41;
    private javax.swing.JLabel CHjLabel42;
    private javax.swing.JLabel CHjLabel43;
    private javax.swing.JLabel CHjLabel44;
    private javax.swing.JLabel CHjLabel45;
    private javax.swing.JLabel CHjLabel46;
    private javax.swing.JLabel CHjLabel47;
    private javax.swing.JLabel CHjLabel48;
    private javax.swing.JLabel CHjLabel49;
    private javax.swing.JLabel CHjLabel5;
    private javax.swing.JLabel CHjLabel50;
    private javax.swing.JLabel CHjLabel51;
    private javax.swing.JLabel CHjLabel52;
    private javax.swing.JLabel CHjLabel53;
    private javax.swing.JLabel CHjLabel54;
    private javax.swing.JLabel CHjLabel55;
    private javax.swing.JLabel CHjLabel56;
    private javax.swing.JLabel CHjLabel57;
    private javax.swing.JLabel CHjLabel58;
    private javax.swing.JLabel CHjLabel59;
    private javax.swing.JLabel CHjLabel6;
    private javax.swing.JLabel CHjLabel60;
    private javax.swing.JLabel CHjLabel61;
    private javax.swing.JLabel CHjLabel62;
    private javax.swing.JLabel CHjLabel63;
    private javax.swing.JLabel CHjLabel64;
    private javax.swing.JLabel CHjLabel65;
    private javax.swing.JLabel CHjLabel66;
    private javax.swing.JLabel CHjLabel67;
    private javax.swing.JLabel CHjLabel68;
    private javax.swing.JLabel CHjLabel69;
    private javax.swing.JLabel CHjLabel7;
    private javax.swing.JLabel CHjLabel70;
    private javax.swing.JLabel CHjLabel71;
    private javax.swing.JLabel CHjLabel72;
    private javax.swing.JLabel CHjLabel73;
    private javax.swing.JLabel CHjLabel74;
    private javax.swing.JLabel CHjLabel75;
    private javax.swing.JLabel CHjLabel76;
    private javax.swing.JLabel CHjLabel77;
    private javax.swing.JLabel CHjLabel78;
    private javax.swing.JLabel CHjLabel79;
    private javax.swing.JLabel CHjLabel8;
    private javax.swing.JLabel CHjLabel80;
    private javax.swing.JLabel CHjLabel81;
    private javax.swing.JLabel CHjLabel82;
    private javax.swing.JLabel CHjLabel83;
    private javax.swing.JLabel CHjLabel84;
    private javax.swing.JLabel CHjLabel85;
    private javax.swing.JLabel CHjLabel86;
    private javax.swing.JLabel CHjLabel87;
    private javax.swing.JLabel CHjLabel88;
    private javax.swing.JLabel CHjLabel89;
    private javax.swing.JLabel CHjLabel9;
    private javax.swing.JLabel CHjLabel90;
    private javax.swing.JLabel ENjLabel1;
    private javax.swing.JLabel ENjLabel10;
    private javax.swing.JLabel ENjLabel11;
    private javax.swing.JLabel ENjLabel12;
    private javax.swing.JLabel ENjLabel13;
    private javax.swing.JLabel ENjLabel14;
    private javax.swing.JLabel ENjLabel15;
    private javax.swing.JLabel ENjLabel16;
    private javax.swing.JLabel ENjLabel17;
    private javax.swing.JLabel ENjLabel18;
    private javax.swing.JLabel ENjLabel19;
    private javax.swing.JLabel ENjLabel2;
    private javax.swing.JLabel ENjLabel20;
    private javax.swing.JLabel ENjLabel21;
    private javax.swing.JLabel ENjLabel22;
    private javax.swing.JLabel ENjLabel23;
    private javax.swing.JLabel ENjLabel24;
    private javax.swing.JLabel ENjLabel25;
    private javax.swing.JLabel ENjLabel26;
    private javax.swing.JLabel ENjLabel27;
    private javax.swing.JLabel ENjLabel28;
    private javax.swing.JLabel ENjLabel29;
    private javax.swing.JLabel ENjLabel3;
    private javax.swing.JLabel ENjLabel30;
    private javax.swing.JLabel ENjLabel31;
    private javax.swing.JLabel ENjLabel32;
    private javax.swing.JLabel ENjLabel33;
    private javax.swing.JLabel ENjLabel34;
    private javax.swing.JLabel ENjLabel35;
    private javax.swing.JLabel ENjLabel36;
    private javax.swing.JLabel ENjLabel37;
    private javax.swing.JLabel ENjLabel38;
    private javax.swing.JLabel ENjLabel39;
    private javax.swing.JLabel ENjLabel4;
    private javax.swing.JLabel ENjLabel40;
    private javax.swing.JLabel ENjLabel41;
    private javax.swing.JLabel ENjLabel42;
    private javax.swing.JLabel ENjLabel43;
    private javax.swing.JLabel ENjLabel44;
    private javax.swing.JLabel ENjLabel45;
    private javax.swing.JLabel ENjLabel46;
    private javax.swing.JLabel ENjLabel47;
    private javax.swing.JLabel ENjLabel48;
    private javax.swing.JLabel ENjLabel49;
    private javax.swing.JLabel ENjLabel5;
    private javax.swing.JLabel ENjLabel50;
    private javax.swing.JLabel ENjLabel51;
    private javax.swing.JLabel ENjLabel52;
    private javax.swing.JLabel ENjLabel53;
    private javax.swing.JLabel ENjLabel54;
    private javax.swing.JLabel ENjLabel55;
    private javax.swing.JLabel ENjLabel56;
    private javax.swing.JLabel ENjLabel57;
    private javax.swing.JLabel ENjLabel58;
    private javax.swing.JLabel ENjLabel59;
    private javax.swing.JLabel ENjLabel6;
    private javax.swing.JLabel ENjLabel60;
    private javax.swing.JLabel ENjLabel61;
    private javax.swing.JLabel ENjLabel62;
    private javax.swing.JLabel ENjLabel63;
    private javax.swing.JLabel ENjLabel64;
    private javax.swing.JLabel ENjLabel65;
    private javax.swing.JLabel ENjLabel66;
    private javax.swing.JLabel ENjLabel67;
    private javax.swing.JLabel ENjLabel68;
    private javax.swing.JLabel ENjLabel69;
    private javax.swing.JLabel ENjLabel7;
    private javax.swing.JLabel ENjLabel70;
    private javax.swing.JLabel ENjLabel71;
    private javax.swing.JLabel ENjLabel72;
    private javax.swing.JLabel ENjLabel73;
    private javax.swing.JLabel ENjLabel74;
    private javax.swing.JLabel ENjLabel75;
    private javax.swing.JLabel ENjLabel76;
    private javax.swing.JLabel ENjLabel77;
    private javax.swing.JLabel ENjLabel78;
    private javax.swing.JLabel ENjLabel79;
    private javax.swing.JLabel ENjLabel8;
    private javax.swing.JLabel ENjLabel80;
    private javax.swing.JLabel ENjLabel81;
    private javax.swing.JLabel ENjLabel82;
    private javax.swing.JLabel ENjLabel83;
    private javax.swing.JLabel ENjLabel84;
    private javax.swing.JLabel ENjLabel85;
    private javax.swing.JLabel ENjLabel86;
    private javax.swing.JLabel ENjLabel87;
    private javax.swing.JLabel ENjLabel88;
    private javax.swing.JLabel ENjLabel89;
    private javax.swing.JLabel ENjLabel9;
    private javax.swing.JLabel ENjLabel90;
    private javax.swing.ButtonGroup alarmButtonGroup;
    private javax.swing.JPanel alarmJPanel;
    private javax.swing.ButtonGroup axleTypeButtonGroup;
    private javax.swing.JPanel axleTypeJPanel;
    private javax.swing.JPanel blackPlateJPanel;
    private javax.swing.JPanel blankJPanel;
    private javax.swing.JLabel blkVehJLabel1;
    private javax.swing.JLabel blkVehJLabel2;
    private javax.swing.JLabel blkVehJLabel3;
    private javax.swing.JLabel blkVehJLabel4;
    private javax.swing.JLabel blkVehJLabel5;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup7;
    private javax.swing.JLabel cardInfoJlabel1;
    private javax.swing.JLabel cardInfoJlabel2;
    private javax.swing.JLabel cardInfoJlabel3;
    private javax.swing.JLabel cardInfoJlabel4;
    private javax.swing.JLabel cardInfoJlabel5;
    private javax.swing.JLabel cardInfoJlabel6;
    private javax.swing.JLabel cardInfoJlabel7;
    private javax.swing.JLabel cardInfoJlabel8;
    private javax.swing.JPanel cardRoomJPanel;
    private javax.swing.ButtonGroup cartButtonGroup;
    private javax.swing.JLabel cartjLabel1;
    private javax.swing.JLabel cartjLabel2;
    private javax.swing.JLabel cartjLabel3;
    private javax.swing.JLabel cartjLabel4;
    private javax.swing.JLabel cartjLabel5;
    private javax.swing.JPanel centerJPanel;
    private javax.swing.ButtonGroup collectButtonGroup;
    private javax.swing.ButtonGroup collectButtonGroupNew;
    private javax.swing.JPanel collectJPanel;
    private javax.swing.JLabel dateJLabel;
    private javax.swing.JPanel entryInfoJPanel;
    private javax.swing.JLabel entryInfoJlabel1;
    private javax.swing.JLabel entryInfoJlabel2;
    private javax.swing.JLabel entryInfoJlabel3;
    private javax.swing.JLabel entryInfoJlabel4;
    private javax.swing.JLabel entryInfoJlabel5;
    private javax.swing.JLabel entryInfoJlabel6;
    private javax.swing.JLabel entryInfoJlabel7;
    private javax.swing.JLabel entryJLabel1;
    private javax.swing.JLabel entryJLabel2;
    private javax.swing.JLabel entryJLabel3;
    private javax.swing.JPanel entryJPanel;
    private javax.swing.JLabel entryVehPhoto;
    private javax.swing.JLabel errorMsgJLabel;
    private javax.swing.JLabel fareJLabel1;
    private javax.swing.JLabel fareJLabel2;
    private javax.swing.JLabel fareJLabel3;
    private javax.swing.JPanel fareJPanel;
    private javax.swing.JPanel freeVehJPanel;
    private javax.swing.JPanel inputFare1;
    private javax.swing.JPanel inputFareJPanel;
    private javax.swing.JLabel inputFareJlabel1;
    private javax.swing.JLabel inputFareJlabel2;
    private javax.swing.JLabel inputFareJlabel3;
    private javax.swing.JLabel inputFareJlabel4;
    private javax.swing.JLabel inputFareJlabel5;
    private javax.swing.JLabel inputFareJlabel6;
    private javax.swing.JPanel invoiceJPanel;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanelCHA;
    private javax.swing.JPanel jPanelCHA1;
    private javax.swing.JPanel jPanelCHA10;
    private javax.swing.JPanel jPanelCHA11;
    private javax.swing.JPanel jPanelCHA12;
    private javax.swing.JPanel jPanelCHA13;
    private javax.swing.JPanel jPanelCHA14;
    private javax.swing.JPanel jPanelCHA15;
    private javax.swing.JPanel jPanelCHA16;
    private javax.swing.JPanel jPanelCHA17;
    private javax.swing.JPanel jPanelCHA18;
    private javax.swing.JPanel jPanelCHA19;
    private javax.swing.JPanel jPanelCHA2;
    private javax.swing.JPanel jPanelCHA20;
    private javax.swing.JPanel jPanelCHA21;
    private javax.swing.JPanel jPanelCHA22;
    private javax.swing.JPanel jPanelCHA23;
    private javax.swing.JPanel jPanelCHA24;
    private javax.swing.JPanel jPanelCHA25;
    private javax.swing.JPanel jPanelCHA26;
    private javax.swing.JPanel jPanelCHA27;
    private javax.swing.JPanel jPanelCHA28;
    private javax.swing.JPanel jPanelCHA29;
    private javax.swing.JPanel jPanelCHA3;
    private javax.swing.JPanel jPanelCHA30;
    private javax.swing.JPanel jPanelCHA32;
    private javax.swing.JPanel jPanelCHA33;
    private javax.swing.JPanel jPanelCHA34;
    private javax.swing.JPanel jPanelCHA35;
    private javax.swing.JPanel jPanelCHA36;
    private javax.swing.JPanel jPanelCHA37;
    private javax.swing.JPanel jPanelCHA38;
    private javax.swing.JPanel jPanelCHA39;
    private javax.swing.JPanel jPanelCHA4;
    private javax.swing.JPanel jPanelCHA40;
    private javax.swing.JPanel jPanelCHA41;
    private javax.swing.JPanel jPanelCHA42;
    private javax.swing.JPanel jPanelCHA43;
    private javax.swing.JPanel jPanelCHA44;
    private javax.swing.JPanel jPanelCHA45;
    private javax.swing.JPanel jPanelCHA46;
    private javax.swing.JPanel jPanelCHA47;
    private javax.swing.JPanel jPanelCHA48;
    private javax.swing.JPanel jPanelCHA49;
    private javax.swing.JPanel jPanelCHA5;
    private javax.swing.JPanel jPanelCHA50;
    private javax.swing.JPanel jPanelCHA51;
    private javax.swing.JPanel jPanelCHA52;
    private javax.swing.JPanel jPanelCHA53;
    private javax.swing.JPanel jPanelCHA54;
    private javax.swing.JPanel jPanelCHA55;
    private javax.swing.JPanel jPanelCHA56;
    private javax.swing.JPanel jPanelCHA57;
    private javax.swing.JPanel jPanelCHA58;
    private javax.swing.JPanel jPanelCHA59;
    private javax.swing.JPanel jPanelCHA6;
    private javax.swing.JPanel jPanelCHA60;
    private javax.swing.JPanel jPanelCHA61;
    private javax.swing.JPanel jPanelCHA63;
    private javax.swing.JPanel jPanelCHA64;
    private javax.swing.JPanel jPanelCHA65;
    private javax.swing.JPanel jPanelCHA66;
    private javax.swing.JPanel jPanelCHA67;
    private javax.swing.JPanel jPanelCHA68;
    private javax.swing.JPanel jPanelCHA69;
    private javax.swing.JPanel jPanelCHA7;
    private javax.swing.JPanel jPanelCHA70;
    private javax.swing.JPanel jPanelCHA71;
    private javax.swing.JPanel jPanelCHA72;
    private javax.swing.JPanel jPanelCHA73;
    private javax.swing.JPanel jPanelCHA74;
    private javax.swing.JPanel jPanelCHA75;
    private javax.swing.JPanel jPanelCHA76;
    private javax.swing.JPanel jPanelCHA77;
    private javax.swing.JPanel jPanelCHA78;
    private javax.swing.JPanel jPanelCHA79;
    private javax.swing.JPanel jPanelCHA8;
    private javax.swing.JPanel jPanelCHA80;
    private javax.swing.JPanel jPanelCHA81;
    private javax.swing.JPanel jPanelCHA82;
    private javax.swing.JPanel jPanelCHA83;
    private javax.swing.JPanel jPanelCHA84;
    private javax.swing.JPanel jPanelCHA85;
    private javax.swing.JPanel jPanelCHA86;
    private javax.swing.JPanel jPanelCHA87;
    private javax.swing.JPanel jPanelCHA88;
    private javax.swing.JPanel jPanelCHA89;
    private javax.swing.JPanel jPanelCHA9;
    private javax.swing.JPanel jPanelCHA90;
    private javax.swing.JPanel jPanelCHA91;
    private javax.swing.JPanel jPanelCHA92;
    private javax.swing.JPanel jPanelCHB;
    private javax.swing.JPanel jPanelCHC;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JLabel lastVehJLabel1;
    private javax.swing.JLabel lastVehJLabel2;
    private javax.swing.JLabel lastVehJLabel3;
    private javax.swing.JLabel lastVehJLabel4;
    private javax.swing.JLabel lastVehJLabel5;
    private javax.swing.JLabel lastVehJLabel6;
    private javax.swing.JPanel lastVehJPanel;
    private javax.swing.JPanel mainJPanel;
    private javax.swing.JLabel mainMsgJLabel;
    private javax.swing.JLabel militaryjLabel;
    private javax.swing.JLabel modeJLabel1;
    private javax.swing.JLabel modeJLabel2;
    private javax.swing.JLabel mopJLabel1;
    private javax.swing.JLabel mopJLabel2;
    private javax.swing.JLabel mopJLabel3;
    private javax.swing.JPanel mopJPanel;
    private javax.swing.JLabel msgJLabel;
    private javax.swing.JPanel msgJPanel;
    private javax.swing.JLabel offLineJLabel1;
    private javax.swing.JLabel offLineJLabel2;
    private javax.swing.JLabel offLineJLabel3;
    private javax.swing.JPanel offLineJPanel1;
    private javax.swing.JPanel offLineJPanel2;
    private java.awt.Panel panel1;
    private java.awt.Panel panel2;
    private java.awt.Panel panel3;
    private java.awt.Panel panel4;
    private java.awt.Panel panel5;
    private javax.swing.JPanel plate1JPanel;
    private javax.swing.JPanel plate2JPanel;
    private javax.swing.JPanel plate3JPanel;
    private javax.swing.JPanel plateColorJPanel;
    private javax.swing.JPanel plateJPanel;
    private javax.swing.JLabel plateNumJLabel1;
    private javax.swing.JLabel plateNumJLabel2;
    private javax.swing.JLabel plateNumJLabel3;
    private javax.swing.JLabel railJLabel1;
    private javax.swing.JLabel railJLabel2;
    private javax.swing.JPanel railJPanel;
    private javax.swing.JLabel rtpImgJLabel;
    private javax.swing.JPanel rtpImgPanel;
    private javax.swing.JPanel rtpJPanel;
    private javax.swing.ButtonGroup simulateButtonGroup;
    private javax.swing.JPanel simulateJPanel;
    private javax.swing.JLabel specialJLabel1;
    private javax.swing.JLabel specialJLabel2;
    private javax.swing.JLabel ticketJLabel1;
    private javax.swing.JLabel ticketJLabel2;
    private javax.swing.JPanel ticketJPanel1;
    private javax.swing.JPanel ticketJPanel2;
    private javax.swing.JLabel timeJLabel;
    private javax.swing.JLabel titleJLabel;
    private javax.swing.JPanel titleJPanel;
    private javax.swing.JPanel upJPanel;
    private javax.swing.JLabel veh1JLabel2;
    private javax.swing.JLabel veh1JLabel4;
    private javax.swing.JLabel veh1JLabel6;
    private javax.swing.JLabel veh1JLabel8;
    private javax.swing.JPanel veh1JPanel;
    private javax.swing.JLabel veh2JLabel2;
    private javax.swing.JLabel veh2JLabel4;
    private javax.swing.JLabel veh2JLabel6;
    private javax.swing.JLabel veh2JLabel8;
    private javax.swing.JPanel veh2JPanel;
    private javax.swing.JLabel veh3JLabel2;
    private javax.swing.JLabel veh3JLabel4;
    private javax.swing.JLabel veh3JLabel6;
    private javax.swing.JLabel veh3JLabel8;
    private javax.swing.JPanel veh3JPanel;
    private javax.swing.JPanel vehAndWeightJPanel;
    private javax.swing.JLabel vehClassJlabel1;
    private javax.swing.JLabel vehClassJlabel2;
    private javax.swing.JPanel vehClassjPanel;
    private javax.swing.JLabel vehCntJLabel;
    private javax.swing.JPanel vehJPanel;
    private javax.swing.ButtonGroup vehQueButtonGroup;
    private javax.swing.JPanel vehQueJPanel;
    private javax.swing.JPanel vehShaftJPanel;
    private javax.swing.JPanel violateVehJPanel;
    private javax.swing.JLabel weighJLabel;
    private javax.swing.JLabel weightInfoJlabel1;
    private javax.swing.JLabel weightInfoJlabel2;
    private javax.swing.JLabel weightInfoJlabel3;
    private javax.swing.JLabel weightInfoJlabel4;
    private javax.swing.JLabel weightInfoJlabel5;
    private javax.swing.JLabel weightInfoJlabel6;
    private javax.swing.JLabel weightInfoJlabel7;
    private javax.swing.JLabel weightInfoJlabel8;
    private javax.swing.JPanel weightJPanel;
    private javax.swing.JLabel weightVehCntJLabel;
    private javax.swing.JRadioButton y1;
    private javax.swing.JRadioButton y2;
    private javax.swing.JRadioButton y3;
    private javax.swing.JRadioButton y4;
    private javax.swing.JRadioButton y5;
    private javax.swing.JRadioButton y6;
    private javax.swing.JRadioButton y7;
    private javax.swing.JRadioButton y8;
    // End of variables declaration//GEN-END:variables
 /**
     * 初始化
     *
     * @param lane 车道信息
     */
    public void init(Lane lane) {
        this.setBounds(0, 0, 1024, 768);
        cleanCursor();
        initVehAxle();
//        setTime();
        initStart(lane);
        hideFirstVehPanel();
        hideSecondVehPanel();
        hideThirdVehPanel();
        hideCentralPanel();
        updateSpecialInfo(null, null);
    }

    private boolean fontUpdateFlag = false;

    /**
     * 字体初始化
     *
     * @param con
     */
    public void initFontNew(Container con) {
        fontUpdateFlag = true;
        reloadContainerFont(con);
        fontUpdateFlag = false;
    }

    /**
     * 是否正在更新字体
     *
     * @return true/false
     */
    public boolean isUpdatingFont() {
        return fontUpdateFlag;
    }

    /**
     * 重新加载标签中的字体
     *
     * @param label 需要重新加载字体的标签
     */
    private void reloadFont(Component c) {
        int size = c.getFont().getSize();
        int style = c.getFont().getStyle();
        c.setFont(FontControl.getMyFont(size, style));
    }

    /**
     * 重新加载字体
     *
     * @param con 需要重新加载的容器
     */
    private void reloadContainerFont(Container con) {
        Component[] buffer = con.getComponents();
        for (Component c : buffer) {
            if (c instanceof JLabel || c instanceof JRadioButton) {
                reloadFont(c);
            } else if (c instanceof Container) {
                reloadContainerFont((Container) c);
            }
        }
    }

    /**
     * 字体颜色初始化
     */
    private void initForeground() {
        cardInfoJlabel1.setForeground(Color.black);
        cardInfoJlabel2.setForeground(Color.black);
        cardInfoJlabel3.setForeground(Color.black);
        cardInfoJlabel4.setForeground(Color.black);
        cardInfoJlabel5.setForeground(Color.black);
        cardInfoJlabel6.setForeground(Color.black);
        cardInfoJlabel7.setForeground(Color.black);
        cardInfoJlabel8.setForeground(Color.black);
        weightInfoJlabel1.setForeground(Color.black);
        weightInfoJlabel2.setForeground(Color.black);
        weightInfoJlabel3.setForeground(Color.black);
        weightInfoJlabel4.setForeground(Color.black);
        weightInfoJlabel5.setForeground(Color.black);
        weightInfoJlabel6.setForeground(Color.black);
        weightInfoJlabel7.setForeground(Color.black);
        weightInfoJlabel8.setForeground(Color.black);
//        mainMessage.setForeground(Color.black);
//        msgJTextArea1.setForeground(Color.black);
        fareJLabel2.setForeground(Color.black);
        entryJLabel3.setForeground(Color.black);
        entryJLabel2.setForeground(Color.black);
        inputFareJlabel1.setForeground(Color.black);
        inputFareJlabel2.setForeground(Color.black);
        inputFareJlabel3.setForeground(Color.black);
        inputFareJlabel4.setForeground(Color.black);
        inputFareJlabel5.setForeground(Color.black);
        inputFareJlabel6.setForeground(Color.black);
        y1.setForeground(Color.black);
        y2.setForeground(Color.black);
        y3.setForeground(Color.black);
        y4.setForeground(Color.black);
        y5.setForeground(Color.black);
        y6.setForeground(Color.black);
        y7.setForeground(Color.black);
        y8.setForeground(Color.black);
        entryInfoJlabel1.setForeground(Color.black);
        entryInfoJlabel2.setForeground(Color.black);
        entryInfoJlabel3.setForeground(Color.black);
        entryInfoJlabel4.setForeground(Color.black);
        entryInfoJlabel5.setForeground(Color.black);
        entryInfoJlabel6.setForeground(Color.black);
        entryInfoJlabel7.setForeground(Color.black);
        veh1JLabel2.setForeground(Color.black);
        veh1JLabel4.setForeground(Color.black);
        veh1JLabel6.setForeground(Color.black);
        veh1JLabel8.setForeground(Color.black);

        veh2JLabel1.setForeground(Color.black);
        veh2JLabel2.setForeground(Color.black);
        veh2JLabel3.setForeground(Color.black);
        veh2JLabel4.setForeground(Color.black);
        veh2JLabel5.setForeground(Color.black);
        veh2JLabel6.setForeground(Color.black);
        veh2JLabel7.setForeground(Color.black);
        veh2JLabel8.setForeground(Color.black);

        veh3JLabel1.setForeground(Color.black);
        veh3JLabel2.setForeground(Color.black);
        veh3JLabel3.setForeground(Color.black);
        veh3JLabel4.setForeground(Color.black);
        veh3JLabel5.setForeground(Color.black);
        veh3JLabel6.setForeground(Color.black);
        veh3JLabel7.setForeground(Color.black);
        veh3JLabel8.setForeground(Color.black);

        vehClassJlabel1.setForeground(Color.black);
        plateNumJLabel1.setForeground(Color.black);
        entryJLabel1.setForeground(Color.black);
        fareJLabel1.setForeground(Color.black);

        mopJLabel1.setForeground(Color.black);
        mopJLabel3.setForeground(Color.black);
        railJLabel1.setForeground(Color.black);
        weighJLabel.setForeground(Color.black);
        modeJLabel1.setForeground(Color.black);
        modeJLabel2.setForeground(Color.black);

        cartjLabel1.setForeground(Color.black);
        cartjLabel2.setForeground(Color.black);
        cartjLabel3.setForeground(Color.black);
        cartjLabel4.setForeground(Color.black);
        cartjLabel5.setForeground(Color.black);
        dateJLabel.setForeground(Color.black);
        timeJLabel.setForeground(Color.black);
        vehCntJLabel.setForeground(Color.black);

        vehQueButton1.setForeground(Color.black);
        vehQueButton2.setForeground(Color.black);
        vehQueButton3.setForeground(Color.black);
        vehQueButton4.setForeground(Color.black);
        vehQueButton5.setForeground(Color.black);
        vehQueButton6.setForeground(Color.black);
        //卡机界面
        cartButton1.setForeground(Color.black);
        cartButton2.setForeground(Color.black);
        cartButton3.setForeground(Color.black);
        cartButton4.setForeground(Color.black);
        cartButton5.setForeground(Color.black);
        cartButton6.setForeground(Color.black);
        cartButton7.setForeground(Color.black);
        cartButton8.setForeground(Color.black);
        cartButton9.setForeground(Color.black);
        cartButton10.setForeground(Color.black);
        //模拟界面
        simuButton1.setForeground(Color.black);
        simuButton2.setForeground(Color.black);
        simuButton3.setForeground(Color.black);
        simuButton4.setForeground(Color.black);
        simuButton5.setForeground(Color.black);
        //代收
//        collectButton1.setForeground(Color.black);
//        collectButton2.setForeground(Color.black);
//        collectButton3.setForeground(Color.black);
//        collectButton4.setForeground(Color.black);
        //轴组列表界面
        shaftButton1.setForeground(Color.black);
        shaftButton2.setForeground(Color.black);
        shaftButton3.setForeground(Color.black);
        shaftButton4.setForeground(Color.black);
        shaftButton5.setForeground(Color.black);
        shaftButton6.setForeground(Color.black);
        shaftButton7.setForeground(Color.black);
        shaftButton8.setForeground(Color.black);
        shaftButton9.setForeground(Color.black);
        //报警界面
        alarmButton1.setForeground(Color.black);
        alarmButton2.setForeground(Color.black);
        alarmButton3.setForeground(Color.black);
        alarmButton4.setForeground(Color.black);
        alarmButton5.setForeground(Color.black);
        alarmButton6.setForeground(Color.black);
        //轴组列表界面
        agButton1.setForeground(Color.black);
        agButton2.setForeground(Color.black);
        agButton3.setForeground(Color.black);
        agButton4.setForeground(Color.black);
        agButton5.setForeground(Color.black);
        agButton6.setForeground(Color.black);
        agButton7.setForeground(Color.black);
        agButton8.setForeground(Color.black);
        agButton9.setForeground(Color.black);

        rtpJLabel1.setForeground(Color.black);
        rtpJLabel2.setForeground(Color.black);
        rtpJLabel3.setForeground(Color.black);
        rtpJLabel4.setForeground(Color.black);
        rtpJLabel5.setForeground(Color.black);
        rtpJLabel6.setForeground(Color.black);
        rtpJLabel7.setForeground(Color.black);
        rtpJLabel8.setForeground(Color.black);
        rtpJLabel9.setForeground(Color.black);
        rtpJLabel10.setForeground(Color.black);

    }
//    SAA7134 saa;
    /**
     * 视屏对象
     */
    private static Video video;

    /**
     * 视频初始化
     */
    public final void initVideo() {
        LogControl.logInfo("加载视频");
//    	 HardwareHelper helper = new HardwareHelper();

        //插入视频代码
        MTCLog.log("开始加载视频...");
        List<Panel> panelList = new ArrayList<Panel>();
        panelList.add(panel2);
        panelList.add(panel3);
        panelList.add(panel4);
        panelList.add(panel5);
        try {
//        	Video video = helper.initHardware(Video.class, helper,new Class[]{List.class,Panel.class}, new Object[]{panelList,panel1});
            //判断配置文件中是选的那种视频采集卡，默认是VC4000
            logger.debug("视频配置为：" + LaneConfigUtils.getProperty(Video.class.getSimpleName()));
            if (LaneConfigUtils.getProperty(Video.class.getSimpleName()).equals(GEA_ID)) {
                video = new GeaVideo();
            } else {
                video = new Vc400Video(panelList, panel1);
            }
//        	ExtJFrame.video = video;
//			 saa = new SAA7134(panelList, panel1);
            logger.debug("启动视屏");
            video.startCap(panel2);
            logger.debug("启动视屏成功");
        } catch (Throwable ex) {
            MTCLog.log("视频异常", ex);
        }
        MTCLog.log("加载视频结束");
    }

    /**
     * 抓拍视频图像，注意与captureVideo方法区别，captureVideo方法用于上班之后（视频已经显示），grab方法用于上班之前（视频未显示）
     *
     */
    public void grab() {
        ThreadPoolControl.getThreadPoolInstance().execute(new Runnable() {
            @Override
            public void run() {
                if (video != null) {
                    video.grap();//抓拍图像
                }
//                if (saa != null) {
//                    saa.grap();//抓拍图像
//                }
            }
        });
    }

    /**
     * 显示视频
     */
    public void showVideo() {
//        initVideo();
        panel2.setVisible(true);
        startVideoMonitor();//显示视频后开启视频监控
    }

    /**
     * 隐藏视频
     */
    public void hideVideo() {
        stopVideoMonitor();//隐藏视频时停止视频监控
        panel2.setVisible(false);
    }

    /**
     * 设置时间 此处不可使用java中的定时器timer，因为timer在本机时间倒退时会出现等待的问题
     */
    private void setTime() {
        ThreadPoolControl.getThreadPoolInstance().execute(new Runnable() {
            @Override
            public void run() {
                while (true) {
                    try {
                        Thread.sleep(1000);
                        SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
                        String time = format.format(new Date());
                        String[] ary = time.split(" ");
                        String yTime = ary[0];
                        String cTime = ary[1];
                        dateJLabel.setText(yTime);
                        timeJLabel.setText(cTime);
                    } catch (InterruptedException ex) {
                        LogControl.logInfo("收费界面时间显示异常", ex);
                    }
                }
            }
        });
    }

    /**
     * 根据车道设置窗体标题
     *
     * @param lane 车道信息
     */
    public void setFrameTitle(Lane lane) {
        setFrameTitle(lane, null);
    }

    /**
     * 根据车道及收费员员工号设置窗体标题
     *
     * @param lane 车道信息
     * @param staff 员工信息
     */
    public void setFrameTitle(Lane lane, Staff staff) {
        if (lane == null) {
            return;
        }
        String title = getTitle();
        String roadid = lane.getRoadId() == null ? "" : lane.getRoadId();
        String stationid = lane.getStationId() == null ? "" : lane.getStationId();
        String stationName = lane.getStationName() == null ? "" : lane.getStationName();
        String laneId = lane.getLaneId() == null ? "" : lane.getLaneId();

        String info;
        if (staff == null) {
            info = Constant.LANE_SOFT_VERSION + " 湖南" + " 收费站" + roadid + stationid + "- " + stationName + "-车道" + laneId;
        } else {
            String staffId = staff.getStaffId() == null ? "" : staff.getStaffId();
            String staffName = staff.getStaffName() == null ? "" : staff.getStaffName();
            //设置窗体标题
            info = Constant.LANE_SOFT_VERSION + " 湖南" + " 收费站" + roadid + stationid + "- " + stationName + "-车道" + laneId + "-" + staffName + "(" + staffId + ")";
        }
        int index;
        if ((index = title.indexOf(":")) >= 0) {//:后面为版本信息，不可更改
            title = info + title.substring(index);
        } else {
            title = info;
        }
        setTitle(title);
    }

    @Override
    public void setTitle(String title) {
        titleJLabel.setText(title);
    }

    @Override
    public String getTitle() {
        return titleJLabel.getText();
    }

    /**
     * 自定义初始化界面
     *
     * @param lane 车道信息
     */
    public void initStart(Lane lane) {
        this.setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/ui/img/highway.png")));
        setFrameTitle(lane);
        //jPanel1内的设置（上）
        vehClassJlabel2.setText("?");
        lastVehJLabel1.setText("");
        entryJLabel3.setText(null);
        entryJLabel2.setText(null);
        mopJLabel3.setText(null);
        fareJLabel2.setText(null);
        fareJLabel3.setText(null);
        railJLabel2.setText(null);
        lastVehJLabel2.setText("");
        lastVehJLabel4.setText(null);
        lastVehJLabel6.setText("");
        lastVehJLabel3.setText(null);
        lastVehJLabel5.setText(null);
        mopJLabel2.setText(null);
        hideMilitary();
        //jPanel9内的设置（下左）
        updateInfo("正在启动", "启动中.......");
        //jPanel10内的设置（下中）
        hideCentralPanel();
        hideAlarmPanel();
        showFirstVehWeight(null, null);
        vehCntJLabel.setText(null);
        //设置图片
        modeJLabel2.setText("关闭");
        modeJLabel2.setBackground(Color.white);
        modeJLabel1.setText("关闭");
        modeJLabel1.setBackground(Color.white);
        //设置黑色线边框
//        jLabel49.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        //设置无边框
//        lightJLabel.setIcon(new ImageIcon(getClass().getResource("/ui/img/stop.png")));
        railJLabel2.setIcon(new ImageIcon(getClass().getResource("/ui/img/extClose.png")));
//        coilJLabel.setIcon(new ImageIcon(getClass().getResource("/ui/img/whiteCoil.png")));
//        jLabel17.setVisible(false);//隐藏找零标签
        this.setLocationRelativeTo(null);
        this.setAutoRequestFocus(true);
        if (lane != null && lane.isEntry()) {
            entryJPanel.setVisible(false);//入口收费站信息不可见
            jPanel6.setVisible(false);//收费界面及付款方式不可见
            lastVehJLabel3.setVisible(false);//上一辆车的入口收费站不可见
            lastVehJLabel4.setVisible(false);//上一辆车的收费额不可见
            lastVehJLabel5.setVisible(false);//上一辆车的付款方式不可见
            lastVehJLabel6.setVisible(false);//上一辆车的重量信息不可见
        }
    }

    /**
     * 按下上班键后界面更新
     */
    public void updateBeforeBOJ() {
        String mainMsg = "  身份识别";
        String msg = "-等待上班";
        updateInfo(mainMsg, msg);
        modeJLabel2.setText("关闭");
        modeJLabel2.setBackground(Color.white);
        modeJLabel1.setText("关闭");
        modeJLabel1.setBackground(Color.white);
        lastVehJLabel1.setText(null);
        lastVehJLabel2.setText(null);
        weightVehCntJLabel.setText(null);
        vehCntJLabel.setText(null);
    }

    /**
     * 上班后界面更新
     *
     * @param lane 车道
     * @param staff 员工
     */
    public void updateAfterBOJ(Lane lane, Staff staff) {
        //根据传入的参数lane和staff更新窗口标题栏，窗体标题增加职员姓名职员编号
        setFrameTitle(lane, staff);
        //信息窗口显示"等待雨棚信号灯变绿"
        String mainMsg = "";
        String msg = "-等待雨棚信号灯变绿";
        updateInfo(mainMsg, msg);
        //主界面中间部分出现"营运" "人工"两个选项卡
        modeJLabel2.setText("营运");
        modeJLabel1.setText("人工");
//        lightJLabel.setIcon(new ImageIcon(getClass().getResource("/ui/img/stop.png")));
        lightJLabel.setLightRed();
        vehClassJlabel2.setText("?");
    }

    /**
     * 初始化本次交易信息
     */
    public void initTransaction() {
        //左上角车型显示为"?",蓝色字体
        vehClassJlabel2.setText("?");//设置车型
        setVehClassBLU();
        //收费员键入车牌栏重新初始化
//        plateNumJLabel2.setText(null);
//        plateNumJLabel2.setBackground(Color.gray);
//        plateNumJLabel2.setForeground(Color.black);
        plateNumJLabel3.setText(null);
        plateNumJLabel3.setBackground(Color.gray);
        plateNumJLabel3.setForeground(Color.black);
        entryJLabel3.setText(null);//入口信息显示为空
        entryJLabel2.setText(null);//入口信息显示为空
        entryInfoJlabel1.setText(null);
        entryInfoJlabel2.setText(null);
        entryInfoJlabel3.setText(null);
        entryInfoJlabel4.setText(null);
        entryInfoJlabel5.setText(null);
        entryInfoJlabel6.setText(null);
        entryInfoJlabel7.setText(null);
        //实收金额及找零信息设置为空
        fareJLabel2.setText(null);
        fareJLabel3.setText(null);
        //付款方式显示为空
        mopJLabel3.setText(null);
        mopJLabel2.setText(null);//付款信息（票据号，ETC卡卡号）显示为空
    }

    /**
     * 初始化抓拍车牌号码及抓拍车牌颜色的显示
     */
    public void initLprPlate() {
        plateNumJLabel2.setText(null);
        plateNumJLabel2.setBackground(Color.gray);
        plateNumJLabel2.setForeground(Color.black);

    }

    /**
     * 设置雨棚灯为红色
     */
    public void setCanopyLightRed() {
//        lightJLabel.setIcon(new ImageIcon(getClass().getResource("/ui/img/stop.png")));
        lightJLabel.setLightRed();
    }

    /**
     * 设置雨棚灯位绿色
     */
    public void setCanopyLightGreen() {
//        lightJLabel.setIcon(new ImageIcon(getClass().getResource("/ui/img/go.png")));
        lightJLabel.setLightGreen();
    }

    /**
     * 根据给定参数更新车型
     *
     * @param vehicleClass 车型
     */
    public void updateVehClass(String vehicleClass) {
        //左上角窗口及输入车型面板中显示传入的参数vehClass
        vehClassJlabel2.setText(vehicleClass);
        vehClassJlabel2.setForeground(Color.blue);
    }

    /**
     * 根据所传参数更新主信息窗口以及信息窗口
     *
     * @param mainMsg 主信息
     * @param msg 信息
     */
    public synchronized void updateInfo(String mainMsg, String msg) {
        if (superMsgFlag) {
            return;
        }
        lastMainMsg = mainMsgJLabel.getText();
        lastMsg = msgJLabel.getText();
        if (mainMsg != null) {
            mainMsg = mainMsg.trim();
        }
        if (msg != null) {
            String regex = "\n\r|\r\n|\n|\r";
            msg = msg.replaceAll(regex, "<br>&nbsp;").trim();
        } else {
            msg = "";
        }
        mainMsgJLabel.setText(" " + mainMsg);//根据传入的参数mainMsg更新主信息窗口
        StringBuilder sb = new StringBuilder();
        if (msg.startsWith("<html>")) {
            sb.append(msg);
        } else {
            sb.append("<html><body>").append("&nbsp;").append(msg).append("</body></html>");
        }
        msgJLabel.setText(sb.toString());//根据传入的参数msg更新信息窗口
    }
    String lastMainMsg;//上一条主信息
    String lastMsg;//上一条信息

    /**
     * 获取当前提示信息(html格式)
     *
     * @return 当前提示信息
     */
    public String getHtmlMsg() {
        return msgJLabel.getText();
    }

    /**
     * 更新html信息
     *
     * @param mainMsg
     * @param msg html信息
     */
    public void updateHtmlInfo(String mainMsg, String msg) {
        if (msg == null || msg.trim().isEmpty()) {
            return;
        }
        mainMsgJLabel.setText(mainMsg);
        msgJLabel.setText(msg);
    }

    /**
     * 显示上一条信息
     */
    public void showLastMessage() {
        updateInfo(lastMainMsg, lastMsg);
    }
    boolean superMsgFlag; ///超级信息标志,当该标志位true时，仅updateSuperMsg方法可以更改提示信息

    /**
     * 更新超级信息，不可修改，直至超级信息取消cancelSuperMsg方法被调用
     *
     * @param mainMsg
     * @param msg
     */
    public void updateSuperMsg(String mainMsg, String msg) {
        superMsgFlag = true;
        lastMainMsg = mainMsgJLabel.getText();
        lastMsg = msgJLabel.getText();
        if (mainMsg != null) {
            mainMsg = mainMsg.trim();
        }
        mainMsgJLabel.setText(" " + mainMsg);//根据传入的参数mainMsg更新主信息窗口
        String regex = "\n\r|\r\n|\n|\r";
//        msg = msg.replaceAll(regex, "\n\r ");
        msg = msg.replaceAll(regex, "<br>&nbsp;");
        StringBuilder sb = new StringBuilder();
        if (msg.startsWith("<html>")) {
            sb.append(msg);
        } else {
            sb.append("<html><body>").append("&nbsp;").append(msg).append("</body></html>");
        }

        msgJLabel.setText(sb.toString());//根据传入的参数msg更新信息窗口
    }

    /**
     * 取消超级信息
     */
    public void cancelSuperMsg() {
        superMsgFlag = false;
    }

    /**
     * 读卡后界面显示收费额以及付款提示
     *
     * @param fee 收费额
     */
    public void updateAfterReadingCard(double fee) {
        hideCentralPanel();
        //付款面板初始化并可见,应收费用为传入的参数fare
        inputFareJPanel.setVisible(true);
        inputFare1.setVisible(true);
        mopJLabel3.setForeground(Color.blue);//设置字体颜色
        String fareInfo;
        if (fee % 1 > 0) {//对1取余数大于0，表示其小数部分非0
            fareInfo = String.valueOf(fee);
        } else {//小数部分为0
            int temp = (int) fee;
            fareInfo = String.valueOf(temp);
        }
        inputFareJlabel2.setText(fareInfo);
        inputFareJlabel4.setText(null);
        inputFareJlabel6.setText("0");
        //信息窗口显示"现金付款：\n-如果收的金额正好等于车费，直接按确认键；\n-否则输入实收金额，再按确认键。\n\n其他付款方式\n-选择使用"
        String mainMsg = "付款方式？";
        String msg = "现金付款\n-实收金额若等于车费，直接按确认键；\n-否则输入实收金额，再按确认键。\n\n其他付款方式\n-选择使用";
        if (FunctionControl.isFareInputFunActive()) {
            msg = "现金付款\n-请输入实收金额，再按【确认】键\n其他付款方式\n-选择使用";
        }
        updateInfo(mainMsg, msg);
    }

    /**
     * 根据传入的参数更新中间面板实收金额以及找零金额
     *
     * @param total 实收金额
     * @param change 找零金额
     */
    public void updateChange(String total, String change) {
        if (total.endsWith(".0")) {
            total = total.substring(0, total.indexOf(".0"));
        }
        if (change.endsWith(".0")) {
            change = change.substring(0, change.indexOf(".0"));
        }
        inputFareJlabel4.setText(total);//根据传入的参数total更新付款面板中的实收金额
        inputFareJlabel6.setText(change);//根据传入的参数change更新付款面板中的找零金额
    }

    /**
     * 更新上方面板找零信息
     *
     * @param change 找零信息
     */
    public void updateFareInfo(String change) {
        //付款面板不可见
        hideCentralPanel();
        mopJLabel3.setForeground(Color.black);//设置字体颜色
        //主界面上方"通行费"信息下的实找零额根据传入的参数change更新
        if (change == null || change.equals("0") || change.equals("0.0")) {
//            attachLabel.setText(null);
        } else {
            if (change.endsWith(".0")) {
                int index = change.indexOf(".");
                change = change.substring(0, index);
            }
            updateAttachInfo("找零：" + change + "元");
        }
    }

    /**
     * 等待车辆离开
     */
    public void updateWaitForVehLeave() {
        // 信息窗口提示"等待车辆离开"
        String mainMsg = "等待车辆离开";
        String msg = "等待车辆离开";
        updateInfo(mainMsg, msg);
        //T主界面右上角自动栏杆打开,通行灯变绿
        updatePassCoilWhite2();
        hideCentralPanel();
    }
    private final ImageIcon PassCoilBlack1ImageIcon = new ImageIcon(getClass().getResource("/ui/img/extClose1.png"));
    private final ImageIcon PassCoilBlack2ImageIcon = new ImageIcon(getClass().getResource("/ui/img/extOpenGreen.png"));
    private final ImageIcon CoilWhite1ImageIcon = new ImageIcon(getClass().getResource("/ui/img/extClose.png"));
    private final ImageIcon CoilWhite2ImageIcon = new ImageIcon(getClass().getResource("/ui/img/extOpenGreen1.png"));

    /**
     * 自动栏杆放下，通道线圈变黑，通行灯红色
     */
    public void updatePassCoilBlack1() {
//        railJLabel2.setIcon(new ImageIcon(getClass().getResource("/ui/img/extClose1.png")));
        railJLabel2.setIcon(PassCoilBlack1ImageIcon);
    }

    /**
     * 自动栏杆抬起，通道线圈变黑，通行灯绿色
     */
    public void updatePassCoilBlack2() {
//        railJLabel2.setIcon(new ImageIcon(getClass().getResource("/ui/img/extOpenGreen.png")));
        railJLabel2.setIcon(PassCoilBlack2ImageIcon);

    }

    /**
     * 自动栏杆放下，通道线圈变白，通行灯红色
     */
    public void updatePassCoilWhite1() {
//        railJLabel2.setIcon(new ImageIcon(getClass().getResource("/ui/img/extClose.png")));
        railJLabel2.setIcon(CoilWhite1ImageIcon);

    }

    /**
     * 自动栏杆抬起，通道线圈变白，通行灯绿色
     */
    public void updatePassCoilWhite2() {
//        railJLabel2.setIcon(new ImageIcon(getClass().getResource("/ui/img/extOpenGreen1.png")));
        railJLabel2.setIcon(CoilWhite2ImageIcon);

    }

    /**
     * 将当前title中：之后的内容替换为制定内容，若无：，追加：
     *
     * @param str 添加内容
     */
    public static void appendTitle(String str) {
        if (extJFrame == null || str == null) {
            return;
        }
        String title = extJFrame.getTitle();
        int index;
        if ((index = title.indexOf(":")) >= 0) {
            title = title.substring(0, index);
        }
        if (str == null || str.trim().isEmpty()) {//判断添加的字符是否为空，如果为空，默认不加冒号
            extJFrame.setTitle(title);
        } else {
            extJFrame.setTitle(title + ":" + str.trim());
        }
    }

    /**
     * 显示车牌颜色选择界面
     *
     * @author 王国栋 2014-8-23
     */
    public void showPlateColOption() {
        hideCentralPanel();
        plateColorJPanel.setVisible(true);
    }

    /**
     * 显示全车牌输入界面
     *
     * @author 王国栋 2014-8-23
     */
    public void showFullPlateOption() {
        hideCentralPanel();
        plateJPanel.setVisible(true);
    }

    /**
     * 显示全车牌输入界面
     *
     * @author 王国栋 2014-8-23
     */
    public void showFullPlateOption1() {
        hideCentralPanel();
        plate1JPanel.setVisible(true);
    }

    /**
     * 显示全车牌输入界面
     *
     * @author 王国栋 2014-8-23
     */
    public void showFullPlateOption2() {
        hideCentralPanel();
        plate2JPanel.setVisible(true);
    }

    /**
     * 显示全车牌输入界面
     *
     * @author 王国栋 2014-8-23
     */
    public void showFullPlateOption3() {
        hideCentralPanel();
        plate3JPanel.setVisible(true);
    }

    /**
     * 根据给定的数字加亮数字对应的全车牌标签
     *
     * @author 王国栋 2014-8-23
     * @param num 给定数字
     */
    public void updateFullPlateOption(String num) {
        if (num == null) {
            return;
        }
        reInitFullPlateOption();
        int temp = IntegerUtils.parseString(num);
        for (int i = 0; i < 10; i++) {
            JPanel panel = (JPanel) plateJPanel.getComponent(temp * 10 + i);
            panel.setBackground(Color.yellow);
        }

    }

    /**
     * 全车牌输入界面初始化
     */
    private void initCentralPanel() {
//        ThreadPoolControl.getThreadPoolInstance().execute(new Runnable() {
//            @Override
//            public void run() {

        LogControl.logInfo("```````````````startinitPlatePanel``````````````````````````````");
        initPlatePanel();
        LogControl.logInfo("```````````````````endinitPlatePanel````````````````````````````");
        LogControl.logInfo("````````````````````````startinitVehQuePanel````````````````````````````````````````");
        initVehQuePanel();
        LogControl.logInfo("````````````````````````endinitVehQuePanel````````````````````````````````````````");
        LogControl.logInfo("````````````````````````startinitCartPanel````````````````````````````````````````");
        initCartPanel();
        LogControl.logInfo("````````````````````````endinitCartPanel````````````````````````````````````````");
        LogControl.logInfo("````````````````````````startinitSimuPanel````````````````````````````````````````");
        initSimuPanel();
        LogControl.logInfo("````````````````````````endinitSimuPanel````````````````````````````````````````");
        LogControl.logInfo("````````````````````````startinitCollectPanel````````````````````````````````````````");
//        initCollectPanel();
        LogControl.logInfo("````````````````````````endinitCollectPanel````````````````````````````````````````");
        LogControl.logInfo("````````````````````````startinitShaftPanel````````````````````````````````````````");
        initShaftPanel();
        LogControl.logInfo("````````````````````````endinitShaftPanel````````````````````````````````````````");
        LogControl.logInfo("````````````````````````startinitAlarmPanel````````````````````````````````````````");
        initAlarmPanel();
        LogControl.logInfo("````````````````````````endinitAlarmPanel````````````````````````````````````````");
        LogControl.logInfo("````````````````````````startinitAxleTypePanel````````````````````````````````````````");
        initAxleTypePanel();
        LogControl.logInfo("````````````````````````endinitAxleTypePanel````````````````````````````````````````");
        initRtpPanel();
//            }
//        });
    }

    /**
     * 全车牌输入界面初始化
     */
    private void initPlatePanel() {
        plateJPanel.setLayout(new GridLayout(10, 10));
        for (int i = 0; i < 100; i++) {
            String plate1 = MyPropertiesUtils.getProperties(Constant.PROP_MTCLANE, "plate" + i / 10, "0,0,0,0,0,0,0,0,0,0");
            String[] plateBuffer = plate1.split(",");
            JPanel panel = new JPanel();
            panel.setBorder(new LineBorder(Color.black));
            panel.setLayout(new GridBagLayout());
            panel.setBackground(Color.white);
            JLabel label1 = new JLabel(plateBuffer[i % 10]);
            label1.setFont(new Font("宋体", Font.BOLD, 24));
            GridBagConstraints gridBagConstraints = new GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.gridheight = 2;
            panel.add(label1, gridBagConstraints);
            JLabel label2 = new JLabel(String.valueOf(i / 10));
            label2.setForeground(Color.red);
            gridBagConstraints = new GridBagConstraints();
            panel.add(label2, gridBagConstraints);
            JLabel label3 = new JLabel(String.valueOf(i % 10));
            label3.setForeground(Color.red);
            gridBagConstraints = new GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = 1;
            gridBagConstraints.gridheight = 2;
            panel.add(label3, gridBagConstraints);
            plateJPanel.add(panel);
        }
    }

    /**
     * 全车牌选择部分重新初始化
     *
     * @author 王国栋 2014-8-23
     */
    public void reInitFullPlateOption() {
        for (int i = 0; i < 100; i++) {
            JPanel panel = (JPanel) plateJPanel.getComponent(i);
            panel.setBackground(Color.white);
        }
    }

    /**
     * 根据给出的车牌号码更新窗口视频识别车牌一栏
     *
     * @author 王国栋 2014-8-23
     * @param plateNum 车牌号码
     */
    public void updateLprPlate(String plateNum) {
        plateNumJLabel2.setText(plateNum);
    }

    /**
     * 根据给出的车牌颜色更新窗口视频识别车牌一栏底色
     *
     * @author 王国栋 2014-8-25
     * @param col 车牌颜色
     */
    public void updateLprPlateCol(String col) {
        if (col == null) {
            col = "";
        }
        switch (col) {
            case "U":
                plateNumJLabel2.setBackground(Color.blue);
                plateNumJLabel2.setForeground(Color.white);
                break;
            case "Y":
                plateNumJLabel2.setBackground(Color.yellow);
                plateNumJLabel2.setForeground(Color.black);
                break;
            case "W":
                plateNumJLabel2.setBackground(Color.white);
                plateNumJLabel2.setForeground(Color.black);
                break;
            case "G":
                plateNumJLabel2.setBackground(Color.green);
                plateNumJLabel2.setForeground(Color.black);
                break;
            case "R":
                plateNumJLabel2.setBackground(Color.red);
                plateNumJLabel2.setForeground(Color.black);
                break;
            case "B":
                plateNumJLabel2.setBackground(Color.black);
                plateNumJLabel2.setForeground(Color.white);
                break;
            case "A":
                plateNumJLabel2.setBackground(Color.gray);
                plateNumJLabel2.setForeground(Color.black);
                break;
            case "":
                plateNumJLabel2.setBackground(Color.gray);
                plateNumJLabel2.setForeground(Color.black);
                break;
        }

    }

    /**
     * 根据给出的车牌更新键入车牌栏
     *
     * @author 王国栋 2014-8-23
     * @param plateNum 车牌号码
     */
    public void updateKeyedPlate(String plateNum) {
        plateNumJLabel3.setText(plateNum);
    }

    /**
     * 初始化车牌识别号码及收费员键入车牌号码栏显示
     *
     * @author 王国栋 2014-8-28
     */
    public void initPlateNum() {
        plateNumJLabel2.setBackground(Color.gray);
        plateNumJLabel2.setForeground(Color.black);
        plateNumJLabel3.setBackground(Color.gray);
        plateNumJLabel3.setForeground(Color.black);
    }

    /**
     * 根据给出的车牌颜色更新键入车牌栏底色以及车牌字体颜色
     *
     * @author 王国栋 2014-8-23
     * @param col 车牌颜色
     */
    public void updateKeyedPlateCol(String col) {
        if (col == null) {
            col = "";
        }
        switch (col) {
            case "U":
                plateNumJLabel3.setBackground(Color.blue);
                plateNumJLabel3.setForeground(Color.white);
                break;
            case "Y":
                plateNumJLabel3.setBackground(Color.yellow);
                plateNumJLabel3.setForeground(Color.black);
                break;
            case "W":
                plateNumJLabel3.setBackground(Color.white);
                plateNumJLabel3.setForeground(Color.black);
                break;
            case "G":
                plateNumJLabel3.setBackground(Color.green);
                plateNumJLabel3.setForeground(Color.black);
                break;
            case "R":
                plateNumJLabel3.setBackground(Color.red);
                plateNumJLabel3.setForeground(Color.black);
                break;
            case "B":
                plateNumJLabel3.setBackground(Color.black);
                plateNumJLabel3.setForeground(Color.white);
                break;
            case "A":
                plateNumJLabel3.setBackground(Color.gray);
                plateNumJLabel3.setForeground(Color.black);
                break;
            case "":
                plateNumJLabel3.setBackground(Color.gray);
                plateNumJLabel3.setForeground(Color.black);
                break;
            default:
                break;
        }

    }

    /**
     * 清除收费员键入车牌上方游标显示
     *
     * @author 王国栋 2014-8-25
     */
    public void cleanCursor() {
        if (point1.isVisible()) {
            point1.setVisible(false);
        }
        if (point2.isVisible()) {
            point2.setVisible(false);
        }
        if (point3.isVisible()) {
            point3.setVisible(false);
        }
        if (point4.isVisible()) {
            point4.setVisible(false);
        }
        if (point5.isVisible()) {
            point5.setVisible(false);
        }
        if (point6.isVisible()) {
            point6.setVisible(false);
        }
        if (point7.isVisible()) {
            point7.setVisible(false);
        }
        if (point8.isVisible()) {
            point8.setVisible(false);
        }
        if (point9.isVisible()) {
            point9.setVisible(false);
        }
        if (point10.isVisible()) {
            point10.setVisible(false);
        }
    }

    /**
     * 根据所给字符串更新游标位置
     *
     * @author 王国栋 2014-8-25
     * @param str 给定字符串
     * @throws java.io.UnsupportedEncodingException
     */
    public void updateCursor(String str) throws UnsupportedEncodingException {
        int num = str.getBytes("gbk").length;
//        if(num>0){
//            num = num-1;
//        }
        cleanCursor();
        switch (num) {
//            case 0:
//                break;
            case 0:
                if (!point1.isVisible()) {
                    point1.setVisible(true);
                }
                break;
            case 1:
                if (!point2.isVisible()) {
                    point2.setVisible(true);
                }
                break;
            case 2:
                if (!point3.isVisible()) {
                    point3.setVisible(true);
                }
                break;
            case 3:
                if (!point4.isVisible()) {
                    point4.setVisible(true);
                }
                break;
            case 4:
                if (!point5.isVisible()) {
                    point5.setVisible(true);
                }
                break;
            case 5:
                if (!point6.isVisible()) {
                    point6.setVisible(true);
                }
                break;
            case 6:
                if (!point7.isVisible()) {
                    point7.setVisible(true);
                }
                break;
            case 7:
                if (!point8.isVisible()) {
                    point8.setVisible(true);
                }
                break;
            case 8:
                if (!point9.isVisible()) {
                    point9.setVisible(true);
                }
                break;
            case 9:
                if (!point10.isVisible()) {
                    point10.setVisible(true);
                }
                break;
        }

    }

    /**
     * 显示卡机菜单
     *
     * @param flag1 0无选项 1 无卡，不可读卡，残卡，预编码卡 2 拿开坏卡
     * @param flag2 1 装入卡箱 2 更换卡箱，交接卡箱 3 强行取出卡箱，交接卡箱
     * @param flag3 0 不可查看营运参数 1 可查看营运参数
     */
    public void showCartPanel(int flag1, int flag2, int flag3) {
        hideCentralPanel();
        initCartPanelButton(flag1, flag2, flag3);
        cardRoomJPanel.setVisible(true);
    }

    /**
     * 卡机菜单按钮初始化
     *
     * @param flag1 0 无选项 1 无卡，不可读卡，残卡，预编码卡 2 拿开坏卡
     * @param flag2 1 装入卡箱 2 更换卡箱，交接卡箱 3 强行取出卡箱，交接卡箱
     * @param flag3 0 不可查看营运参数 1 可查看营运参数
     */
    private void initCartPanelButton(int flag1, int flag2, int flag3) {
        cartButtonGroup.clearSelection();
        cartButton1.setEnabled(false);
        cartButton2.setEnabled(false);
        cartButton3.setEnabled(false);
        cartButton4.setEnabled(false);
        cartButton5.setEnabled(false);
        cartButton6.setEnabled(false);
        cartButton7.setEnabled(false);
        cartButton8.setEnabled(false);
        cartButton9.setEnabled(false);
        cartButton10.setEnabled(false);
        switch (flag2) {
            case 1:
                cartButton3.setEnabled(true);//装入卡箱
                cartButton4.setEnabled(true);//交接卡箱
                updateCartPanel("3");
                break;
            case 2:
                cartButton1.setEnabled(true);//更换卡箱
                cartButton2.setEnabled(true);//强行取出卡箱
                cartButton4.setEnabled(true);//交接卡箱
                updateCartPanel("1");
                break;
            case 3:
                cartButton2.setEnabled(true);//强行取出卡箱
                cartButton4.setEnabled(true);//交接卡箱
                updateCartPanel("2");
                break;
            default:
                break;
        }
        switch (flag1) {
            case 0:
                break;
            case 1:
                cartButton5.setEnabled(true);//无卡
                cartButton6.setEnabled(true);//不可读卡
                cartButton7.setEnabled(true);//残卡
                updateCartPanel("6");//默认不可读卡
                break;
            case 2:
                cartButton8.setEnabled(true);//拿开坏卡
                updateCartPanel("8");
                break;
            default:
                break;
        }
        switch (flag3) {
            case 0:
                cartButton10.setEnabled(false);
                break;
            case 1:
                cartButton10.setEnabled(true);
                break;
            default:
                break;
        }

    }

    /**
     * 根据所给数字更新卡机菜单按钮的选择
     *
     * @author 王国栋 2014-8-27创建
     * @param num
     */
    public void updateCartPanel(String num) {
        if (num == null) {
            return;
        }
        switch (num) {
            case "1":
                cartButton1.doClick();
                break;
            case "2":
                cartButton2.doClick();
                break;
            case "3":
                cartButton3.doClick();
                break;
            case "4":
                cartButton4.doClick();
                break;
            case "5":
                cartButton5.doClick();
                break;
            case "6":
                cartButton6.doClick();
                break;
            case "7":
                cartButton7.doClick();
                break;
            case "8":
                cartButton8.doClick();
                break;
            case "9":
                cartButton9.doClick();
                break;
            case "0":
                cartButton10.doClick();
                break;
            default:
                break;
        }
    }

    /**
     * 将卡机菜单中的所有选项设为未选定
     *
     * @author 王国栋 2014-8-27创建
     */
    public void cleanCartPanelOption() {
        cartButton1.setSelected(false);
        cartButton2.setSelected(false);
        cartButton3.setSelected(false);
        cartButton4.setSelected(false);
        cartButton5.setSelected(false);
        cartButton6.setSelected(false);
        cartButton7.setSelected(false);
        cartButton8.setSelected(false);
        cartButton9.setSelected(false);
        cartButton10.setSelected(false);
    }

    /**
     * 获取卡机菜单按钮的选择结果
     *
     * @return 1-9对应卡机菜单九个按钮
     */
    public char getCartPanelOption() {
        return (char) cartButtonGroup.getSelection().getMnemonic();
    }

    /**
     * 隐藏中间面板所有的显示(卡机界面，全键盘输入界面，车轴更改界面等)
     *
     * @author 王国栋 2014-8-27创建
     */
    public void hideCentralPanel() {
        vehAndWeightJPanel.setVisible(false);
        vehShaftJPanel.setVisible(false);
        inputFareJPanel.setVisible(false);
        cardRoomJPanel.setVisible(false);
        vehQueJPanel.setVisible(false);
        simulateJPanel.setVisible(false);
        axleTypeJPanel.setVisible(false);
        plateColorJPanel.setVisible(false);
        invoiceJPanel.setVisible(false);
        violateVehJPanel.setVisible(false);
        freeVehJPanel.setVisible(false);
        entryInfoJPanel.setVisible(false);
        plateJPanel.setVisible(false);
        blackPlateJPanel.setVisible(false);
        collectJPanel.setVisible(false);
        rtpJPanel.setVisible(false);
        rtpImgPanel.setVisible(false);
        plate3JPanel.setVisible(false);
        plate2JPanel.setVisible(false);
        plate1JPanel.setVisible(false);
    }

    /**
     * 更新入口站名及入口站号
     *
     * @author 王国栋 2014-8-28创建
     * @param entranceName 入口站名
     * @param entranceId 入口站号
     */
    public void updateEnt(String entranceName, String entranceId) {
        entryJLabel2.setText(entranceId);
        entryJLabel3.setText(entranceName);
    }

    /**
     * 更新读卡信息入口站，里程，入口时间，车速
     *
     * @author 王国栋 2014-8-28
     * @param entName 入口名称
     * @param dis 里程
     * @param duration 车辆行驶时间
     * @param speed 速度
     * @param overTimeFlag 超时标志 true超时，false未超时
     */
    public void showVehInfo(String entName, double dis, String duration, double speed, boolean overTimeFlag) {
        hideCentralPanel();
        vehAndWeightJPanel.setVisible(true);
        vehJPanel.setVisible(true);
        cardInfoJlabel2.setText(entName);
        if (dis != 0) {
            cardInfoJlabel4.setText(dis + "公里");
        } else {
            cardInfoJlabel4.setText(null);
        }
        cardInfoJlabel6.setText(duration);
        if (overTimeFlag) {//超时车行驶时间设为红色
            cardInfoJlabel6.setForeground(Color.red);
        } else {//非超时车行驶时间设为黑色
            cardInfoJlabel6.setForeground(Color.black);
        }
        if (speed != 0) {
            cardInfoJlabel8.setText(speed + "公里/小时");
        } else {
            cardInfoJlabel8.setText(null);
        }
    }

    /**
     * 显示入口里程计重量信息
     */
    public void showCardAndWeight() {
        if (!vehAndWeightJPanel.isVisible()) {
            vehAndWeightJPanel.setVisible(true);
        }
        if (!vehJPanel.isVisible()) {
            vehJPanel.setVisible(true);
        }
        if (!weightJPanel.isVisible()) {
            weightJPanel.setVisible(true);
        }
    }

    /**
     * 初始化入口及重量信息
     */
    public void initCardAndWeight() {
        cardInfoJlabel2.setText(null);
        cardInfoJlabel4.setText(null);
        cardInfoJlabel6.setText(null);
        cardInfoJlabel8.setText(null);
        weightInfoJlabel2.setText(null);
        weightInfoJlabel4.setText(null);
        weightInfoJlabel6.setText(null);
        weightInfoJlabel8.setText(null);
    }

    /**
     * 更新称重数据轴数，总重，限重以及车辆通过称重设备的速度
     *
     * @author 王国栋 2014-9-16
     * @param axleCount 轴数
     * @param totalWeight 总重
     * @param limitWeight 限重
     * @param speed 速度
     */
    public void showWeightInfo(String axleCount, String totalWeight, String limitWeight, String speed) {
        vehAndWeightJPanel.setVisible(true);
        weightJPanel.setVisible(true);
        if (axleCount == null || DoubleUtils.parseString(axleCount) == 0.0) {
            this.weightInfoJlabel2.setText(null);
        } else {
            this.weightInfoJlabel2.setText(axleCount);
        }
        if (totalWeight == null || DoubleUtils.parseString(totalWeight) == 0.0) {
            this.weightInfoJlabel4.setText(null);
        } else {
            this.weightInfoJlabel4.setText(totalWeight + "吨");
        }
        if (limitWeight == null || DoubleUtils.parseString(limitWeight) == 0.0) {
            this.weightInfoJlabel6.setText(null);
        } else {
            this.weightInfoJlabel6.setText(limitWeight + "吨");
        }
        if (speed == null || DoubleUtils.parseString(speed) == 0.0) {
            this.weightInfoJlabel8.setText(null);
        } else {
            this.weightInfoJlabel8.setText(speed + "公里/小时");
        }

    }

    /**
     * 更新收费信息
     *
     * @author 王国栋 2014-8-28
     *
     * @param fare 收费额
     */
    public void updateFare(String fare) {
        if (fare == null) {
//            this.fareJLabel2.setText(fare);
            setFare(fare);
            this.inputFareJlabel2.setText(fare);
        } else if (fare.endsWith(".0")) {
            int index = fare.indexOf(".");
            fare = fare.substring(0, index);
//            this.fareJLabel2.setText(fare);
            setFare(fare);
            this.inputFareJlabel2.setText(fare);
        } else {
//            this.fareJLabel2.setText(fare);
            setFare(fare);
            this.inputFareJlabel2.setText(fare);
        }
    }

    /**
     * 设置收费界面收费额（字体随收费额长度而变化）
     *
     * @param fare 收费额
     */
    private void setFare(String fare) {
        if (fare == null) {
            fareJLabel2.setText(fare);
            return;
        }
        int fontSize = 40;
        int len = fare.length();
        if (len <= 6) {
            fontSize = 90;//6位以下数字为90号字体
        } else if (len == 7) {//7位数字为75号字体
            fontSize = 75;
        } else if (len == 8) {
            fontSize = 65;//8位数字为65号字体
        } else if (len == 9) {//9位数字为60号字体
            fontSize = 60;
        } else if (len == 10) {
            fontSize = 55;//10位数字为55号字体
        }
        fareJLabel2.setFont(new Font("宋体", Font.BOLD, fontSize));
        fareJLabel2.setText(fare);
    }

    /**
     * 更新通行费及代收信息
     *
     * @param fare 通行费
     * @param collectFee 代收费用
     */
    public void updateFare(double fare, int collectFee) {
        jPanel6.setVisible(true);
        fareJPanel.setVisible(true);
        String fareInfo;
        if (fare % 1 > 0) {//对1取余数大于0，表示其小数部分非0
            double temp = DoubleUtils.sum(fare, (double) collectFee);
            fareInfo = String.valueOf(temp);
        } else {
            int temp = (int) fare + collectFee;
            fareInfo = String.valueOf(temp);
            this.inputFareJlabel2.setText(DoubleUtils.sum(fare, (double) collectFee) + "");
        }
//        this.fareJLabel2.setText(fareInfo);
        setFare(fareInfo);
        this.inputFareJlabel2.setText(fareInfo);
        if (collectFee != 0) {
            updateAttachInfo("含代收:" + collectFee + "元");
        }
    }

    /**
     * 显示收费员输入收费金额界面
     *
     * @author 王国栋 2014-8-28
     */
    public void showInputFare() {
        if (!inputFareJPanel.isVisible()) {
            hideCentralPanel();
            inputFareJPanel.setVisible(true);
        }
    }

    /**
     * 初始化收费员输入收费金额界面
     */
    public void initInputFare() {
        inputFareJlabel4.setText(null);
        inputFareJlabel6.setText(null);
    }

    /**
     * 显示发票号码输入界面
     *
     * @author 王国栋 2014-8-28
     */
    public void showTicketNoPanel() {
        hideCentralPanel();
        ticketJLabel1.setText(null);
        invoiceJPanel.setVisible(true);
        ticketJLabel2.setText(null);
    }

    /**
     * 更新发票号码
     *
     * @author 王国栋 2014-8-28
     * @param num
     */
    public void updateTicketNo(String num) {
        ticketJLabel1.setText(num);
    }

    /**
     * 更新上一辆车的信息
     *
     * @author 王国栋 2014-8-29
     * @param vehClass 车型
     * @param vehPlate 车牌
     * @param ent 入口信息
     * @param fare 收费额
     * @param perPayInfo 收费信息
     * @param weight 重量信息
     */
    public void updateLastVehInfo(String vehClass, String vehPlate, String ent, String fare, String perPayInfo, String weight) {
        this.lastVehJLabel1.setText(vehClass);
        this.lastVehJLabel2.setText(vehPlate);
        this.lastVehJLabel3.setText(ent);
        if (fare == null) {
            lastVehJLabel4.setText(null);
        } else {
            if (fare.endsWith(".0")) {
                fare = fare.substring(0, fare.indexOf(".0"));
            }
            lastVehJLabel4.setText(fare + "元");
        }
        this.lastVehJLabel5.setText(perPayInfo);
        this.lastVehJLabel6.setText(weight);
    }

    /**
     * 显示模拟菜单 1-通行模拟 2-更改成型\更改车牌 3-被拖车 4-重打印发票
     *
     * @param flag 1 更改车型/车种 2 重打印发票，模拟通行 3 被拖车 4 通行模拟 5 重打印发票
     * @author 王国栋 2014-8-29
     */
    public void showSimulate(int flag) {
        simuButton1.setEnabled(false);
        simuButton2.setEnabled(false);
        simuButton3.setEnabled(false);
        simuButton4.setEnabled(false);
        simuButton5.setEnabled(false);
        if (flag == 0) {
            simuButton5.setEnabled(true);
            updateSimulate("5");
        } else if (flag == 1) {
            simuButton2.setEnabled(true);
            updateSimulate("2");
        } else if (flag == 2) {
            simuButton1.setEnabled(true);
            simuButton4.setEnabled(true);
            updateSimulate("1");
        } else if (flag == 3) {
            simuButton3.setEnabled(true);
            updateSimulate("3");
        } else if (flag == 4) {
            simuButton1.setEnabled(true);
            updateSimulate("1");
        } else if (flag == 5) {
            simuButton4.setEnabled(true);
            updateSimulate("4");
        } else if (flag == 6) {
            simuButton2.setEnabled(true);
            simuButton5.setEnabled(true);
            updateSimulate("2");
        }
        hideCentralPanel();
        simulateJPanel.setVisible(true);
    }

    /**
     * 将模拟菜单中所有选项设为未选中
     *
     * @author 王国栋 2014-8-29
     */
    public void cleanSimulate() {
        simulateButtonGroup.clearSelection();
    }

    /**
     * 根据所提供数字更新模拟菜单
     *
     * @author 王国栋 2014-8-29
     * @param num
     */
    public void updateSimulate(String num) {
//        cleanSimulate();
        switch (num) {
            case "1":
                simuButton1.doClick();
                break;
            case "2":
                simuButton2.doClick();
                break;
            case "3":
                simuButton3.doClick();
                break;
            case "4":
                simuButton4.doClick();
                break;
            case "5":
                simuButton5.doClick();
        }
    }

    /**
     * 获取模拟面板选择结果
     *
     * @return 无选择结果时返回‘0’
     */
    public char getSimulateResult() {
        ButtonModel bm = simulateButtonGroup.getSelection();
        if (bm == null) {
            return '0';
        } else {
            return (char) bm.getMnemonic();
        }
    }

    /**
     * 显示军警车
     *
     * @author 王国栋
     */
    public void showMilitary() {
        if (!militaryjLabel.isVisible()) {
            militaryjLabel.setVisible(true);
        }
    }

    /**
     * 隐藏军警车
     *
     * @author 王国栋
     */
    public void hideMilitary() {
        if (militaryjLabel.isVisible()) {
            militaryjLabel.setVisible(false);
        }
    }

    /**
     * 更新卡箱标签卡号码
     *
     * @author 王国栋 2014-8-30
     * @param cartId 标签卡号码
     */
    public void updateCartId(String cartId) {
        this.cartjLabel2.setText(cartId);
    }

    /**
     * 更新界面中卡箱容量
     *
     * @author 王国栋 2014-8-30
     * @param totalNum 卡箱容量
     */
    public void updateTotalCartNum(String totalNum) {
        cartjLabel5.setText(totalNum);
    }

    /**
     * 更新卡箱内当前卡的数量
     *
     * @author 王国栋 2014-8-30
     * @param num 当前卡数量
     */
    public void updateCartNum(String num) {
        cartjLabel3.setText(num);
    }

    /**
     * 到达线圈改为黑色
     *
     * @author 王国栋 2014-9-1
     */
    public void updateArriveCoilBlack() {
//        coilJLabel.setIcon(new ImageIcon(getClass().getResource("/ui/img/blackCoil.png")));
        coilJLabel.activateCoil();
    }

    /**
     * 到达线圈改为白色
     *
     * @author 王国栋 2014-9-1
     */
    public void updateArriveCoilWhite() {
//        coilJLabel.setIcon(new ImageIcon(getClass().getResource("/ui/img/whiteCoil.png")));
        coilJLabel.deactivateCoil();
    }

    /**
     * 用给定信息num更新已过轴重仪正在等待被处理的车辆数量
     *
     * @author 王国栋 2014-9-2
     * @param num
     */
    public void updateWaitVehCount(String num) {
        weightVehCntJLabel.setText(num + "辆车");
    }

    /**
     * 根据给定的数字以及轴组信息在界面上更新指定车辆的车轴信息及轴重信息
     *
     * @author 王国栋 2014-9-3
     * @param vehNum 车辆数量
     * @param axleList 轴组集合
     */
    public void updateVehAxle(int vehNum, List<AxleGroup> axleList) {
        switch (vehNum) {
            case 1:
                updateFirstVehPanel(axleList, false);
                hideSecondVehPanel();
                hideThirdVehPanel();
                break;
            case 2:
                updateSecondVehPanel(axleList, false);
                hideThirdVehPanel();
                break;
            case 3:
                updateThirdVehPanel(axleList, false);
                break;
            default:
                break;
        }

    }

    /**
     * 根据给定的数字以及轴组信息在界面上更新指定超载车辆的车轴信息及轴重信息
     *
     * @author 王国栋 2014-9-3
     * @param vehNum 超载车辆数量
     * @param axleList 超载车辆轴组集合
     */
    public void updateOWVehAxle(int vehNum, List<AxleGroup> axleList) {
        switch (vehNum) {
            case 1:
                updateFirstVehPanel(axleList, true);
                hideSecondVehPanel();
                hideThirdVehPanel();
                break;
            case 2:
                updateSecondVehPanel(axleList, true);
                hideThirdVehPanel();
                break;
            case 3:
                updateThirdVehPanel(axleList, true);
                break;
            default:
        }

    }

    /**
     * 隐藏第一辆车的轴组列表
     */
    public void hideFirstVehPanel() {
        veh1JPanel.setVisible(false);
    }

    /**
     * 隐藏第二辆车的轴组列表
     */
    public void hideSecondVehPanel() {
        veh2JPanel.setVisible(false);
    }

    /**
     * 隐藏第三辆车的轴组列表
     */
    public void hideThirdVehPanel() {
        veh3JPanel.setVisible(false);
    }

    /**
     * 根据给定的轴组信息更新指定标签
     *
     * @param jLabel 需要更新的标签
     * @param ag 轴组信息
     * @param flag 是否判断超载
     */
    private void setAxleGroupImg(JLabel jLabel, AxleGroup ag, boolean flag) {
        double limitWeight = ag.getLimitWeight();
        double weight = ag.getAxleWeight();
        double rate = DoubleUtils.div(weight, limitWeight, 2);
        AgJLabel agJLabel = (AgJLabel) jLabel;
        agJLabel.updateAg(ag.getAxleType(), rate);
    }

    /**
     * 根据给定的轴组信息更新第一辆车的轴组显示
     *
     * @author 王国栋 2014-9-3
     * @param axleList 轴组集合
     * @param owFlag 超载标识，true超载 false未超载
     */
    public void updateFirstVehPanel(List<AxleGroup> axleList, boolean owFlag) {
        int len = axleList.size();
        if (len >= 1) {
            AxleGroup ag = axleList.get(0);
            setAxleGroupImg(veh1JLabel1, ag, true);
            veh1JLabel2.setText(DoubleUtils.div(ag.getAxleWeight(), 100, 1) + "");
        }
        if (len >= 2) {
            AxleGroup ag = axleList.get(1);
            setAxleGroupImg(veh1JLabel3, ag, true);
            veh1JLabel4.setText(DoubleUtils.div(ag.getAxleWeight(), 100, 1) + "");
        }
        if (len >= 3) {
            AxleGroup ag = axleList.get(2);
            setAxleGroupImg(veh1JLabel5, ag, true);
            veh1JLabel6.setText(DoubleUtils.div(ag.getAxleWeight(), 100, 1) + "");
        }
        if (len >= 4) {
            AxleGroup ag = axleList.get(3);
            setAxleGroupImg(veh1JLabel7, ag, true);
            veh1JLabel8.setText(DoubleUtils.div(ag.getAxleWeight(), 100, 1) + "");
        }
        veh1JPanel.setVisible(true);
    }

    /**
     * 根据给定的轴组信息更新第二辆车的轴组显示
     *
     * @author 王国栋 2014-9-3
     * @param axleList 轴组集合
     * @param owFlag 超载标识，true超载 false未超载
     */
    public void updateSecondVehPanel(List<AxleGroup> axleList, boolean owFlag) {
        int len = axleList.size();
        if (len >= 1) {
            AxleGroup ag = axleList.get(0);
            setAxleGroupImg(veh2JLabel1, ag, true);
            veh2JLabel2.setText(DoubleUtils.div(ag.getAxleWeight(), 100, 1) + "");
        }
        if (len >= 2) {
            AxleGroup ag = axleList.get(1);
            setAxleGroupImg(veh2JLabel3, ag, true);
            veh2JLabel4.setText(DoubleUtils.div(ag.getAxleWeight(), 100, 1) + "");
        }
        if (len >= 3) {
            AxleGroup ag = axleList.get(2);
            setAxleGroupImg(veh2JLabel5, ag, true);
            veh2JLabel6.setText(DoubleUtils.div(ag.getAxleWeight(), 100, 1) + "");
        }
        if (len >= 4) {
            AxleGroup ag = axleList.get(3);
            setAxleGroupImg(veh2JLabel7, ag, true);
            veh2JLabel8.setText(DoubleUtils.div(ag.getAxleWeight(), 100, 1) + "");
        }
        veh2JPanel.setVisible(true);
    }

    /**
     * 根据给定的轴组信息更新第三辆车的轴组显示
     *
     * @author 王国栋 2014-9-3
     * @param axleList 轴组集合
     * @param owFlag 超载标志，true超载 false未超载
     */
    public void updateThirdVehPanel(List<AxleGroup> axleList, boolean owFlag) {
        int len = axleList.size();
        if (len >= 1) {
            AxleGroup ag = axleList.get(0);
            setAxleGroupImg(veh3JLabel1, ag, true);
            veh3JLabel2.setText(DoubleUtils.div(ag.getAxleWeight(), 100, 1) + "");
        }
        if (len >= 2) {
            AxleGroup ag = axleList.get(1);
            setAxleGroupImg(veh3JLabel3, ag, true);
            veh3JLabel4.setText(DoubleUtils.div(ag.getAxleWeight(), 100, 1) + "");
        }
        if (len >= 3) {
            AxleGroup ag = axleList.get(2);
            setAxleGroupImg(veh3JLabel5, ag, true);
            veh3JLabel6.setText(DoubleUtils.div(ag.getAxleWeight(), 100, 1) + "");
        }
        if (len >= 4) {
            AxleGroup ag = axleList.get(3);
            setAxleGroupImg(veh3JLabel7, ag, true);
            veh3JLabel8.setText(DoubleUtils.div(ag.getAxleWeight(), 100, 1) + "");
        }
        veh3JPanel.setVisible(true);
    }

    /**
     * 初始化第一辆第二辆第三辆车的轴组显示
     *
     * @author 王国栋 2014-9-3
     */
    public void initVehAxle() {
        if (veh1JLabel1 != null) {
            veh1JLabel1.updateAg(null, 0);
        }
        if (veh1JLabel3 != null) {
            veh1JLabel3.updateAg(null, 0);
        }
        if (veh1JLabel5 != null) {
            veh1JLabel5.updateAg(null, 0);
        }
        if (veh1JLabel7 != null) {
            veh1JLabel7.updateAg(null, 0);
        }

        if (veh2JLabel1 != null) {
            veh2JLabel1.updateAg(null, 0);
        }
        if (veh2JLabel3 != null) {
            veh2JLabel3.updateAg(null, 0);
        }
        if (veh2JLabel5 != null) {
            veh2JLabel5.updateAg(null, 0);
        }
        if (veh2JLabel7 != null) {
            veh2JLabel7.updateAg(null, 0);
        }

        if (veh3JLabel1 != null) {
            veh3JLabel1.updateAg(null, 0);
        }
        if (veh3JLabel3 != null) {
            veh3JLabel3.updateAg(null, 0);
        }
        if (veh3JLabel5 != null) {
            veh3JLabel5.updateAg(null, 0);
        }
        if (veh3JLabel7 != null) {
            veh3JLabel7.updateAg(null, 0);
        }

        veh1JLabel2.setText(null);
        veh1JLabel4.setText(null);
        veh1JLabel6.setText(null);
        veh1JLabel8.setText(null);

        veh2JLabel2.setText(null);
        veh2JLabel4.setText(null);
        veh2JLabel6.setText(null);
        veh2JLabel8.setText(null);

        veh3JLabel2.setText(null);
        veh3JLabel4.setText(null);
        veh3JLabel6.setText(null);
        veh3JLabel8.setText(null);
    }

    /**
     * 显示计重功能菜单
     *
     * @author 王国栋 2014-9-3
     */
    public void showWeightPanel() {
        hideCentralPanel();
        initWeightPanelButton();
        vehQueJPanel.setVisible(true);
    }

    /**
     * 初始化计重功能菜单按钮,设为未选中
     *
     * @author 王国栋 2014-9-4
     */
    public void initWeightPanelButton() {
        vehQueButtonGroup.clearSelection();
    }

    /**
     * 无车是计重功能菜单部分按钮应为不可点击
     */
    public void unableWeightPanelButtonWhileNoVeh() {
        vehQueButton1.setEnabled(false);
        vehQueButton2.setEnabled(false);
        vehQueButton3.setEnabled(true);
        vehQueButton4.setEnabled(false);
        vehQueButton5.setEnabled(false);
        vehQueButton6.setEnabled(true);
    }

    /**
     * 有车时计重功能菜单按钮添加车辆不可点击，其他OK
     */
    public void enableWeightPanelButton() {
        vehQueButton1.setEnabled(true);
        vehQueButton2.setEnabled(true);
        vehQueButton3.setEnabled(true);
        vehQueButton4.setEnabled(true);
        vehQueButton5.setEnabled(true);
        vehQueButton6.setEnabled(false);
    }

    /**
     * 根据给定数字更新计重功能菜单
     *
     * @author 王国栋 2014-9-3
     * @param num
     */
    public void updateWeightPanel(String num) {
        switch (num) {
            case "1":
                vehQueButton1.doClick();//此处用doClick()而不用doClick()可以确保当该按钮处于unable状态时即使选了此方法也无效
                break;
            case "2":
                vehQueButton2.doClick();
                break;
            case "3":
                vehQueButton3.doClick();
                break;
            case "4":
                vehQueButton4.doClick();
                break;
            case "5":
                vehQueButton5.doClick();
                break;
            case "6":
                vehQueButton6.doClick();
                break;
            default:
        }
    }

    /**
     * 获取计重菜单中的选择结果
     *
     * @return 无选择结果时返回‘0’
     */
    public char getWeightPanelResult() {
        ButtonModel bm = vehQueButtonGroup.getSelection();
        if (bm == null) {
            return '0';
        } else {
            return (char) vehQueButtonGroup.getSelection().getMnemonic();
        }
    }

    /**
     * 在轴组列表中显示当前第一辆车车辆前九个轴组信息
     *
     * @author 王浩 2015-6-2
     * @param list 轴组集合
     */
    public void showTowedVehAxleListPanel(List<AxleGroup> list) {
        hideCentralPanel();
        initAxleListPanel();
        int i = list.size();
        if (i >= 1) {
            double weight1 = DoubleUtils.div(list.get(0).getAxleWeight(), 100, 1);
            shaftButton1.setText("1 - " + weight1 + " 吨");
            shaftButton1.setEnabled(false);
            setAxleGroupImg(shaftjLabel1, list.get(0), false);
        }
        if (i >= 2) {
            double weight2 = DoubleUtils.div(list.get(1).getAxleWeight(), 100, 1);
            shaftButton2.setText("2 - " + weight2 + " 吨");
            if (i == 2) {
                shaftButton2.setEnabled(false);
            } else {
                shaftButton2.setEnabled(true);
            }
            setAxleGroupImg(shaftjLabel2, list.get(1), false);
        }
        if (i >= 3) {
            double weight3 = DoubleUtils.div(list.get(2).getAxleWeight(), 100, 1);
            shaftButton3.setText("3 - " + weight3 + " 吨");
            if (i == 3) {
                shaftButton3.setEnabled(false);
            } else {
                shaftButton3.setEnabled(true);
            }
            setAxleGroupImg(shaftjLabel3, list.get(2), false);
        }
        if (i >= 4) {
            double weight4 = DoubleUtils.div(list.get(3).getAxleWeight(), 100, 1);
            shaftButton4.setText("4 - " + weight4 + " 吨");
            if (i == 4) {
                shaftButton4.setEnabled(false);
            } else {
                shaftButton4.setEnabled(true);
            }
            setAxleGroupImg(shaftjLabel4, list.get(3), false);
        }
        if (i >= 5) {
            double weight5 = DoubleUtils.div(list.get(4).getAxleWeight(), 100, 1);
            shaftButton5.setText("5 - " + weight5 + " 吨");
            if (i == 5) {
                shaftButton5.setEnabled(false);
            } else {
                shaftButton5.setEnabled(true);
            }
            setAxleGroupImg(shaftjLabel5, list.get(4), false);
        }
        if (i >= 6) {
            double weight6 = DoubleUtils.div(list.get(5).getAxleWeight(), 100, 1);
            shaftButton6.setText("6 - " + weight6 + " 吨");
            if (i == 6) {
                shaftButton6.setEnabled(false);
            } else {
                shaftButton6.setEnabled(true);
            }
            setAxleGroupImg(shaftjLabel6, list.get(5), false);
        }
        if (i >= 7) {
            double weight7 = DoubleUtils.div(list.get(6).getAxleWeight(), 100, 1);
            shaftButton7.setText("7 - " + weight7 + " 吨");
            if (i == 7) {
                shaftButton7.setEnabled(false);
            } else {
                shaftButton7.setEnabled(true);
            }
            setAxleGroupImg(shaftjLabel7, list.get(6), false);
        }
        if (i >= 8) {
            double weight8 = DoubleUtils.div(list.get(7).getAxleWeight(), 100, 1);
            shaftButton8.setText("8 - " + weight8 + " 吨");
            if (i == 8) {
                shaftButton8.setEnabled(false);
            } else {
                shaftButton8.setEnabled(true);
            }
            setAxleGroupImg(shaftjLabel8, list.get(7), false);
        }
        if (i >= 9) {
            double weight9 = DoubleUtils.div(list.get(8).getAxleWeight(), 100, 1);
            shaftButton9.setText("9 - " + weight9 + " 吨");
            if (i == 9) {
                shaftButton9.setEnabled(false);
            } else {
                shaftButton9.setEnabled(true);
            }
            setAxleGroupImg(shaftjLabel9, list.get(8), false);
        }
        vehShaftJPanel.setVisible(true);
    }

    /**
     * 在轴组列表中显示当前所有车辆前九个轴组信息
     *
     * @author 王国栋 2014-9-3
     * @param list 轴组集合
     */
    public void showAxleListPanel(List<AxleGroup> list) {
        hideCentralPanel();
        initAxleListPanel();
        int i = list.size();
        if (i >= 1) {
            double weight1 = DoubleUtils.div(list.get(0).getAxleWeight(), 100, 1);
            shaftButton1.setText("1 - " + weight1 + " 吨");
            shaftButton1.setEnabled(true);
            setAxleGroupImg(shaftjLabel1, list.get(0), false);
        }
        if (i >= 2) {
            double weight2 = DoubleUtils.div(list.get(1).getAxleWeight(), 100, 1);
            shaftButton2.setText("2 - " + weight2 + " 吨");
            shaftButton2.setEnabled(true);
            setAxleGroupImg(shaftjLabel2, list.get(1), false);
        }
        if (i >= 3) {
            double weight3 = DoubleUtils.div(list.get(2).getAxleWeight(), 100, 1);
            shaftButton3.setText("3 - " + weight3 + " 吨");
            shaftButton3.setEnabled(true);
            setAxleGroupImg(shaftjLabel3, list.get(2), false);
        }
        if (i >= 4) {
            double weight4 = DoubleUtils.div(list.get(3).getAxleWeight(), 100, 1);
            shaftButton4.setText("4 - " + weight4 + " 吨");
            shaftButton4.setEnabled(true);
            setAxleGroupImg(shaftjLabel4, list.get(3), false);
        }
        if (i >= 5) {
            double weight5 = DoubleUtils.div(list.get(4).getAxleWeight(), 100, 1);
            shaftButton5.setText("5 - " + weight5 + " 吨");
            shaftButton5.setEnabled(true);
            setAxleGroupImg(shaftjLabel5, list.get(4), false);
        }
        if (i >= 6) {
            double weight6 = DoubleUtils.div(list.get(5).getAxleWeight(), 100, 1);
            shaftButton6.setText("6 - " + weight6 + " 吨");
            shaftButton6.setEnabled(true);
            setAxleGroupImg(shaftjLabel6, list.get(5), false);
        }
        if (i >= 7) {
            double weight7 = DoubleUtils.div(list.get(6).getAxleWeight(), 100, 1);
            shaftButton7.setText("7 - " + weight7 + " 吨");
            shaftButton7.setEnabled(true);
            setAxleGroupImg(shaftjLabel7, list.get(6), false);
        }
        if (i >= 8) {
            double weight8 = DoubleUtils.div(list.get(7).getAxleWeight(), 100, 1);
            shaftButton8.setText("8 - " + weight8 + " 吨");
            shaftButton8.setEnabled(true);
            setAxleGroupImg(shaftjLabel8, list.get(7), false);
        }
        if (i >= 9) {
            double weight9 = DoubleUtils.div(list.get(8).getAxleWeight(), 100, 1);
            shaftButton9.setText("9 - " + weight9 + " 吨");
            shaftButton9.setEnabled(true);
            setAxleGroupImg(shaftjLabel9, list.get(8), false);
        }
        vehShaftJPanel.setVisible(true);
    }

    /**
     * 初始化轴组列表显示面板
     *
     * @author 王国栋 2014-9-3
     */
    public void initAxleListPanel() {
        initAxleListButton();
        shaftButton1.setText("1 - ");
        shaftButton2.setText("2 - ");
        shaftButton3.setText("3 - ");
        shaftButton4.setText("4 - ");
        shaftButton5.setText("5 - ");
        shaftButton6.setText("6 - ");
        shaftButton7.setText("7 - ");
        shaftButton8.setText("8 - ");
        shaftButton9.setText("9 - ");
        shaftButton1.setEnabled(false);
        shaftButton2.setEnabled(false);
        shaftButton3.setEnabled(false);
        shaftButton4.setEnabled(false);
        shaftButton5.setEnabled(false);
        shaftButton6.setEnabled(false);
        shaftButton7.setEnabled(false);
        shaftButton8.setEnabled(false);
        shaftButton9.setEnabled(false);
        shaftjLabel1.setIcon(null);
        shaftjLabel2.setIcon(null);
        shaftjLabel3.setIcon(null);
        shaftjLabel4.setIcon(null);
        shaftjLabel5.setIcon(null);
        shaftjLabel6.setIcon(null);
        shaftjLabel7.setIcon(null);
        shaftjLabel8.setIcon(null);
        shaftjLabel9.setIcon(null);
        shaftjLabel1.setText(null);
        shaftjLabel2.setText(null);
        shaftjLabel3.setText(null);
        shaftjLabel4.setText(null);
        shaftjLabel5.setText(null);
        shaftjLabel6.setText(null);
        shaftjLabel7.setText(null);
        shaftjLabel8.setText(null);
        shaftjLabel9.setText(null);
    }

    /**
     * 根据给定数字num更新轴组列表按钮选择
     *
     * @author 王国栋 2014-9-3
     * @param num
     */
    public void updateAxleListPanel(String num) {
        switch (num) {
            case "1":
                shaftButton1.doClick();
                break;
            case "2":
                shaftButton2.doClick();
                break;
            case "3":
                shaftButton3.doClick();
                break;
            case "4":
                shaftButton4.doClick();
                break;
            case "5":
                shaftButton5.doClick();
                break;
            case "6":
                shaftButton6.doClick();
                break;
            case "7":
                shaftButton7.doClick();
                break;
            case "8":
                shaftButton8.doClick();
                break;
            case "9":
                shaftButton9.doClick();
                break;
            default:
        }

    }

    /**
     * 初始化轴组列表按钮（全部设为未选中）
     *
     * @author 王国栋 2014-9-3
     */
    public void initAxleListButton() {
        buttonGroup2.clearSelection();
    }

    /**
     * 根据给定轴组信息显示轴组类型面板
     *
     * @param agList 轴组集合
     */
    public void showAxleTypePanel(List<AxleGroup> agList) {
        hideCentralPanel();
        reInitAxleTypePanel();
        int len = agList.size();
        if (2 <= len) {
            double weight1 = DoubleUtils.div(agList.get(0).getAxleWeight(), 100, 1);
            double weight2 = DoubleUtils.div(agList.get(1).getAxleWeight(), 100, 1);
            agButton1.setText("1 - " + weight1 + "吨");
            agLabel1.setVisible(true);
            agButton2.setText("2 - " + weight2 + "吨");
            agLabel2.setVisible(true);
        }
        if (5 <= len) {
            double weight3 = DoubleUtils.div(agList.get(2).getAxleWeight(), 100, 1);
            double weight4 = DoubleUtils.div(agList.get(3).getAxleWeight(), 100, 1);
            double weight5 = DoubleUtils.div(agList.get(4).getAxleWeight(), 100, 1);

            agButton3.setText("3 - " + weight3 + "吨");
            agLabel3.setVisible(true);
            agButton4.setText("4 - " + weight4 + "吨");
            agLabel4.setVisible(true);
            agButton5.setText("5 - " + weight5 + "吨");
            agLabel5.setVisible(true);
        }
        if (len == 9) {
            double weight6 = DoubleUtils.div(agList.get(5).getAxleWeight(), 100, 1);
            double weight7 = DoubleUtils.div(agList.get(6).getAxleWeight(), 100, 1);
            double weight8 = DoubleUtils.div(agList.get(7).getAxleWeight(), 100, 1);
            double weight9 = DoubleUtils.div(agList.get(8).getAxleWeight(), 100, 1);
            agButton6.setText("6 - " + weight6 + "吨");
            agLabel6.setVisible(true);
            agButton7.setText("7 - " + weight7 + "吨");
            agLabel7.setVisible(true);
            agButton8.setText("8 - " + weight8 + "吨");
            agLabel8.setVisible(true);
            agButton9.setText("9 - " + weight9 + "吨");
            agLabel9.setVisible(true);
        }
        axleTypeJPanel.setVisible(true);
    }

    /**
     * 初始化轴组类型面板轴组
     *
     * @author 王国栋 2014-9-4
     */
    public void reInitAxleTypePanel() {
        agButton1.setText(null);
        agLabel1.setVisible(false);
        agButton2.setText(null);
        agLabel2.setVisible(false);
        agButton3.setText(null);
        agLabel3.setVisible(false);
        agButton4.setText(null);
        agLabel4.setVisible(false);
        agButton5.setText(null);
        agLabel5.setVisible(false);
        agButton6.setText(null);
        agLabel6.setVisible(false);
        agButton7.setText(null);
        agLabel7.setVisible(false);
        agButton8.setText(null);
        agLabel8.setVisible(false);
        agButton9.setText(null);
        agLabel9.setVisible(false);
        axleTypeButtonGroup.clearSelection();
    }

    /**
     * 根据给定的数字在轴组类型面板选中相应的按钮
     *
     * @author 王国栋 2014-9-4
     * @param num
     */
    public void updateAxleTypePanel(String num) {
        switch (num) {
            case "1":
                agButton1.doClick();
                break;
            case "2":
                agButton2.doClick();
                break;
            case "3":
                agButton3.doClick();
                break;
            case "4":
                agButton4.doClick();
                break;
            case "5":
                agButton5.doClick();
                break;
            case "6":
                agButton6.doClick();
                break;
            case "7":
                agButton7.doClick();
                break;
            case "8":
                agButton8.doClick();
                break;
            case "9":
                agButton9.doClick();
                break;
        }

    }

    /**
     * 获取轴组类型面板中的选择
     *
     * @return 用户选择的数字
     */
    public int getAxleTypeChoice() {
        if (agButton1.isSelected()) {
            return 1;
        } else if (agButton2.isSelected()) {
            return 2;
        } else if (agButton3.isSelected()) {
            return 3;
        } else if (agButton4.isSelected()) {
            return 4;
        } else if (agButton5.isSelected()) {
            return 5;
        } else if (agButton6.isSelected()) {
            return 6;
        } else if (agButton7.isSelected()) {
            return 7;
        } else if (agButton8.isSelected()) {
            return 8;
        } else if (agButton9.isSelected()) {
            return 9;
        }
        return 0;
    }

    /**
     * 根据给定的mop更新界面上的付款方式
     *
     * @author 王国栋 2014-9-8
     * @param mop 付款方式
     */
    public void updateMop(String mop) {
        switch (mop) {
            case "01":
                mopJLabel3.setText("现金");
                break;
            case "17":
                mopJLabel3.setText("军警车");
                break;
            case "40":
                mopJLabel3.setText("免费车");
                break;
            case "51":
                mopJLabel3.setText("ETC卡");
                break;
        }

    }

    /**
     * 显示车辆黑灰名单面板
     *
     * @author 王国栋 2014-9-18
     * @param vehInfo 车辆信息（如：车辆在黑名单上）
     * @param vehPlate 车牌
     * @param vioReason 违禁车辆原因
     */
    public void showViolateVehPanel(String vehInfo, String vehPlate, String vioReason) {
        hideCentralPanel();
        jLabel20.setText(vehInfo);
        jLabel21.setText(vehPlate);
        jLabel22.setText(vioReason);
        violateVehJPanel.setVisible(true);

    }

    /**
     * 显示内部车辆面板
     *
     * @author 王国栋 2014-9-19
     * @param info 显示信息
     */
    public void showFreeVehPanel(String info) {
        hideCentralPanel();
        jTextArea2.setText(info);
        freeVehJPanel.setVisible(true);
    }

    /**
     * 更新内部车面板中的内部车照片
     *
     * @author 王国栋 2014-9-19
     * @param str 照片地址
     */
    public void updateFreeVehPhoto(String str) {
        if (str != null) {
            ImageIcon img = new ImageIcon(str);
            img.setImage(img.getImage().getScaledInstance(jLabel36.getWidth(), jLabel36.getHeight(), Image.SCALE_DEFAULT));
            jLabel36.setIcon(img);
        }
    }

    /**
     * 更新入口信息面板中的入口照片
     *
     * @author 王国栋 2014-9-19
     * @param path 图片地址
     */
    public void updateEntryInfoPhoto(String path) {
        if (path != null) {
            ImageIcon img = new ImageIcon(path);
            //图片按比例调整
            img.setImage(img.getImage().getScaledInstance(entryVehPhoto.getWidth(), entryVehPhoto.getHeight(), Image.SCALE_DEFAULT));
            entryVehPhoto.setIcon(img);
        }
    }

    /**
     * 更新车牌黑名单信息面板中的车牌黑名单照片
     *
     * @author wh 2015-07-13
     * @param path 图片地址
     */
    public void updateBlackPlatePhoto(String path) {
        if (path != null) {
            ImageIcon img = new ImageIcon(path);
            //图片按比例调整
            img.setImage(img.getImage().getScaledInstance(blkVehJLabel5.getWidth(), blkVehJLabel5.getHeight(), Image.SCALE_DEFAULT));
            blkVehJLabel5.setIcon(img);
        }
    }

    /**
     * 出现异常调用入口信息照片时，显示相应入口信息
     *
     * @author 王国栋 2014-9-19
     * @param entryDHM 入口时间
     * @param entryStation 入口收费站
     * @param entryLane 入口车道
     * @param entryStaff 入口员工号
     * @param entryVehClass 入口车型
     * @param entryVehPlate 入口车牌
     * @param entryCardSerial 通行卡序列号
     */
    public void showEntryInfoPanel(String entryDHM, String entryStation, String entryLane, String entryStaff, String entryVehClass, String entryVehPlate, String entryCardSerial) {
        hideCentralPanel();
        this.entryInfoJlabel1.setText(entryDHM);
        this.entryInfoJlabel2.setText(entryStation);
        this.entryInfoJlabel3.setText(entryLane);
        this.entryInfoJlabel4.setText(entryStaff);
        this.entryInfoJlabel5.setText(entryVehClass);
        this.entryInfoJlabel6.setText(entryVehPlate);
        this.entryInfoJlabel7.setText(entryCardSerial);
        entryInfoJPanel.setVisible(true);
    }

    /**
     * 显示入口信息
     */
    public void showEntryInfoPanel() {
        hideCentralPanel();
        entryInfoJPanel.setVisible(true);
    }

    /**
     * 出现异常调用入口信息照片时，显示相应入口信息
     *
     * @author wh 2015-07-13
     * @param vehInfo 车辆信息 例如：车辆在黑名单上
     * @param blackPlateVehPlate 入口车牌
     * @param blackPlateViolateReason 违禁原因
     */
    public void showBlackPlateInfoPanel(String vehInfo,
            String blackPlateVehPlate, String blackPlateViolateReason) {
        hideCentralPanel();
        blkVehJLabel1.setText(vehInfo);
        blkVehJLabel3.setText(blackPlateVehPlate);
        StringBuilder sb = new StringBuilder();
        sb.append("<html>").append(blackPlateViolateReason).append("</html>");
//        blkVehJLabel4.setText(blackPlateViolateReason);
        blkVehJLabel4.setText(sb.toString());
        blackPlateJPanel.setVisible(true);
    }

    /**
     * 更新附加信息（找零，ETC卡余额，折后金额等）
     *
     * @author 王国栋 2014-9-19
     * @param info 附件信息
     */
    public void updateAttachInfo(String info) {
        this.fareJLabel3.setText(info);
    }

    /**
     * 根据给定信息更新付款信息（ETC卡卡号，现金票据号等）
     *
     * @author 王国栋 2014-9-19
     * @param payInfo 付款信息
     */
    public void updatePayInfo(String payInfo) {
        this.mopJLabel2.setText(payInfo);
    }

    /**
     * 更新上班后处理车辆的数量
     *
     * @param vehCount 上班后处理车辆的数量
     */
    public void updateVehCount(String vehCount) {
        vehCntJLabel.setText(vehCount);
    }

    /**
     * 显示硬件异常
     *
     * @param error 硬件异常信息
     */
    public void updateToolError(String error) {
        if (error != null && !error.isEmpty()) {
            if ("收发卡机入口车道卡箱将空".equals(error)) {
                errorMsgJLabel.setBackground(Color.green);
            } else if ("收发卡机出口车道卡箱将满".equals(error)) {
                errorMsgJLabel.setBackground(Color.green);
            } else {
                errorMsgJLabel.setBackground(Color.red);
            }
            StringBuilder sb = new StringBuilder();
            sb.append("<html><center>").append(error).append("</center></html>");
            errorMsgJLabel.setText(sb.toString());
        } else {
            initToolError();
        }
    }

    /**
     * 初始化硬件异常信息显示
     */
    public void initToolError() {
        this.errorMsgJLabel.setText(null);
        this.errorMsgJLabel.setBackground(Color.white);
    }

    /**
     * 显示报警面板
     */
    public void showAlarmPanel() {
        centerJPanel.setVisible(false);
        alarmButton4.doClick();
        alarmJPanel.setVisible(true);
    }

    /**
     * 隐藏报警面板（报警面板单独隐藏，确保只有在报警控制中才将其隐藏）
     */
    public void hideAlarmPanel() {
        if (alarmJPanel.isVisible()) {
            alarmJPanel.setVisible(false);
        }
        centerJPanel.setVisible(true);
    }

    /**
     * 根据给定信息更新报警面板报警按钮的选择
     *
     * @param num 给定数字
     */
    public void updateAlarmPanel(String num) {
        if (num == null || !num.matches("[1-6]")) {
            return;
        }
        switch (num) {
            case "1":
                alarmButton1.doClick();
                break;
            case "2":
                alarmButton2.doClick();
                break;
            case "3":
                alarmButton3.doClick();
                break;
            case "4":
                alarmButton4.doClick();
                break;
            case "5":
                alarmButton5.doClick();
                break;
            case "6":
                alarmButton6.doClick();
                break;
        }
    }

    /**
     * 获取报警面板报警按钮选择结果
     *
     * @return 1 倒车 2 长车 3 一般违章 4 误报警 5 用户匆忙 6 被拖车
     */
    public int getAlarmResult() {
        int result = 0;
        if (alarmButton1.isSelected()) {
            result = 1;
        } else if (alarmButton2.isSelected()) {
            result = 2;
        } else if (alarmButton3.isSelected()) {
            result = 3;
        } else if (alarmButton4.isSelected()) {
            result = 4;
        } else if (alarmButton5.isSelected()) {
            result = 5;
        } else if (alarmButton6.isSelected()) {
            result = 6;
        }
        return result;
    }

    /**
     * 显示第一辆车的计费重量及限重
     *
     * @param fareWeight 计费重量（吨）
     * @param limitWeight 限重（吨）
     */
    public void showFirstVehWeight(String fareWeight, String limitWeight) {
        if (fareWeight == null || limitWeight == null) {
            weighJLabel.setText(null);
        } else {
            if (limitWeight.endsWith(".0")) {
                limitWeight = limitWeight.substring(0, limitWeight.indexOf(".0"));
            }
            if (fareWeight.endsWith(".0")) {
                fareWeight = fareWeight.substring(0, fareWeight.indexOf(".0"));
            }

            weighJLabel.setText(fareWeight + "-" + limitWeight);
        }
    }

    /**
     * 车型字体设置为黑色
     */
    public void setVehClassBLK() {
        vehClassJlabel2.setForeground(Color.black);
    }

    /**
     * 车型字体设置为蓝色
     */
    public void setVehClassBLU() {
        vehClassJlabel2.setForeground(Color.BLUE);
    }

    /**
     * 获取视频截图并将图片保存到指定位置
     * 注意与grab方法区别，captureVideo方法用于上班之后（视频已经显示），grab方法用于上班之前（视频未显示）
     *
     * @param filePath 图片保存位置
     */
    public void captureVideo(String filePath) {
        try {
            //交易图片，直接从界面上截取
            if (video.getRealizeName().equalsIgnoreCase(Video.VC4000)) { //vc4000需要在界面上直接抓拍图片
                Robot robot = new Robot();
                robot.mouseMove(this.getWidth(), 0);
                Rectangle rec = new Rectangle(panel2.getLocationOnScreen(), panel2.getSize());
                BufferedImage bi = robot.createScreenCapture(rec);
                File file = new File(filePath);
                ImageIO.write(bi, "jpg", file);
            } else {
                video.saveJPG(filePath);
            }
        } catch (Throwable ex) {
            LogControl.logInfo("视频截图异常", ex);
        }
    }

    /**
     * 初始化入口图片显示
     */
    public void initEntyImg() {
        entryVehPhoto.setIcon(null);
    }

    /**
     * 显示虚拟入口信息
     *
     */
    public void showVirtualEnt() {
        hideCentralPanel();
//        virtualEntPanel.setVisible(true);
    }

    /**
     * 设置虚拟入口面板
     *
     * @param map 虚拟入口信息key虚拟入口id，value虚拟入口名称
     */
    public void setVirtualEnt(Map<String, String> map) {
//        virtualEntPanel.removeAll();
        Set<String> set = map.keySet();
        List<String> list = new ArrayList(set);
        Collections.sort(list);
        for (int i = 0; i < list.size(); i++) {
            String entId = list.get(i);
            String entName = map.get(entId);
            JLabel label = new JLabel((i + 1) + ":" + entId + "-" + entName);
            label.setFont(new java.awt.Font("黑体", 1, 24));
//            virtualEntPanel.add(label);

        }
//        virtualEntPanel.setLayout(new java.awt.GridLayout(map.size(), 1));
    }

    public void updateVirtualEnt(String num) {
    }

    public String getVirtualEnt() {
        return null;
    }
    boolean flashFlag;
    Thread t = new Thread() {
        //入口站号入口站名以及收费额红蓝交替闪烁表示尚未确认
        @Override
        public void run() {
            while (true) {
                try {
                    Thread.sleep(1);
                } catch (InterruptedException ex) {
                }
                try {
                    if (flashFlag) {
                        fareJLabel2.setForeground(Color.red);
                        entryJLabel2.setForeground(Color.red);
                        entryJLabel3.setForeground(Color.red);
                        Thread.sleep(500);
                        fareJLabel2.setForeground(Color.blue);
                        entryJLabel2.setForeground(Color.blue);
                        entryJLabel3.setForeground(Color.blue);
                        Thread.sleep(500);
                    } else {
                        Thread.sleep(1000);
                    }
                } catch (InterruptedException ex) {
                    fareJLabel2.setForeground(Color.black);
                    entryJLabel2.setForeground(Color.black);
                    entryJLabel3.setForeground(Color.black);
                }
            }
        }
    };

    /**
     * 收费额及入口收费站闪烁
     */
    public void flashFareAndEntry() {
        flashFlag = true;
        if (!t.isAlive()) {
            t.start();
        }
    }

    /**
     * 收费额及入口收费站停止闪烁表示已确认
     */
    public void confirmFareAndEntry() {
        flashFlag = false;
        if (t != null) {
            t.interrupt();
        }
        fareJLabel2.setForeground(Color.black);
        entryJLabel2.setForeground(Color.black);
        entryJLabel3.setForeground(Color.black);
    }
    //视频监控标志
    boolean videoMonitorFlag;
    byte[] videoBuffer;

    /**
     * 视频监控线程
     */
    private void videoMonitor() {

        ThreadPoolControl.getThreadPoolInstance().execute(new Runnable() {
            @Override
            public void run() {
//                while (true) {
//                    try {
//                        Thread.sleep(100);
//                    } catch (InterruptedException ex) {
//                    }
//                    if (video != null) {
//                        break;
//                    }
//                }
                initVideo();//加载视频
                if (!video.getRealizeName().equalsIgnoreCase(Video.VC4000)) {
                    return;
                }
                while (true) {
                    try {
                        Thread.sleep(1);
                    } catch (InterruptedException ex) {
                    }
//                  if (videoMonitorFlag) {
                    if (videoMonitorFlag && video.getRealizeName().equalsIgnoreCase(Video.VC4000)) {
                        //是否监控视频（视频显示后才进行视频监控），只有VC4000的才需要进行监控重启
                        try {
                            Robot rob = new Robot();
                            Rectangle rec = new Rectangle(panel2.getLocationOnScreen(), panel2.getSize());
                            BufferedImage bi = rob.createScreenCapture(rec);
                            ByteArrayOutputStream out = new ByteArrayOutputStream();
                            ImageIO.write(bi, "gif", out);
                            out.close();
                            boolean flag = false;
                            byte[] buffer = out.toByteArray();
                            if (videoBuffer == null) {
                                videoBuffer = buffer;
                                continue;
                            } else {
                                if (!Arrays.equals(videoBuffer, buffer)) {
                                    flag = true;//视频正常
                                } else {
                                    flag = false;//视频异常
                                }
                                videoBuffer = buffer;
                            }
                            if (!flag && videoMonitorFlag) {//视频异常，重新显示视频
                                MTCLog.log("视频监控发现视频未正常显示，重新启动视频");
                                if (video != null) {
                                    video.stopCap();
                                }
//								if (saa != null) {
//                                    saa.closeSAA7134();
//                                }
                                Thread.sleep(1000);
                                if (videoMonitorFlag) {
                                    initVideo();//重新加载视频
                                    showVideo();
                                }
                            }
                        } catch (Exception ex) {
                            MTCLog.log("视频监控异常", ex);
                        }
                    }
                    try {
                        Thread.sleep(5000);//每5秒钟进行一次检测
                    } catch (Exception ex) {
                    }
                }
            }
        });
    }

    /**
     * 开始进行视频监控
     */
    public void startVideoMonitor() {
        videoMonitorFlag = true;
    }

    /**
     * 停止进行视频监控
     */
    public void stopVideoMonitor() {
        videoMonitorFlag = false;
    }

    /**
     * 显示代收面板
     */
    public void showCollectionPanel() {
        hideCentralPanel();
        collectJPanel.setVisible(true);
        updateCollectButtonNew("0");
    }

    /**
     * 根据所给数字更新代收面板上按键选择
     *
     * @param str 所给数字
     */
//    public void updateCollectButton(String str) {
//        if (str == null) {
//            return;
//        }
//        switch (str) {
//            case "1":
//                collectButton1.doClick();
//                break;
//            case "2":
//                collectButton2.doClick();
//                break;
//            case "3":
//                collectButton3.doClick();
//                break;
//            case "4":
//                collectButton4.doClick();
//                break;
//            default:
//                break;
//        }
//    }
    /**
     * 根据所给数字更新代收面板上按键选择
     *
     * @param str 所给数字
     */
    public void updateCollectButtonNew(String str) {
        if (str == null) {
            return;
        }
        if (!str.matches("[0-9]")) {//不符合按键规则
            return;
        }
        int i = Integer.parseInt(str);
        int collCnt = collButtonList.size();//代收金额数量
        if (i >= collCnt) {//按键超过了代收金额数量
            return;
        }
        JRadioButton button = collButtonList.get(i);//获取对应的按键
        button.doClick();
    }

    /**
     * 获取代收选择结果
     *
     * @return 代收结果
     */
    public int getCollectResult() {
        if (collectButton1.isSelected()) {
            return 5;
        } else if (collectButton2.isSelected()) {
            return 10;
        } else if (collectButton3.isSelected()) {
            return 15;
        } else if (collectButton4.isSelected()) {
            return 0;
        } else {
            return 0;
        }
    }

    /**
     * 获取代收选择结果
     *
     * @return 代收结果
     */
    public int getCollectResultNew() {
        return collectButtonGroupNew.getSelection().getMnemonic();
    }

    /**
     * 显示代收通行费
     *
     * @param collectFee 代收费用
     * @param pay 通行费
     */
    public void showCollectFee(int collectFee, int pay) {
        jPanel6.setVisible(true);
        fareJPanel.setVisible(true);
//        fareJLabel2.setText(String.valueOf(pay));
        setFare(String.valueOf(pay));
        fareJLabel3.setText("含代收:" + collectFee);
    }

    /**
     * 隐藏代收通行费界面
     */
    public void hideCollectFee() {
        jPanel6.setVisible(false);
        fareJPanel.setVisible(false);
        fareJLabel2.setText(null);
        fareJLabel3.setText(null);
    }

    public static final int Auto = 1;//自助发卡
    public static final int Manual = 2;//人工发卡

    /**
     * 更改发卡模式
     *
     * @param runningMode 发卡模式
     */
    public void updateRunningMode(int runningMode) {
        if (runningMode == Manual) {
            modeJLabel1.setText("人工");
            modeJLabel1.setBackground(Color.white);
            modeJLabel1.setOpaque(false);
        } else if (runningMode == Auto) {
            modeJLabel1.setText("自助");
            modeJLabel1.setBackground(Color.red);
            modeJLabel1.setOpaque(true);
        }

    }

    /**
     * 更新离线倒计时信息
     *
     * @param str 离线倒计时信息
     */
    public void updateOffLineInfo(String str) {
        offLineJPanel1.setVisible(false);
        offLineJPanel2.setVisible(true);
        offLineJLabel3.setText(str);
    }

    /**
     * 显示在线信息
     */
    public void updateOnlineInfo() {
        offLineJPanel1.setVisible(true);
        offLineJPanel2.setVisible(false);
    }
    private JRadioButton vehQueButton1;
    private JRadioButton vehQueButton2;
    private JRadioButton vehQueButton3;
    private JRadioButton vehQueButton4;
    private JRadioButton vehQueButton5;
    private JRadioButton vehQueButton6;

    /**
     * 初始化车辆队列面板
     */
    private void initVehQuePanel() {
        vehQueButton1 = new JRadioButton();
        vehQueButton2 = new JRadioButton();
        vehQueButton3 = new JRadioButton();
        vehQueButton4 = new JRadioButton();
        vehQueButton5 = new JRadioButton();
        vehQueButton6 = new JRadioButton();
        vehQueButtonGroup.add(vehQueButton1);
        vehQueButton1.setMnemonic('1');
        vehQueButton1.setText("1-修改车辆信息");
        vehQueButton1.setFont(new Font("宋体", Font.BOLD, 24));
        vehQueButton1.setBackground(Color.white);
        vehQueJPanel.add(vehQueButton1);

        vehQueButtonGroup.add(vehQueButton2);
        vehQueButton2.setMnemonic('2');
        vehQueButton2.setText("2-修改一个轴组信息");
        vehQueButton2.setFont(new Font("宋体", Font.BOLD, 24));
        vehQueButton2.setBackground(Color.white);
        vehQueJPanel.add(vehQueButton2);

        vehQueButtonGroup.add(vehQueButton3);
        vehQueButton3.setMnemonic('3');
        vehQueButton3.setText("3-添加车辆信息");
        vehQueButton3.setFont(new Font("宋体", Font.BOLD, 24));
        vehQueButton3.setBackground(Color.white);
        vehQueJPanel.add(vehQueButton3);

        vehQueButtonGroup.add(vehQueButton4);
        vehQueButton4.setMnemonic('4');
        vehQueButton4.setText("4-删除车辆信息");
        vehQueButton4.setFont(new Font("宋体", Font.BOLD, 24));
        vehQueButton4.setBackground(Color.white);
        vehQueJPanel.add(vehQueButton4);

        vehQueButtonGroup.add(vehQueButton5);
        vehQueButton5.setMnemonic('5');
        vehQueButton5.setText("5-拖车");
        vehQueButton5.setFont(new Font("宋体", Font.BOLD, 24));
        vehQueButton5.setBackground(Color.white);
        vehQueJPanel.add(vehQueButton5);

        vehQueButtonGroup.add(vehQueButton6);
        vehQueButton6.setMnemonic('6');
        vehQueButton6.setText("6-长车");
        vehQueButton6.setFont(new Font("宋体", Font.BOLD, 24));
        vehQueButton6.setBackground(Color.white);
        vehQueJPanel.add(vehQueButton6);
    }

    private JRadioButton cartButton1;
    private JRadioButton cartButton2;
    private JRadioButton cartButton3;
    private JRadioButton cartButton4;
    private JRadioButton cartButton5;
    private JRadioButton cartButton6;
    private JRadioButton cartButton7;
    private JRadioButton cartButton8;
    private JRadioButton cartButton9;
    private JRadioButton cartButton10;

    /**
     * 初始化卡机面板
     */
    private void initCartPanel() {
        cartButton1 = new JRadioButton();
        cartButton2 = new JRadioButton();
        cartButton3 = new JRadioButton();
        cartButton4 = new JRadioButton();
        cartButton5 = new JRadioButton();
        cartButton6 = new JRadioButton();
        cartButton7 = new JRadioButton();
        cartButton8 = new JRadioButton();
        cartButton9 = new JRadioButton();
        cartButton10 = new JRadioButton();
        cartButtonGroup.add(cartButton1);
        cartButton1.setMnemonic('1');
        cartButton1.setBackground(Color.white);
        cartButton1.setFont(new Font("宋体", Font.BOLD, 24));
        cartButton1.setText("1 - 更换卡箱");
        cardRoomJPanel.add(cartButton1);

        cartButtonGroup.add(cartButton2);
        cartButton2.setMnemonic('2');
        cartButton2.setBackground(Color.white);
        cartButton2.setFont(new Font("宋体", Font.BOLD, 24));
        cartButton2.setText("2 - 强行取出卡箱");
        cardRoomJPanel.add(cartButton2);

        cartButtonGroup.add(cartButton3);
        cartButton3.setMnemonic('3');
        cartButton3.setBackground(Color.white);
        cartButton3.setFont(new Font("宋体", Font.BOLD, 24));
        cartButton3.setText("3 - 装入卡箱");
        cardRoomJPanel.add(cartButton3);

        cartButtonGroup.add(cartButton4);
        cartButton4.setMnemonic('4');
        cartButton4.setBackground(Color.white);
        cartButton4.setFont(new Font("宋体", Font.BOLD, 24));
        cartButton4.setText("4 - 交接卡箱");
        cardRoomJPanel.add(cartButton4);

        cartButtonGroup.add(cartButton5);
        cartButton5.setMnemonic('5');
        cartButton5.setBackground(Color.white);
        cartButton5.setFont(new Font("宋体", Font.BOLD, 24));
        cartButton5.setText("5 - 无卡");
        cardRoomJPanel.add(cartButton5);

        cartButtonGroup.add(cartButton6);
        cartButton6.setMnemonic('6');
        cartButton6.setBackground(Color.white);
        cartButton6.setFont(new Font("宋体", Font.BOLD, 24));
        cartButton6.setText("6 - 不可读卡");
        cardRoomJPanel.add(cartButton6);

        cartButtonGroup.add(cartButton7);
        cartButton7.setMnemonic('7');
        cartButton7.setBackground(Color.white);
        cartButton7.setFont(new Font("宋体", Font.BOLD, 24));
        cartButton7.setText("7 - 残卡");
        cardRoomJPanel.add(cartButton7);

        cartButtonGroup.add(cartButton8);
        cartButton8.setMnemonic('8');
        cartButton8.setBackground(Color.white);
        cartButton8.setFont(new Font("宋体", Font.BOLD, 24));
        cartButton8.setText("8 - 拿开坏卡");
        cardRoomJPanel.add(cartButton8);

        cartButtonGroup.add(cartButton9);
        cartButton9.setMnemonic('9');
        cartButton9.setBackground(Color.white);
        cartButton9.setFont(new Font("宋体", Font.BOLD, 24));
        cartButton9.setText("9 - 预编码卡");
        cardRoomJPanel.add(cartButton9);

        cartButtonGroup.add(cartButton10);
        cartButton10.setMnemonic('A');
        cartButton10.setBackground(Color.white);
        cartButton10.setFont(new Font("宋体", Font.BOLD, 24));
        cartButton10.setText("00 - 查看营运参数");
        cardRoomJPanel.add(cartButton10);
    }
    private JRadioButton simuButton1;
    private JRadioButton simuButton2;
    private JRadioButton simuButton3;
    private JRadioButton simuButton4;
    private JRadioButton simuButton5;

    /**
     * 初始化模拟面板
     */
    private void initSimuPanel() {
        simuButton1 = new JRadioButton();
        simuButton2 = new JRadioButton();
        simuButton3 = new JRadioButton();
        simuButton4 = new JRadioButton();
        simuButton5 = new JRadioButton();
        simulateButtonGroup.add(simuButton1);
        simuButton1.setBackground(Color.white);
        simuButton1.setFont(new Font("宋体", Font.BOLD, 24));
        simuButton1.setMnemonic('1');
        simuButton1.setText("1 - 模拟通行");
        simulateJPanel.add(simuButton1);

        simulateButtonGroup.add(simuButton2);
        simuButton2.setBackground(Color.white);
        simuButton2.setFont(new Font("宋体", Font.BOLD, 24));
        simuButton2.setMnemonic('2');
        simuButton2.setText("2 - 更改车型 / 更改车种");
        simulateJPanel.add(simuButton2);

        simulateButtonGroup.add(simuButton3);
        simuButton3.setBackground(Color.white);
        simuButton3.setFont(new Font("宋体", Font.BOLD, 24));
        simuButton3.setMnemonic('3');
        simuButton3.setText("3 - 被拖车");
        simulateJPanel.add(simuButton3);

        simulateButtonGroup.add(simuButton4);
        simuButton4.setBackground(Color.white);
        simuButton4.setFont(new Font("宋体", Font.BOLD, 24));
        simuButton4.setMnemonic('4');
        simuButton4.setText("4 - 重打印发票");
        simulateJPanel.add(simuButton4);

        simulateButtonGroup.add(simuButton5);
        simuButton5.setBackground(Color.white);
        simuButton5.setFont(new Font("宋体", Font.BOLD, 24));
        simuButton5.setMnemonic('5');
        simuButton5.setText("5 - 更改代收");
        simulateJPanel.add(simuButton5);
    }

    private JRadioButton collectButton1;
    private JRadioButton collectButton2;
    private JRadioButton collectButton3;
    private JRadioButton collectButton4;

    /**
     * 初始化代收面板
     */
    private void initCollectPanel() {
//        collectButton1 = new JRadioButton();
//        collectButton2 = new JRadioButton();
//        collectButton3 = new JRadioButton();
//        collectButton4 = new JRadioButton();
//        collectButtonGroup.add(collectButton1);
//        collectButton1.setBackground(Color.white);
//        collectButton1.setFont(new Font("宋体", Font.BOLD, 24));
//        collectButton1.setSelected(true);
//        collectButton1.setText("1 - 代收5元");
//        collectJPanel.add(collectButton1);
//
//        collectButtonGroup.add(collectButton2);
//        collectButton2.setBackground(Color.white);
//        collectButton2.setFont(new Font("宋体", Font.BOLD, 24));
//        collectButton2.setText("2 - 代收10元");
//        collectJPanel.add(collectButton2);
//
//        collectButtonGroup.add(collectButton3);
//        collectButton3.setBackground(Color.white);
//        collectButton3.setFont(new Font("宋体", Font.BOLD, 24));
//        collectButton3.setText("3 - 代收15元");
//        collectJPanel.add(collectButton3);
//
//        collectButtonGroup.add(collectButton4);
//        collectButton4.setBackground(Color.white);
//        collectButton4.setFont(new Font("宋体", Font.BOLD, 24));
//        collectButton4.setText("4 - 无代收");
//        collectJPanel.add(collectButton4);
    }

    List<JRadioButton> collButtonList = new ArrayList<JRadioButton>();//代收按钮集合

    /**
     * 初始化代收面板
     */
    public void initCollectPanel(List<String> collectBuffer) {
        if (collectBuffer == null) {
            return;
        }
        int len = collectBuffer.size();
        if (len == 0) {
            return;
        }
        List<String> list = new ArrayList();
        for (String str : collectBuffer) {
            if (str == null) {
                continue;
            }
            String temp = str.trim();
            if (temp.matches("[0-9]{1,6}")) {//检验代收金额是否符合要求
                list.add(temp);
            }
        }
        len = list.size();
        for (int i = 0; i < len; i++) {
            String str = list.get(i);
            int collectMoney = Integer.parseInt(str);
            StringBuilder sb = new StringBuilder();
            sb.append(i).append(" - ");
            if (collectMoney == 0) {
                sb.append("无代收");
            } else {
                sb.append("代收").append(collectMoney).append("元");
            }
            JRadioButton collectButton = new JRadioButton();
            collectButton.setMnemonic(collectMoney);
            collectButton.setText(sb.toString());
            collectButtonGroupNew.add(collectButton);
            collButtonList.add(collectButton);
            collectButton.setBackground(Color.white);
            collectButton.setFont(new Font("宋体", Font.BOLD, 24));
            collectJPanel.add(collectButton);
        }
    }

    private JRadioButton shaftButton1;
    private JRadioButton shaftButton2;
    private JRadioButton shaftButton3;
    private JRadioButton shaftButton4;
    private JRadioButton shaftButton5;
    private JRadioButton shaftButton6;
    private JRadioButton shaftButton7;
    private JRadioButton shaftButton8;
    private JRadioButton shaftButton9;
    private JLabel shaftjLabel1;
    private JLabel shaftjLabel2;
    private JLabel shaftjLabel3;
    private JLabel shaftjLabel4;
    private JLabel shaftjLabel5;
    private JLabel shaftjLabel6;
    private JLabel shaftjLabel7;
    private JLabel shaftjLabel8;
    private JLabel shaftjLabel9;

    /**
     * 初始化轴组列表面板
     */
    private void initShaftPanel() {
        shaftButton1 = new JRadioButton();
//        shaftjLabel1 = new JLabel();
        shaftjLabel1 = new AgJLabel();

        shaftButton2 = new JRadioButton();
//        shaftjLabel2 = new JLabel();
        shaftjLabel2 = new AgJLabel();

        shaftButton3 = new JRadioButton();
//        shaftjLabel3 = new JLabel();
        shaftjLabel3 = new AgJLabel();

        shaftButton4 = new JRadioButton();
//        shaftjLabel4 = new JLabel();
        shaftjLabel4 = new AgJLabel();

        shaftButton5 = new JRadioButton();
//        shaftjLabel5 = new JLabel();
        shaftjLabel5 = new AgJLabel();
        shaftButton6 = new JRadioButton();
//        shaftjLabel6 = new JLabel();
        shaftjLabel6 = new AgJLabel();
        shaftButton7 = new JRadioButton();
//        shaftjLabel7 = new JLabel();
        shaftjLabel7 = new AgJLabel();
        shaftButton8 = new JRadioButton();
//        shaftjLabel8 = new JLabel();
        shaftjLabel8 = new AgJLabel();
        shaftButton9 = new JRadioButton();
//        shaftjLabel9 = new JLabel();
        shaftjLabel9 = new AgJLabel();
        buttonGroup2.add(shaftButton1);
        shaftButton1.setText("1 - 0.72吨");
        shaftButton1.setFont(new Font("宋体", Font.BOLD, 24));
        shaftButton1.setBackground(Color.white);
        vehShaftJPanel.add(shaftButton1);

        vehShaftJPanel.add(shaftjLabel1);

        buttonGroup2.add(shaftButton2);
        shaftButton2.setText("2 - 0.72吨");
        shaftButton2.setFont(new Font("宋体", Font.BOLD, 24));
        shaftButton2.setBackground(Color.white);
        vehShaftJPanel.add(shaftButton2);

        vehShaftJPanel.add(shaftjLabel2);

        buttonGroup2.add(shaftButton3);
        shaftButton3.setText("3 - 0.72吨");
        shaftButton3.setFont(new Font("宋体", Font.BOLD, 24));
        shaftButton3.setBackground(Color.white);
        vehShaftJPanel.add(shaftButton3);

        vehShaftJPanel.add(shaftjLabel3);

        buttonGroup2.add(shaftButton4);
        shaftButton4.setText("4 - 0.72吨");
        shaftButton4.setFont(new Font("宋体", Font.BOLD, 24));
        shaftButton4.setBackground(Color.white);
        vehShaftJPanel.add(shaftButton4);

        vehShaftJPanel.add(shaftjLabel4);

        buttonGroup2.add(shaftButton5);
        shaftButton5.setText("5 - 0.72吨");
        shaftButton5.setFont(new Font("宋体", Font.BOLD, 24));
        shaftButton5.setBackground(Color.white);
        vehShaftJPanel.add(shaftButton5);

        vehShaftJPanel.add(shaftjLabel5);

        buttonGroup2.add(shaftButton6);
        shaftButton6.setText("6 - 0.72吨");
        shaftButton6.setFont(new Font("宋体", Font.BOLD, 24));
        shaftButton6.setBackground(Color.white);
        vehShaftJPanel.add(shaftButton6);

        vehShaftJPanel.add(shaftjLabel6);

        buttonGroup2.add(shaftButton7);
        shaftButton7.setText("7 - 0.72吨");
        shaftButton7.setFont(new Font("宋体", Font.BOLD, 24));
        shaftButton7.setBackground(Color.white);
        vehShaftJPanel.add(shaftButton7);

        vehShaftJPanel.add(shaftjLabel7);

        buttonGroup2.add(shaftButton8);
        shaftButton8.setText("8 - 0.72吨");
        shaftButton8.setFont(new Font("宋体", Font.BOLD, 24));
        shaftButton8.setBackground(Color.white);
        vehShaftJPanel.add(shaftButton8);

        vehShaftJPanel.add(shaftjLabel8);

        buttonGroup2.add(shaftButton9);
        shaftButton9.setText("9 - 0.72吨");
        shaftButton9.setFont(new Font("宋体", Font.BOLD, 24));
        shaftButton9.setBackground(Color.white);
        vehShaftJPanel.add(shaftButton9);
    }

    private JRadioButton alarmButton1;
    private JRadioButton alarmButton2;
    private JRadioButton alarmButton3;
    private JRadioButton alarmButton4;
    private JRadioButton alarmButton5;
    private JRadioButton alarmButton6;

    /**
     * 初始化报警界面
     */
    private void initAlarmPanel() {
        alarmButton1 = new JRadioButton();
        alarmButton2 = new JRadioButton();
        alarmButton3 = new JRadioButton();
        alarmButton4 = new JRadioButton();
        alarmButton5 = new JRadioButton();
        alarmButton6 = new JRadioButton();
        alarmButtonGroup.add(alarmButton1);
        alarmButton1.setMnemonic('1');
        alarmButton1.setText("1 - 倒车");
        alarmButton1.setFont(new Font("宋体", Font.BOLD, 24));
        alarmButton1.setBackground(Color.white);
        alarmJPanel.add(alarmButton1);

        alarmButtonGroup.add(alarmButton2);
        alarmButton2.setMnemonic('2');
        alarmButton2.setText("2 - 长车");
        alarmButton2.setFont(new Font("宋体", Font.BOLD, 24));
        alarmButton2.setBackground(Color.white);
        alarmJPanel.add(alarmButton2);

        alarmButtonGroup.add(alarmButton3);
        alarmButton3.setMnemonic('3');
        alarmButton3.setText("3 - 一般违章");
        alarmButton3.setFont(new Font("宋体", Font.BOLD, 24));
        alarmButton3.setBackground(Color.white);
        alarmJPanel.add(alarmButton3);

        alarmButtonGroup.add(alarmButton4);
        alarmButton4.setMnemonic('4');
        alarmButton4.setSelected(true);
        alarmButton4.setText("4 - 误报警");
        alarmButton4.setFont(new Font("宋体", Font.BOLD, 24));
        alarmButton4.setBackground(Color.white);
        alarmJPanel.add(alarmButton4);

        alarmButtonGroup.add(alarmButton5);
        alarmButton5.setMnemonic('5');
        alarmButton5.setFont(new Font("宋体", Font.BOLD, 24));
        alarmButton5.setBackground(Color.white);
        alarmButton5.setText("5 - 用户匆忙");
        alarmJPanel.add(alarmButton5);

        alarmButtonGroup.add(alarmButton6);
        alarmButton6.setMnemonic('6');
        alarmButton6.setText("6 - 被拖车");
        alarmButton6.setFont(new Font("宋体", Font.BOLD, 24));
        alarmButton6.setBackground(Color.white);
        alarmJPanel.add(alarmButton6);

    }

    private JRadioButton agButton1;
    private JRadioButton agButton2;
    private JRadioButton agButton3;
    private JRadioButton agButton4;
    private JRadioButton agButton5;
    private JRadioButton agButton6;
    private JRadioButton agButton7;
    private JRadioButton agButton8;
    private JRadioButton agButton9;
    private JLabel agLabel1;
    private JLabel agLabel2;
    private JLabel agLabel3;
    private JLabel agLabel4;
    private JLabel agLabel5;
    private JLabel agLabel6;
    private JLabel agLabel7;
    private JLabel agLabel8;
    private JLabel agLabel9;

    /**
     * 初始化轴组类型列表
     */
    private void initAxleTypePanel() {
        agButton1 = new JRadioButton();
        agLabel1 = new AgJLabel("01", 0);
        agButton2 = new JRadioButton();
        agLabel2 = new AgJLabel("02", 0);
        agButton3 = new JRadioButton();
        agLabel3 = new AgJLabel("03", 0);
        agButton4 = new JRadioButton();
        agLabel4 = new AgJLabel("04", 0);
        agButton5 = new JRadioButton();
        agLabel5 = new AgJLabel("05", 0);
        agButton6 = new JRadioButton();
        agLabel6 = new AgJLabel("06", 0);
        agButton7 = new JRadioButton();
        agLabel7 = new AgJLabel("07", 0);
        agButton8 = new JRadioButton();
        agLabel8 = new AgJLabel("08", 0);
        agButton9 = new JRadioButton();
        agLabel9 = new AgJLabel("09", 0);

        axleTypeButtonGroup.add(agButton1);
        agButton1.setMnemonic('1');
        agButton1.setText("1 - 0.5吨");
        agButton1.setFont(new Font("宋体", Font.BOLD, 24));
        agButton1.setBackground(Color.white);
        axleTypeJPanel.add(agButton1);

        axleTypeJPanel.add(agLabel1);

        axleTypeButtonGroup.add(agButton2);
        agButton2.setMnemonic('2');
        agButton2.setText("2 - 0.5吨");
        agButton2.setFont(new Font("宋体", Font.BOLD, 24));
        agButton2.setBackground(Color.white);
        axleTypeJPanel.add(agButton2);

        axleTypeJPanel.add(agLabel2);

        axleTypeButtonGroup.add(agButton3);
        agButton3.setMnemonic('3');
        agButton3.setText("3 - 0.5吨");
        agButton3.setFont(new Font("宋体", Font.BOLD, 24));
        agButton3.setBackground(Color.white);
        axleTypeJPanel.add(agButton3);

        axleTypeJPanel.add(agLabel3);

        axleTypeButtonGroup.add(agButton4);
        agButton4.setMnemonic('4');
        agButton4.setText("4 - 0.5吨");
        agButton4.setFont(new Font("宋体", Font.BOLD, 24));
        agButton4.setBackground(Color.white);
        axleTypeJPanel.add(agButton4);

        axleTypeJPanel.add(agLabel4);

        axleTypeButtonGroup.add(agButton5);
        agButton5.setMnemonic('5');
        agButton5.setText("5 - 0.5吨");
        agButton5.setFont(new Font("宋体", Font.BOLD, 24));
        agButton5.setBackground(Color.white);
        axleTypeJPanel.add(agButton5);

        axleTypeJPanel.add(agLabel5);

        axleTypeButtonGroup.add(agButton6);
        agButton6.setMnemonic('6');
        agButton6.setText("6 - 0.5吨");
        agButton6.setFont(new Font("宋体", Font.BOLD, 24));
        agButton6.setBackground(Color.white);
        axleTypeJPanel.add(agButton6);

        axleTypeJPanel.add(agLabel6);

        axleTypeButtonGroup.add(agButton7);
        agButton7.setMnemonic('7');
        agButton7.setSelected(true);
        agButton7.setText("7 - 0.5吨");
        agButton7.setFont(new Font("宋体", Font.BOLD, 24));
        agButton7.setBackground(Color.white);
        axleTypeJPanel.add(agButton7);

        axleTypeJPanel.add(agLabel7);

        axleTypeButtonGroup.add(agButton8);
        agButton8.setMnemonic('8');
        agButton8.setText("8 - 0.5吨");
        agButton8.setFont(new Font("宋体", Font.BOLD, 24));
        agButton8.setBackground(Color.white);
        axleTypeJPanel.add(agButton8);

        axleTypeJPanel.add(agLabel8);

        axleTypeButtonGroup.add(agButton9);
        agButton9.setMnemonic('9');
        agButton9.setText("9 - 0.5吨");
        agButton9.setFont(new Font("宋体", Font.BOLD, 24));
        agButton9.setBackground(Color.white);
        axleTypeJPanel.add(agButton9);

        axleTypeJPanel.add(agLabel9);

    }

    private javax.swing.JLabel point1;
    private javax.swing.JLabel point10;
    private javax.swing.JLabel point2;
    private javax.swing.JLabel point3;
    private javax.swing.JLabel point4;
    private javax.swing.JLabel point5;
    private javax.swing.JLabel point6;
    private javax.swing.JLabel point7;
    private javax.swing.JLabel point8;
    private javax.swing.JLabel point9;

    /**
     * 初始化车牌号码光标指示栏
     */
    private void initPoints() {
        int x = 12;
        int y = 50;
        point1 = new CursorJLabel(x, y);
        jPanel4.add(point1);

        point2 = new CursorJLabel(x, y);
        jPanel4.add(point2);

        point3 = new CursorJLabel(x, y);
        jPanel4.add(point3);

        point4 = new CursorJLabel(x, y);
        jPanel4.add(point4);

        point5 = new CursorJLabel(x, y);
        jPanel4.add(point5);

        point6 = new CursorJLabel(x, y);
        jPanel4.add(point6);

        point7 = new CursorJLabel(x, y);
        jPanel4.add(point7);

        point8 = new CursorJLabel(x, y);
        jPanel4.add(point8);

        point9 = new CursorJLabel(x, y);
        jPanel4.add(point9);

        point10 = new CursorJLabel(x, y);
        jPanel4.add(point10);
    }

    /**
     * 异步显示界面
     */
    public void showMySelf() {
        ThreadPoolControl.getThreadPoolInstance().execute(new Runnable() {
            @Override
            public void run() {
                if (extJFrame != null) {
                    extJFrame.init(Lane.getInstance());
                    extJFrame.setVisible(true);
                    extJFrame.setFocusable(true);
//                     extJFrame.requestFocus();
                    extJFrame.setAutoRequestFocus(true);
                    extJFrame.setAlwaysOnTop(true);
                }
            }
        });
    }

    /**
     * 初始化前端显示框（单独线程进行，不占用主线程时间）
     */
    private void initFocusJFrame() {
        ThreadPoolControl.getThreadPoolInstance().execute(new Runnable() {
            @Override
            public void run() {
                FocusJFrame focJFrame = FocusJFrame.getSingleInstance();
                focJFrame.setVisible(true);
            }
        });
    }

    /**
     * 设置信息显示去字体颜色
     *
     * @param c 字体颜色
     */
    public void setMsgForeground(Color c) {
        mainMsgJLabel.setForeground(c);
        msgJLabel.setForeground(c);
    }

    /**
     * 设置背景颜色
     *
     * @param c 背景颜色
     */
    public void setContentBackground(Color c) {
        getContentPane().setBackground(c);
    }
    private JLabel rtpJLabel1;
    private JLabel rtpJLabel2;
    private JLabel rtpJLabel3;
    private JLabel rtpJLabel4;
    private JLabel rtpJLabel5;
    private JLabel rtpJLabel6;
    private JLabel rtpJLabel7;
    private JLabel rtpJLabel8;
    private JLabel rtpJLabel9;
    private JLabel rtpJLabel10;

    /**
     * 初始化路径信息面板
     */
    private void initRtpPanel() {
        rtpJLabel1 = new JLabel();
        rtpJLabel1.setOpaque(true);
        rtpJLabel1.setBackground(Color.white);
        rtpJPanel.add(rtpJLabel1);
        rtpJLabel2 = new JLabel();
        rtpJLabel2.setOpaque(true);
        rtpJLabel2.setBackground(Color.white);
        rtpJPanel.add(rtpJLabel2);
        rtpJLabel3 = new JLabel();
        rtpJLabel3.setOpaque(true);
        rtpJLabel3.setBackground(Color.white);
        rtpJPanel.add(rtpJLabel3);
        rtpJLabel4 = new JLabel();
        rtpJLabel4.setOpaque(true);
        rtpJLabel4.setBackground(Color.white);
        rtpJPanel.add(rtpJLabel4);
        rtpJLabel5 = new JLabel();
        rtpJLabel5.setOpaque(true);
        rtpJLabel5.setBackground(Color.white);
        rtpJPanel.add(rtpJLabel5);
        rtpJLabel6 = new JLabel();
        rtpJLabel6.setOpaque(true);
        rtpJLabel6.setBackground(Color.white);
        rtpJPanel.add(rtpJLabel6);
        rtpJLabel7 = new JLabel();
        rtpJLabel7.setOpaque(true);
        rtpJLabel7.setBackground(Color.white);
        rtpJPanel.add(rtpJLabel7);
        rtpJLabel8 = new JLabel();
        rtpJLabel8.setOpaque(true);
        rtpJLabel8.setBackground(Color.white);
        rtpJPanel.add(rtpJLabel8);
        rtpJLabel9 = new JLabel();
        rtpJLabel9.setOpaque(true);
        rtpJLabel9.setBackground(Color.white);
        rtpJPanel.add(rtpJLabel9);
        rtpJLabel10 = new JLabel();
        rtpJLabel10.setOpaque(true);
        rtpJLabel10.setBackground(Color.white);
        rtpJPanel.add(rtpJLabel10);

    }

    /**
     * 显示实时路径信息界面
     *
     * @param list 实时路径信息
     * @param startIndex 需要显示的信息的开始下标（包含）
     * @param endIndex 需要显示的信息的结束下标(包含)
     */
    public void showRtpPanel(List<String> list, int startIndex, int endIndex) {
        if (list == null || list.isEmpty()) {
            return;
        }
        Collections.sort(list);
        int len = list.size();
        if (startIndex > endIndex) {//开始下标大于结束下标
            return;
        }
        if (startIndex > len) {//开始下标超过了需要显示的信息的长度
            return;
        }
        if (endIndex > len - 1) {
            endIndex = len - 1;
        }
        List<String> subList = list.subList(startIndex, endIndex + 1);//获取需要显示的集合
        len = subList.size();
        if (len > 10) {
            len = 10;
        }
        if (len >= 1) {
            rtpJLabel1.setText(subList.get(0));
        }
        if (len >= 2) {
            rtpJLabel2.setText(subList.get(1));
        }
        if (len >= 3) {
            rtpJLabel3.setText(subList.get(2));
        }
        if (len >= 4) {
            rtpJLabel4.setText(subList.get(3));
        }
        if (len >= 5) {
            rtpJLabel5.setText(subList.get(4));
        }
        if (len >= 6) {
            rtpJLabel6.setText(subList.get(5));
        }
        if (len >= 7) {
            rtpJLabel7.setText(subList.get(6));
        }
        if (len >= 8) {
            rtpJLabel8.setText(subList.get(7));
        }
        if (len >= 9) {
            rtpJLabel9.setText(subList.get(8));
        }
        if (len >= 10) {
            rtpJLabel10.setText(subList.get(9));
        }
        hideCentralPanel();
        rtpJPanel.setVisible(true);
        TitledBorder tb = (TitledBorder) rtpJPanel.getBorder();
        tb.setTitle("识别点信息(" + list.size() + ")");
    }

    /**
     * 加亮显示实施路径信息指定区域
     *
     * @param i 指定区域
     */
    public void selectRtpPanel(int i) {
        switch (i) {
            case 1:
                rtpJLabel1.setBackground(Color.yellow);
                break;
            case 2:
                rtpJLabel2.setBackground(Color.yellow);
                break;
            case 3:
                rtpJLabel3.setBackground(Color.yellow);
                break;
            case 4:
                rtpJLabel4.setBackground(Color.yellow);
                break;
            case 5:
                rtpJLabel5.setBackground(Color.yellow);
                break;
            case 6:
                rtpJLabel6.setBackground(Color.yellow);
                break;
            case 7:
                rtpJLabel7.setBackground(Color.yellow);
                break;
            case 8:
                rtpJLabel8.setBackground(Color.yellow);
                break;
            case 9:
                rtpJLabel9.setBackground(Color.yellow);
                break;
            case 10:
                rtpJLabel10.setBackground(Color.yellow);
                break;
            default:
                break;
        }
    }

    /**
     * 重新初始化路径识别面板
     */
    public void clearRtpInfo() {
        rtpJLabel1.setText(null);
        rtpJLabel2.setText(null);
        rtpJLabel3.setText(null);
        rtpJLabel4.setText(null);
        rtpJLabel5.setText(null);
        rtpJLabel6.setText(null);
        rtpJLabel7.setText(null);
        rtpJLabel8.setText(null);
        rtpJLabel9.setText(null);
        rtpJLabel10.setText(null);
        rtpImgJLabel.setIcon(null);
    }

    /**
     * 显示识别点图片
     *
     * @param rtpName 识别点名称
     * @param urlPath 识别点图片地址
     */
    public void showRtpImgPanel(String rtpName, final String urlPath) {
        hideCentralPanel();
        TitledBorder tb = (TitledBorder) rtpImgPanel.getBorder();
        tb.setTitle(rtpName);
        rtpImgPanel.setVisible(true);
        ThreadPoolControl.getThreadPoolInstance().execute(new Runnable() {
            public void run() {
                try {
                    URL url = new URL(urlPath);
                    ImageIcon img = new ImageIcon(url);
                    img.setImage(img.getImage().getScaledInstance(rtpImgJLabel.getWidth(), rtpImgJLabel.getHeight(), Image.SCALE_DEFAULT));
                    rtpImgJLabel.setIcon(img);
                } catch (MalformedURLException ex) {
                    LogControl.logInfo(ex.toString(), ex);
                }
            }
        });
    }

    /**
     * 最前端显示
     */
    public void showOnTop() {
        if (FocusJFrame.getSingleInstance().isFocused()) {
            this.setAlwaysOnTop(true);
        }
    }

    /**
     * 最前端显示
     */
    public void showOnTopNew() {
        if (FocusJFrame.getSingleInstance().isFocused()) {
            if (AlarmJFrame.getSingleInstance().isVisible()) {
                AlarmJFrame.getSingleInstance().setAlwaysOnTop(true);
            } else if (EntMsgJFrame.getSingleInstance().isVisible()) {
                EntMsgJFrame.getSingleInstance().setAlwaysOnTop(true);
            } else if (EntryJFrame.getSingleInstance().isVisible()) {
                EntryJFrame.getSingleInstance().setAlwaysOnTop(true);
            } else if (InfoJFrame.getSingleInstance().isVisible()) {
                InfoJFrame.getSingleInstance().setAlwaysOnTop(true);
            } else if (LoginJFrame.getSingleInstance().isVisible()) {
                LoginJFrame.getSingleInstance().setAlwaysOnTop(true);
            } else if (LogoutJFrame.getSingleInstance().isVisible()) {
                LogoutJFrame.getSingleInstance().setAlwaysOnTop(true);
            } else if (MilitaryVehHintJFrame.getSingleInstance().isVisible()) {
                MilitaryVehHintJFrame.getSingleInstance().setAlwaysOnTop(true);
            } else if (ParaJFrame.getSingleInstance().isVisible()) {
                ParaJFrame.getSingleInstance().setAlwaysOnTop(true);
            } else if (RunningModeJFrame.getSingleInstance().isVisible()) {
                RunningModeJFrame.getSingleInstance().setAlwaysOnTop(true);
            } else {
                this.setAlwaysOnTop(true);
            }
        }
    }

    /**
     * 显示字轨号输入面板
     */
    public void showTicketJPanel2() {
        ticketJPanel2.setVisible(true);
    }

    /**
     * 隐藏字轨号输入面板
     */
    public void hideTicketJPanel2() {
        ticketJPanel2.setVisible(false);
    }

    /**
     * 更新字轨号
     *
     * @param str 字轨号
     */
    public void updateTicketJPanel2(String str) {
        ticketJLabel2.setText(str);
    }
    private AgJLabel veh1JLabel1;
    private AgJLabel veh1JLabel3;
    private AgJLabel veh1JLabel5;
    private AgJLabel veh1JLabel7;

    private AgJLabel veh2JLabel1;
    private AgJLabel veh2JLabel3;
    private AgJLabel veh2JLabel5;
    private AgJLabel veh2JLabel7;

    private AgJLabel veh3JLabel1;
    private AgJLabel veh3JLabel3;
    private AgJLabel veh3JLabel5;
    private AgJLabel veh3JLabel7;

    /**
     * 初始化车辆轴组标签
     */
    private void initAgLabel() {
        int width = 117;
        int height = 27;
        veh1JLabel1 = new AgJLabel();
        veh1JPanel.add(veh1JLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, width, height));

        veh1JLabel3 = new AgJLabel();
        veh1JPanel.add(veh1JLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 27, width, height));

        veh1JLabel5 = new AgJLabel();
        veh1JPanel.add(veh1JLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 54, width, height));

        veh1JLabel7 = new AgJLabel();
        veh1JPanel.add(veh1JLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 81, width, height));

        veh2JLabel1 = new AgJLabel();
        veh2JPanel.add(veh2JLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, width, height));

        veh2JLabel3 = new AgJLabel();
        veh2JPanel.add(veh2JLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 27, width, height));

        veh2JLabel5 = new AgJLabel();
        veh2JPanel.add(veh2JLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 54, width, height));

        veh2JLabel7 = new AgJLabel();
        veh2JPanel.add(veh2JLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 81, width, height));

        veh3JLabel1 = new AgJLabel();
        veh3JPanel.add(veh3JLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, width, height));

        veh3JLabel3 = new AgJLabel();
        veh3JPanel.add(veh3JLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 27, width, height));

        veh3JLabel5 = new AgJLabel();
        veh3JPanel.add(veh3JLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 54, width, height));

        veh3JLabel7 = new AgJLabel();
        veh3JPanel.add(veh3JLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 81, width, height));

    }
    //到达线圈标签
    private ArriveCoilJLabel coilJLabel;

    /**
     * 初始化到达线圈的标签
     */
    private void initCoilLabel() {
        coilJLabel = new ArriveCoilJLabel();
        jPanel16.add(coilJLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 3, 175, 40));
    }
    //雨棚灯标签
    private LightJLabel lightJLabel;

    /**
     * 初始化雨棚灯的标签
     */
    private void initLightLabel() {
        lightJLabel = new LightJLabel();
        jPanel15.add(lightJLabel, new AbsoluteConstraints(5, 5, 120, 80));
    }

    /**
     * 更新特殊情况显示栏
     *
     * @param reason 特殊情况原因
     * @param status 特殊情况状态
     */
    public void updateSpecialInfo(String reason, String status) {
        specialJLabel1.setText(reason);
        updateSpecialStatus(status);
    }

    /**
     * 更新特殊情况状态
     *
     * @param status 特殊情况状态
     */
    public synchronized void updateSpecialStatus(String status) {
        String str = specialJLabel2.getText();
        if ((status == null || status.trim().isEmpty()) && "监控已断开".equals(str)) {//监控已断开时 不可将特殊原因置为空
            return;
        } else {
            specialJLabel2.setText(status);
        }
        if (SpecialIssue.CONFIRMED.equals(status)) {
            specialJLabel2.setForeground(new Color(0, 100, 0));
        } else {
            specialJLabel2.setForeground(Color.black);
        }

    }

    /**
     * 监控室连接断开时更新提示
     */
    public synchronized void updateAfterTcoOffLine() {
        String str = specialJLabel2.getText();
        if (str == null || str.trim().isEmpty()) {
            specialJLabel2.setText("监控已断开");
            specialJLabel2.setForeground(Color.red);
        }
    }

    /**
     * 监控室恢复连接时更新提示
     */
    public synchronized void updateAfterTcoOnLine() {
        String str = specialJLabel2.getText();
        if ("监控已断开".equals(str)) {
            specialJLabel2.setText(null);
            specialJLabel2.setForeground(Color.black);
        }
    }

    /**
     * 为视频初始化，并赋值。
     *
     * @param video
     */
    public static void setVideo(Video video) {
        ExtJFrame.video = video;
    }

    class TimeTask implements Runnable {

        @Override
        public void run() {
            while (true) {
                try {
                    Thread.sleep(1000);
                } catch (InterruptedException ex) {
                }
                SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
                String time = format.format(new Date());
                String[] ary = time.split(" ");
                String yTime = ary[0];
                String cTime = ary[1];
                dateJLabel.setText(yTime);
                timeJLabel.setText(cTime);
            }
        }
    }

    class RepaintTask implements Runnable {

        @Override
        public void run() {
            while (true) {
                try {
                    Thread.sleep(5000);
                } catch (InterruptedException ex) {
                    logger.error("RepaintTask异常", ex);
//                    Logger.getLogger(ExtJFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
                getContentPane().repaint();
            }
        }
    }
}
